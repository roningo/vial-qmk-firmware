   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB172:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #include <stdlib.h>
  19:quantum/rgblight.c **** #include "wait.h"
  20:quantum/rgblight.c **** #include "progmem.h"
  21:quantum/rgblight.c **** #include "sync_timer.h"
  22:quantum/rgblight.c **** #include "rgblight.h"
  23:quantum/rgblight.c **** #include "color.h"
  24:quantum/rgblight.c **** #include "debug.h"
  25:quantum/rgblight.c **** #include "led_tables.h"
  26:quantum/rgblight.c **** #include <lib/lib8tion/lib8tion.h>
  27:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  28:quantum/rgblight.c **** #    include "eeprom.h"
  29:quantum/rgblight.c **** #endif
  30:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  31:quantum/rgblight.c **** #    include "velocikey.h"
  32:quantum/rgblight.c **** #endif
  33:quantum/rgblight.c **** 
  34:quantum/rgblight.c **** #ifndef MIN
  35:quantum/rgblight.c **** #    define MIN(a, b) (((a) < (b)) ? (a) : (b))
  36:quantum/rgblight.c **** #endif
  37:quantum/rgblight.c **** #ifndef MAX
  38:quantum/rgblight.c **** #    define MAX(a, b) (((a) > (b)) ? (a) : (b))
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  42:quantum/rgblight.c **** /* for split keyboard */
  43:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  44:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  45:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  46:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  48:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  49:quantum/rgblight.c **** #else
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS
  54:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  55:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  56:quantum/rgblight.c **** #endif
  57:quantum/rgblight.c **** 
  58:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  59:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  60:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  61:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  62:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  63:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  64:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  65:quantum/rgblight.c **** #include "rgblight_modes.h"
  66:quantum/rgblight.c **** };
  67:quantum/rgblight.c **** 
  68:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  70:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  71:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  72:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  73:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  74:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  75:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  76:quantum/rgblight.c **** #include "rgblight_modes.h"
  77:quantum/rgblight.c **** };
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_MODE)
  80:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_MODE RGBLIGHT_MODE_STATIC_LIGHT
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_HUE)
  84:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_HUE 0
  85:quantum/rgblight.c **** #endif
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SAT)
  88:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SAT UINT8_MAX
  89:quantum/rgblight.c **** #endif
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_VAL)
  92:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_VAL RGBLIGHT_LIMIT_VAL
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SPD)
  96:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SPD 0
  97:quantum/rgblight.c **** #endif
  98:quantum/rgblight.c **** 
  99:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
 100:quantum/rgblight.c **** 
 101:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
 102:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
 103:quantum/rgblight.c **** #endif
 104:quantum/rgblight.c **** 
 105:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 106:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
 107:quantum/rgblight.c **** #endif
 108:quantum/rgblight.c **** 
 109:quantum/rgblight.c **** rgblight_config_t rgblight_config;
 110:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
 111:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
 112:quantum/rgblight.c **** 
 113:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 114:quantum/rgblight.c **** static bool is_suspended;
 115:quantum/rgblight.c **** static bool pre_suspend_enabled;
 116:quantum/rgblight.c **** #endif
 117:quantum/rgblight.c **** 
 118:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 119:quantum/rgblight.c **** animation_status_t animation_status = {};
 120:quantum/rgblight.c **** #endif
 121:quantum/rgblight.c **** 
 122:quantum/rgblight.c **** #ifndef LED_ARRAY
 123:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
 124:quantum/rgblight.c **** #    define LED_ARRAY led
 125:quantum/rgblight.c **** #endif
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 128:quantum/rgblight.c **** rgblight_segment_t const *const *rgblight_layers = NULL;
 129:quantum/rgblight.c **** #endif
 130:quantum/rgblight.c **** 
 131:quantum/rgblight.c **** rgblight_ranges_t rgblight_ranges = {0, RGBLED_NUM, 0, RGBLED_NUM, RGBLED_NUM};
 132:quantum/rgblight.c **** 
 133:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
 135:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
 136:quantum/rgblight.c **** }
 137:quantum/rgblight.c **** 
 138:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 139:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 140:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 141:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
 142:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
 143:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
 144:quantum/rgblight.c **** }
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c **** __attribute__((weak)) RGB rgblight_hsv_to_rgb(HSV hsv) { return hsv_to_rgb(hsv); }
 147:quantum/rgblight.c **** 
 148:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 149:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 150:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 151:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 152:quantum/rgblight.c **** }
 153:quantum/rgblight.c **** 
 154:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 155:quantum/rgblight.c **** 
 156:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 157:quantum/rgblight.c ****     led1->r = r;
 158:quantum/rgblight.c ****     led1->g = g;
 159:quantum/rgblight.c ****     led1->b = b;
 160:quantum/rgblight.c **** #ifdef RGBW
 161:quantum/rgblight.c ****     led1->w = 0;
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void rgblight_check_config(void) {
 166:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 167:quantum/rgblight.c **** 
 168:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 169:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 170:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 171:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 172:quantum/rgblight.c ****     }
 173:quantum/rgblight.c **** 
 174:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 175:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 176:quantum/rgblight.c ****     }
 177:quantum/rgblight.c **** }
 178:quantum/rgblight.c **** 
 179:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 180:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 181:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 182:quantum/rgblight.c **** #else
 183:quantum/rgblight.c ****     return 0;
 184:quantum/rgblight.c **** #endif
 185:quantum/rgblight.c **** }
 186:quantum/rgblight.c **** 
 187:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 188:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 189:quantum/rgblight.c ****     rgblight_check_config();
 190:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 191:quantum/rgblight.c **** #endif
 192:quantum/rgblight.c **** }
 193:quantum/rgblight.c **** 
 194:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 197:quantum/rgblight.c ****     rgblight_config.enable = 1;
 198:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 199:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 200:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 201:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 202:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 204:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 205:quantum/rgblight.c **** }
 206:quantum/rgblight.c **** 
 207:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 208:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 209:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 210:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 211:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 212:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 213:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 214:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 215:quantum/rgblight.c **** }
 216:quantum/rgblight.c **** 
 217:quantum/rgblight.c **** void rgblight_init(void) {
 218:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 219:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 220:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 221:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 222:quantum/rgblight.c ****         return;
 223:quantum/rgblight.c ****     }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 226:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 227:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 228:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 229:quantum/rgblight.c ****         eeconfig_init();
 230:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 231:quantum/rgblight.c ****     }
 232:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 233:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 234:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 235:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 236:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 237:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 238:quantum/rgblight.c ****     }
 239:quantum/rgblight.c ****     rgblight_check_config();
 240:quantum/rgblight.c **** 
 241:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 242:quantum/rgblight.c **** 
 243:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 244:quantum/rgblight.c **** 
 245:quantum/rgblight.c ****     if (rgblight_config.enable) {
 246:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 247:quantum/rgblight.c ****     }
 248:quantum/rgblight.c **** 
 249:quantum/rgblight.c ****     is_rgblight_initialized = true;
 250:quantum/rgblight.c **** }
 251:quantum/rgblight.c **** 
 252:quantum/rgblight.c **** void rgblight_reload_from_eeprom(void) {
 253:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 254:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 255:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 256:quantum/rgblight.c ****     rgblight_check_config();
 257:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 258:quantum/rgblight.c ****     if (rgblight_config.enable) {
 259:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 260:quantum/rgblight.c ****     }
 261:quantum/rgblight.c **** }
 262:quantum/rgblight.c **** 
 263:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 264:quantum/rgblight.c **** 
 265:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 266:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 267:quantum/rgblight.c ****     rgblight_config.raw = dword;
 268:quantum/rgblight.c ****     if (rgblight_config.enable)
 269:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 270:quantum/rgblight.c ****     else {
 271:quantum/rgblight.c ****         rgblight_timer_disable();
 272:quantum/rgblight.c ****         rgblight_set();
 273:quantum/rgblight.c ****     }
 274:quantum/rgblight.c **** }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** void rgblight_increase(void) {
 277:quantum/rgblight.c ****     uint8_t mode = 0;
 278:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 279:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 280:quantum/rgblight.c ****     }
 281:quantum/rgblight.c ****     rgblight_mode(mode);
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** void rgblight_decrease(void) {
 284:quantum/rgblight.c ****     uint8_t mode = 0;
 285:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 286:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 287:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 288:quantum/rgblight.c ****     }
 289:quantum/rgblight.c ****     rgblight_mode(mode);
 290:quantum/rgblight.c **** }
 291:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 292:quantum/rgblight.c ****     uint8_t mode = 0;
 293:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 294:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 295:quantum/rgblight.c ****         mode = 1;
 296:quantum/rgblight.c ****     }
 297:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 298:quantum/rgblight.c **** }
 299:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 300:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 301:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 302:quantum/rgblight.c ****     uint8_t mode = 0;
 303:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 304:quantum/rgblight.c ****     if (mode < 1) {
 305:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 306:quantum/rgblight.c ****     }
 307:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 308:quantum/rgblight.c **** }
 309:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 310:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 311:quantum/rgblight.c **** 
 312:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 313:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 314:quantum/rgblight.c ****         return false;
 315:quantum/rgblight.c ****     }
 316:quantum/rgblight.c **** 
 317:quantum/rgblight.c ****     return rgblight_config.mode;
 318:quantum/rgblight.c **** }
 319:quantum/rgblight.c **** 
 320:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 321:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 322:quantum/rgblight.c ****         return;
 323:quantum/rgblight.c ****     }
 324:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 325:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 326:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 327:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 328:quantum/rgblight.c ****     } else {
 329:quantum/rgblight.c ****         rgblight_config.mode = mode;
 330:quantum/rgblight.c ****     }
 331:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 332:quantum/rgblight.c ****     if (write_to_eeprom) {
 333:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 334:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 335:quantum/rgblight.c ****     } else {
 336:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 337:quantum/rgblight.c ****     }
 338:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 339:quantum/rgblight.c ****         rgblight_timer_disable();
 340:quantum/rgblight.c ****     } else {
 341:quantum/rgblight.c ****         rgblight_timer_enable();
 342:quantum/rgblight.c ****     }
 343:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 344:quantum/rgblight.c ****     animation_status.restart = true;
 345:quantum/rgblight.c **** #endif
 346:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 347:quantum/rgblight.c **** }
 348:quantum/rgblight.c **** 
 349:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 350:quantum/rgblight.c **** 
 351:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 352:quantum/rgblight.c **** 
 353:quantum/rgblight.c **** void rgblight_toggle(void) {
 354:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 355:quantum/rgblight.c ****     if (rgblight_config.enable) {
 356:quantum/rgblight.c ****         rgblight_disable();
 357:quantum/rgblight.c ****     } else {
 358:quantum/rgblight.c ****         rgblight_enable();
 359:quantum/rgblight.c ****     }
 360:quantum/rgblight.c **** }
 361:quantum/rgblight.c **** 
 362:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 363:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 364:quantum/rgblight.c ****     if (rgblight_config.enable) {
 365:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 366:quantum/rgblight.c ****     } else {
 367:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 368:quantum/rgblight.c ****     }
 369:quantum/rgblight.c **** }
 370:quantum/rgblight.c **** 
 371:quantum/rgblight.c **** void rgblight_enable(void) {
 372:quantum/rgblight.c ****     rgblight_config.enable = 1;
 373:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 374:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 375:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 376:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 377:quantum/rgblight.c **** }
 378:quantum/rgblight.c **** 
 379:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 380:quantum/rgblight.c ****     rgblight_config.enable = 1;
 381:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 382:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 383:quantum/rgblight.c **** }
 384:quantum/rgblight.c **** 
 385:quantum/rgblight.c **** void rgblight_disable(void) {
 386:quantum/rgblight.c ****     rgblight_config.enable = 0;
 387:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 388:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 389:quantum/rgblight.c ****     rgblight_timer_disable();
 390:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 391:quantum/rgblight.c ****     wait_ms(50);
 392:quantum/rgblight.c ****     rgblight_set();
 393:quantum/rgblight.c **** }
 394:quantum/rgblight.c **** 
 395:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 396:quantum/rgblight.c ****     rgblight_config.enable = 0;
 397:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 398:quantum/rgblight.c ****     rgblight_timer_disable();
 399:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 400:quantum/rgblight.c ****     wait_ms(50);
 401:quantum/rgblight.c ****     rgblight_set();
 402:quantum/rgblight.c **** }
 403:quantum/rgblight.c **** 
 404:quantum/rgblight.c **** bool rgblight_is_enabled(void) { return rgblight_config.enable; }
 405:quantum/rgblight.c **** 
 406:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 407:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 408:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 411:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 412:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 413:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 414:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 415:quantum/rgblight.c **** }
 416:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 417:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 418:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 419:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 420:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 421:quantum/rgblight.c **** }
 422:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 423:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 424:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 425:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 426:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 427:quantum/rgblight.c **** }
 428:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 429:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 430:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 431:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 432:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 433:quantum/rgblight.c **** }
 434:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 435:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 436:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 437:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 438:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 439:quantum/rgblight.c **** }
 440:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 441:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 442:quantum/rgblight.c **** 
 443:quantum/rgblight.c **** void rgblight_increase_speed_helper(bool write_to_eeprom) {
 444:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 445:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 446:quantum/rgblight.c ****     if (write_to_eeprom) {
 447:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 448:quantum/rgblight.c ****     }
 449:quantum/rgblight.c **** }
 450:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 451:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 452:quantum/rgblight.c **** 
 453:quantum/rgblight.c **** void rgblight_decrease_speed_helper(bool write_to_eeprom) {
 454:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 455:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 456:quantum/rgblight.c ****     if (write_to_eeprom) {
 457:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 458:quantum/rgblight.c ****     }
 459:quantum/rgblight.c **** }
 460:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 461:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 462:quantum/rgblight.c **** 
 463:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 464:quantum/rgblight.c ****     if (rgblight_config.enable) {
 465:quantum/rgblight.c ****         LED_TYPE tmp_led;
 466:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 467:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 468:quantum/rgblight.c ****     }
 469:quantum/rgblight.c **** }
 470:quantum/rgblight.c **** 
 471:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 472:quantum/rgblight.c ****     if (rgblight_config.enable) {
 473:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 474:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 475:quantum/rgblight.c ****             // same static color
 476:quantum/rgblight.c ****             LED_TYPE tmp_led;
 477:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 478:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 479:quantum/rgblight.c ****         } else {
 480:quantum/rgblight.c ****             // all LEDs in same color
 481:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 482:quantum/rgblight.c ****             }
 483:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 484:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 485:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 486:quantum/rgblight.c ****                 val = rgblight_config.val;
 487:quantum/rgblight.c ****             }
 488:quantum/rgblight.c **** #endif
 489:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 490:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 491:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 492:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 493:quantum/rgblight.c ****             }
 494:quantum/rgblight.c **** #endif
 495:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 496:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 497:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 498:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 499:quantum/rgblight.c ****             }
 500:quantum/rgblight.c **** #endif
 501:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 502:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 503:quantum/rgblight.c ****                 // static gradient
 504:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 505:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 506:quantum/rgblight.c **** #    ifdef __AVR__
 507:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 508:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 509:quantum/rgblight.c **** #    else
 510:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 511:quantum/rgblight.c **** #    endif
 512:quantum/rgblight.c ****                 for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 513:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 514:quantum/rgblight.c ****                     if (direction) {
 515:quantum/rgblight.c ****                         _hue = hue + _hue;
 516:quantum/rgblight.c ****                     } else {
 517:quantum/rgblight.c ****                         _hue = hue - _hue;
 518:quantum/rgblight.c ****                     }
 519:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 520:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 521:quantum/rgblight.c ****                 }
 522:quantum/rgblight.c ****                 rgblight_set();
 523:quantum/rgblight.c ****             }
 524:quantum/rgblight.c **** #endif
 525:quantum/rgblight.c ****         }
 526:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 527:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 528:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 529:quantum/rgblight.c ****         }
 530:quantum/rgblight.c **** #endif
 531:quantum/rgblight.c ****         rgblight_config.hue = hue;
 532:quantum/rgblight.c ****         rgblight_config.sat = sat;
 533:quantum/rgblight.c ****         rgblight_config.val = val;
 534:quantum/rgblight.c ****         if (write_to_eeprom) {
 535:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 536:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 537:quantum/rgblight.c ****         } else {
 538:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 539:quantum/rgblight.c ****         }
 540:quantum/rgblight.c ****     }
 541:quantum/rgblight.c **** }
 542:quantum/rgblight.c **** 
 543:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 544:quantum/rgblight.c **** 
 545:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 546:quantum/rgblight.c **** 
 547:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 548:quantum/rgblight.c **** 
 549:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 550:quantum/rgblight.c ****     rgblight_config.speed = speed;
 551:quantum/rgblight.c ****     if (write_to_eeprom) {
 552:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 553:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 554:quantum/rgblight.c ****     } else {
 555:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 556:quantum/rgblight.c ****     }
 557:quantum/rgblight.c **** }
 558:quantum/rgblight.c **** 
 559:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 560:quantum/rgblight.c **** 
 561:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 562:quantum/rgblight.c **** 
 563:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 564:quantum/rgblight.c **** 
 565:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 566:quantum/rgblight.c **** 
 567:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 568:quantum/rgblight.c **** 
 569:quantum/rgblight.c **** HSV rgblight_get_hsv(void) { return (HSV){rgblight_config.hue, rgblight_config.sat, rgblight_config
 570:quantum/rgblight.c **** 
 571:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 572:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 573:quantum/rgblight.c ****         return;
 574:quantum/rgblight.c ****     }
 575:quantum/rgblight.c **** 
 576:quantum/rgblight.c ****     for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
 577:quantum/rgblight.c ****         led[i].r = r;
 578:quantum/rgblight.c ****         led[i].g = g;
 579:quantum/rgblight.c ****         led[i].b = b;
 580:quantum/rgblight.c **** #ifdef RGBW
 581:quantum/rgblight.c ****         led[i].w = 0;
 582:quantum/rgblight.c **** #endif
 583:quantum/rgblight.c ****     }
 584:quantum/rgblight.c ****     rgblight_set();
 585:quantum/rgblight.c **** }
 586:quantum/rgblight.c **** 
 587:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 588:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 589:quantum/rgblight.c ****         return;
 590:quantum/rgblight.c ****     }
 591:quantum/rgblight.c **** 
 592:quantum/rgblight.c ****     led[index].r = r;
 593:quantum/rgblight.c ****     led[index].g = g;
 594:quantum/rgblight.c ****     led[index].b = b;
 595:quantum/rgblight.c **** #ifdef RGBW
 596:quantum/rgblight.c ****     led[index].w = 0;
 597:quantum/rgblight.c **** #endif
 598:quantum/rgblight.c ****     rgblight_set();
 599:quantum/rgblight.c **** }
 600:quantum/rgblight.c **** 
 601:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 602:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 603:quantum/rgblight.c ****         return;
 604:quantum/rgblight.c ****     }
 605:quantum/rgblight.c **** 
 606:quantum/rgblight.c ****     LED_TYPE tmp_led;
 607:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 608:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 609:quantum/rgblight.c **** }
 610:quantum/rgblight.c **** 
 611:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 612:quantum/rgblight.c **** 
 613:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 614:quantum/rgblight.c ****     return
 615:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 616:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 617:quantum/rgblight.c **** #    endif
 618:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 619:quantum/rgblight.c **** }
 620:quantum/rgblight.c **** 
 621:quantum/rgblight.c **** #endif
 622:quantum/rgblight.c **** 
 623:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 624:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 625:quantum/rgblight.c ****         return;
 626:quantum/rgblight.c ****     }
 627:quantum/rgblight.c **** 
 628:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 629:quantum/rgblight.c ****         led[i].r = r;
 630:quantum/rgblight.c ****         led[i].g = g;
 631:quantum/rgblight.c ****         led[i].b = b;
 632:quantum/rgblight.c **** #ifdef RGBW
 633:quantum/rgblight.c ****         led[i].w = 0;
 634:quantum/rgblight.c **** #endif
 635:quantum/rgblight.c ****     }
 636:quantum/rgblight.c ****     rgblight_set();
 637:quantum/rgblight.c ****     wait_ms(1);
 638:quantum/rgblight.c **** }
 639:quantum/rgblight.c **** 
 640:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 641:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 642:quantum/rgblight.c ****         return;
 643:quantum/rgblight.c ****     }
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c ****     LED_TYPE tmp_led;
 646:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 647:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 648:quantum/rgblight.c **** }
 649:quantum/rgblight.c **** 
 650:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 651:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 652:quantum/rgblight.c **** 
 653:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 654:quantum/rgblight.c **** 
 655:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 656:quantum/rgblight.c **** 
 657:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 658:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 659:quantum/rgblight.c **** 
 660:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 661:quantum/rgblight.c **** void rgblight_set_layer_state(uint8_t layer, bool enabled) {
 662:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 663:quantum/rgblight.c ****     if (enabled) {
 664:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask |= mask;
 665:quantum/rgblight.c ****     } else {
 666:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~mask;
 667:quantum/rgblight.c ****     }
 668:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_LAYERS;
 669:quantum/rgblight.c ****     // Static modes don't have a ticker running to update the LEDs
 670:quantum/rgblight.c ****     if (rgblight_status.timer_enabled == false) {
 671:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 672:quantum/rgblight.c ****     }
 673:quantum/rgblight.c **** 
 674:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 675:quantum/rgblight.c ****     // If not enabled, then nothing else will actually set the LEDs...
 676:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 677:quantum/rgblight.c ****         rgblight_set();
 678:quantum/rgblight.c ****     }
 679:quantum/rgblight.c **** #    endif
 680:quantum/rgblight.c **** }
 681:quantum/rgblight.c **** 
 682:quantum/rgblight.c **** bool rgblight_get_layer_state(uint8_t layer) {
 683:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 684:quantum/rgblight.c ****     return (rgblight_status.enabled_layer_mask & mask) != 0;
 685:quantum/rgblight.c **** }
 686:quantum/rgblight.c **** 
 687:quantum/rgblight.c **** // Write any enabled LED layers into the buffer
 688:quantum/rgblight.c **** static void rgblight_layers_write(void) {
 689:quantum/rgblight.c ****     uint8_t i = 0;
 690:quantum/rgblight.c ****     // For each layer
 691:quantum/rgblight.c ****     for (const rgblight_segment_t *const *layer_ptr = rgblight_layers; i < RGBLIGHT_MAX_LAYERS; lay
 692:quantum/rgblight.c ****         if (!rgblight_get_layer_state(i)) {
 693:quantum/rgblight.c ****             continue;  // Layer is disabled
 694:quantum/rgblight.c ****         }
 695:quantum/rgblight.c ****         const rgblight_segment_t *segment_ptr = pgm_read_ptr(layer_ptr);
 696:quantum/rgblight.c ****         if (segment_ptr == NULL) {
 697:quantum/rgblight.c ****             break;  // No more layers
 698:quantum/rgblight.c ****         }
 699:quantum/rgblight.c ****         // For each segment
 700:quantum/rgblight.c ****         while (1) {
 701:quantum/rgblight.c ****             rgblight_segment_t segment;
 702:quantum/rgblight.c ****             memcpy_P(&segment, segment_ptr, sizeof(rgblight_segment_t));
 703:quantum/rgblight.c ****             if (segment.index == RGBLIGHT_END_SEGMENT_INDEX) {
 704:quantum/rgblight.c ****                 break;  // No more segments
 705:quantum/rgblight.c ****             }
 706:quantum/rgblight.c ****             // Write segment.count LEDs
 707:quantum/rgblight.c ****             LED_TYPE *const limit = &led[MIN(segment.index + segment.count, RGBLED_NUM)];
 708:quantum/rgblight.c ****             for (LED_TYPE *led_ptr = &led[segment.index]; led_ptr < limit; led_ptr++) {
 709:quantum/rgblight.c ****                 sethsv(segment.hue, segment.sat, segment.val, led_ptr);
 710:quantum/rgblight.c ****             }
 711:quantum/rgblight.c ****             segment_ptr++;
 712:quantum/rgblight.c ****         }
 713:quantum/rgblight.c ****     }
 714:quantum/rgblight.c **** }
 715:quantum/rgblight.c **** 
 716:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 717:quantum/rgblight.c **** rgblight_layer_mask_t _blinking_layer_mask = 0;
 718:quantum/rgblight.c **** static uint16_t       _repeat_timer;
 719:quantum/rgblight.c **** static uint8_t        _times_remaining;
 720:quantum/rgblight.c **** static uint16_t       _dur;
 721:quantum/rgblight.c **** 
 722:quantum/rgblight.c **** void rgblight_blink_layer(uint8_t layer, uint16_t duration_ms) { rgblight_blink_layer_repeat(layer,
 723:quantum/rgblight.c **** 
 724:quantum/rgblight.c **** void rgblight_blink_layer_repeat(uint8_t layer, uint16_t duration_ms, uint8_t times) {
 725:quantum/rgblight.c ****     _times_remaining = times * 2;
 726:quantum/rgblight.c ****     _dur             = duration_ms;
 727:quantum/rgblight.c **** 
 728:quantum/rgblight.c ****     rgblight_set_layer_state(layer, true);
 729:quantum/rgblight.c ****     _times_remaining--;
 730:quantum/rgblight.c ****     _blinking_layer_mask |= (rgblight_layer_mask_t)1 << layer;
 731:quantum/rgblight.c ****     _repeat_timer = sync_timer_read() + duration_ms;
 732:quantum/rgblight.c **** }
 733:quantum/rgblight.c **** 
 734:quantum/rgblight.c **** void rgblight_blink_layer_repeat_helper(void) {
 735:quantum/rgblight.c ****     if (_blinking_layer_mask != 0 && timer_expired(sync_timer_read(), _repeat_timer)) {
 736:quantum/rgblight.c ****         for (uint8_t layer = 0; layer < RGBLIGHT_MAX_LAYERS; layer++) {
 737:quantum/rgblight.c ****             if ((_blinking_layer_mask & (rgblight_layer_mask_t)1 << layer) != 0 && _times_remaining
 738:quantum/rgblight.c ****                 if (_times_remaining % 2 == 1) {
 739:quantum/rgblight.c ****                     rgblight_set_layer_state(layer, false);
 740:quantum/rgblight.c ****                 } else {
 741:quantum/rgblight.c ****                     rgblight_set_layer_state(layer, true);
 742:quantum/rgblight.c ****                 }
 743:quantum/rgblight.c ****                 _times_remaining--;
 744:quantum/rgblight.c ****                 _repeat_timer = sync_timer_read() + _dur;
 745:quantum/rgblight.c ****             }
 746:quantum/rgblight.c ****         }
 747:quantum/rgblight.c ****         if (_times_remaining <= 0) {
 748:quantum/rgblight.c ****             _blinking_layer_mask = 0;
 749:quantum/rgblight.c ****         }
 750:quantum/rgblight.c ****     }
 751:quantum/rgblight.c **** }
 752:quantum/rgblight.c **** #    endif
 753:quantum/rgblight.c **** 
 754:quantum/rgblight.c **** #endif
 755:quantum/rgblight.c **** 
 756:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 757:quantum/rgblight.c **** 
 758:quantum/rgblight.c **** void rgblight_suspend(void) {
 759:quantum/rgblight.c ****     rgblight_timer_disable();
 760:quantum/rgblight.c ****     if (!is_suspended) {
 761:quantum/rgblight.c ****         is_suspended        = true;
 762:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 763:quantum/rgblight.c **** 
 764:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 765:quantum/rgblight.c ****         // make sure any layer blinks don't come back after suspend
 766:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~_blinking_layer_mask;
 767:quantum/rgblight.c ****         _blinking_layer_mask = 0;
 768:quantum/rgblight.c **** #    endif
 769:quantum/rgblight.c **** 
 770:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 771:quantum/rgblight.c ****     }
 772:quantum/rgblight.c **** }
 773:quantum/rgblight.c **** 
 774:quantum/rgblight.c **** void rgblight_wakeup(void) {
 775:quantum/rgblight.c ****     is_suspended = false;
 776:quantum/rgblight.c **** 
 777:quantum/rgblight.c ****     if (pre_suspend_enabled) {
 778:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 779:quantum/rgblight.c ****     }
 780:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 781:quantum/rgblight.c ****     // Need this or else the LEDs won't be set
 782:quantum/rgblight.c ****     else if (rgblight_status.enabled_layer_mask != 0) {
 783:quantum/rgblight.c ****         rgblight_set();
 784:quantum/rgblight.c ****     }
 785:quantum/rgblight.c **** #    endif
 786:quantum/rgblight.c **** 
 787:quantum/rgblight.c ****     rgblight_timer_enable();
 788:quantum/rgblight.c **** }
 789:quantum/rgblight.c **** 
 790:quantum/rgblight.c **** #endif
 791:quantum/rgblight.c **** 
 792:quantum/rgblight.c **** __attribute__((weak)) void rgblight_call_driver(LED_TYPE *start_led, uint8_t num_leds) { ws2812_set
 793:quantum/rgblight.c **** 
 794:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 795:quantum/rgblight.c **** 
 796:quantum/rgblight.c **** void rgblight_set(void) {
 797:quantum/rgblight.c ****     LED_TYPE *start_led;
 798:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 799:quantum/rgblight.c **** 
 800:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 801:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 802:quantum/rgblight.c ****             led[i].r = 0;
 803:quantum/rgblight.c ****             led[i].g = 0;
 804:quantum/rgblight.c ****             led[i].b = 0;
 805:quantum/rgblight.c **** #    ifdef RGBW
 806:quantum/rgblight.c ****             led[i].w = 0;
 807:quantum/rgblight.c **** #    endif
 808:quantum/rgblight.c ****         }
 809:quantum/rgblight.c ****     }
 810:quantum/rgblight.c **** 
 811:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 812:quantum/rgblight.c ****     if (rgblight_layers != NULL
 813:quantum/rgblight.c **** #        if !defined(RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF)
 814:quantum/rgblight.c ****         && rgblight_config.enable
 815:quantum/rgblight.c **** #        elif defined(RGBLIGHT_SLEEP)
 816:quantum/rgblight.c ****         && !is_suspended
 817:quantum/rgblight.c **** #        endif
 818:quantum/rgblight.c ****     ) {
 819:quantum/rgblight.c ****         rgblight_layers_write();
 820:quantum/rgblight.c ****     }
 821:quantum/rgblight.c **** #    endif
 822:quantum/rgblight.c **** 
 823:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 824:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 825:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 826:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 827:quantum/rgblight.c ****     }
 828:quantum/rgblight.c ****     start_led = led0 + rgblight_ranges.clipping_start_pos;
 829:quantum/rgblight.c **** #    else
 830:quantum/rgblight.c ****     start_led = led + rgblight_ranges.clipping_start_pos;
 831:quantum/rgblight.c **** #    endif
 832:quantum/rgblight.c **** 
 833:quantum/rgblight.c **** #    ifdef RGBW
 834:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 835:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 836:quantum/rgblight.c ****     }
 837:quantum/rgblight.c **** #    endif
 838:quantum/rgblight.c ****     rgblight_call_driver(start_led, num_leds);
 839:quantum/rgblight.c **** }
 840:quantum/rgblight.c **** #endif
 841:quantum/rgblight.c **** 
 842:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 843:quantum/rgblight.c **** /* for split keyboard master side */
 844:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 845:quantum/rgblight.c **** 
 846:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 847:quantum/rgblight.c **** 
 848:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 849:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 850:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 851:quantum/rgblight.c **** }
 852:quantum/rgblight.c **** 
 853:quantum/rgblight.c **** /* for split keyboard slave side */
 854:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 855:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 856:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_LAYERS) {
 857:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask = syncinfo->status.enabled_layer_mask;
 858:quantum/rgblight.c ****     }
 859:quantum/rgblight.c **** #    endif
 860:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 861:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 862:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 863:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 864:quantum/rgblight.c ****         } else {
 865:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 866:quantum/rgblight.c ****         }
 867:quantum/rgblight.c ****     }
 868:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 869:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 870:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 871:quantum/rgblight.c ****     }
 872:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 873:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 874:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 875:quantum/rgblight.c ****             rgblight_timer_enable();
 876:quantum/rgblight.c ****         } else {
 877:quantum/rgblight.c ****             rgblight_timer_disable();
 878:quantum/rgblight.c ****         }
 879:quantum/rgblight.c ****     }
 880:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 881:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 882:quantum/rgblight.c ****         animation_status.restart = true;
 883:quantum/rgblight.c ****     }
 884:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 885:quantum/rgblight.c **** #    endif /* RGBLIGHT_USE_TIMER */
 886:quantum/rgblight.c **** }
 887:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 888:quantum/rgblight.c **** 
 889:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 890:quantum/rgblight.c **** 
 891:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 892:quantum/rgblight.c **** 
 893:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 894:quantum/rgblight.c **** void rgblight_timer_init(void) {
 895:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 896:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 897:quantum/rgblight.c **** }
 898:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 899:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 900:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 901:quantum/rgblight.c ****     }
 902:quantum/rgblight.c ****     animation_status.last_timer = sync_timer_read();
 903:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 904:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 905:quantum/rgblight.c **** }
 906:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 907:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 908:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 909:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 910:quantum/rgblight.c **** }
 911:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 912:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 913:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 914:quantum/rgblight.c ****         rgblight_timer_disable();
 915:quantum/rgblight.c ****     } else {
 916:quantum/rgblight.c ****         rgblight_timer_enable();
 917:quantum/rgblight.c ****     }
 918:quantum/rgblight.c **** }
 919:quantum/rgblight.c **** 
 920:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 921:quantum/rgblight.c ****     rgblight_enable();
 922:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 923:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 924:quantum/rgblight.c **** }
 925:quantum/rgblight.c **** 
 926:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 926 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 927:quantum/rgblight.c ****     // do nothing
 928:quantum/rgblight.c ****     /********
 929:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 930:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 931:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 932:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 933:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 934:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 935:quantum/rgblight.c ****     **/
 936:quantum/rgblight.c **** }
  22               		.loc 1 936 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE172:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB84:
 133:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
  34               		.loc 1 133 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  40               		.loc 1 134 5 view .LVU3
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  41               		.loc 1 134 40 is_stmt 0 view .LVU4
  42 0000 E0E0      		ldi r30,lo8(rgblight_ranges)
  43 0002 F0E0      		ldi r31,hi8(rgblight_ranges)
  44 0004 8083      		st Z,r24
 135:quantum/rgblight.c **** }
  45               		.loc 1 135 5 is_stmt 1 view .LVU5
 135:quantum/rgblight.c **** }
  46               		.loc 1 135 40 is_stmt 0 view .LVU6
  47 0006 6183      		std Z+1,r22
  48               	/* epilogue start */
 136:quantum/rgblight.c **** 
  49               		.loc 1 136 1 view .LVU7
  50 0008 0895      		ret
  51               		.cfi_endproc
  52               	.LFE84:
  54               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  55               	.global	rgblight_set_effect_range
  57               	rgblight_set_effect_range:
  58               	.LVL2:
  59               	.LFB85:
 138:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  60               		.loc 1 138 69 is_stmt 1 view -0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
 139:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  66               		.loc 1 139 5 view .LVU9
 139:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  67               		.loc 1 139 8 is_stmt 0 view .LVU10
  68 0000 8830      		cpi r24,lo8(8)
  69 0002 00F4      		brsh .L3
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  70               		.loc 1 140 5 is_stmt 1 view .LVU11
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  71               		.loc 1 140 19 is_stmt 0 view .LVU12
  72 0004 482F      		mov r20,r24
  73 0006 460F      		add r20,r22
  74 0008 5527      		clr r21
  75 000a 551F      		rol r21
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  76               		.loc 1 140 8 view .LVU13
  77 000c 4930      		cpi r20,9
  78 000e 5105      		cpc r21,__zero_reg__
  79 0010 04F4      		brge .L3
 141:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  80               		.loc 1 141 5 is_stmt 1 view .LVU14
 141:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  81               		.loc 1 141 38 is_stmt 0 view .LVU15
  82 0012 8093 0000 		sts rgblight_ranges+2,r24
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  83               		.loc 1 142 5 is_stmt 1 view .LVU16
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  84               		.loc 1 142 50 is_stmt 0 view .LVU17
  85 0016 860F      		add r24,r22
  86               	.LVL3:
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  87               		.loc 1 142 38 view .LVU18
  88 0018 8093 0000 		sts rgblight_ranges+3,r24
 143:quantum/rgblight.c **** }
  89               		.loc 1 143 5 is_stmt 1 view .LVU19
 143:quantum/rgblight.c **** }
  90               		.loc 1 143 38 is_stmt 0 view .LVU20
  91 001c 6093 0000 		sts rgblight_ranges+4,r22
  92               	.LVL4:
  93               	.L3:
  94               	/* epilogue start */
 144:quantum/rgblight.c **** 
  95               		.loc 1 144 1 view .LVU21
  96 0020 0895      		ret
  97               		.cfi_endproc
  98               	.LFE85:
 100               		.section	.text.rgblight_hsv_to_rgb,"ax",@progbits
 101               		.weak	rgblight_hsv_to_rgb
 103               	rgblight_hsv_to_rgb:
 104               	.LVL5:
 105               	.LFB86:
 146:quantum/rgblight.c **** 
 106               		.loc 1 146 56 is_stmt 1 view -0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 146:quantum/rgblight.c **** 
 112               		.loc 1 146 58 view .LVU23
 146:quantum/rgblight.c **** 
 113               		.loc 1 146 65 is_stmt 0 view .LVU24
 114 0000 0C94 0000 		jmp hsv_to_rgb
 115               	.LVL6:
 146:quantum/rgblight.c **** 
 116               		.loc 1 146 65 view .LVU25
 117               		.cfi_endproc
 118               	.LFE86:
 120               		.section	.text.sethsv_raw,"ax",@progbits
 121               	.global	sethsv_raw
 123               	sethsv_raw:
 124               	.LVL7:
 125               	.LFB87:
 148:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 126               		.loc 1 148 72 is_stmt 1 view -0
 127               		.cfi_startproc
 148:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 128               		.loc 1 148 72 is_stmt 0 view .LVU27
 129 0000 CF93      		push r28
 130               	.LCFI0:
 131               		.cfi_def_cfa_offset 3
 132               		.cfi_offset 28, -2
 133 0002 DF93      		push r29
 134               	.LCFI1:
 135               		.cfi_def_cfa_offset 4
 136               		.cfi_offset 29, -3
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 2 */
 140               	.L__stack_usage = 2
 141 0004 762F      		mov r23,r22
 142 0006 E901      		movw r28,r18
 149:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 143               		.loc 1 149 5 is_stmt 1 view .LVU28
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 144               		.loc 1 150 5 view .LVU29
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 145               		.loc 1 150 15 is_stmt 0 view .LVU30
 146 0008 682F      		mov r22,r24
 147               	.LVL8:
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 148               		.loc 1 150 15 view .LVU31
 149 000a 842F      		mov r24,r20
 150               	.LVL9:
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 151               		.loc 1 150 15 view .LVU32
 152 000c 0E94 0000 		call rgblight_hsv_to_rgb
 153               	.LVL10:
 151:quantum/rgblight.c **** }
 154               		.loc 1 151 5 is_stmt 1 view .LVU33
 155               	.LBB20:
 156               	.LBI20:
 156:quantum/rgblight.c ****     led1->r = r;
 157               		.loc 1 156 6 view .LVU34
 158               	.LBB21:
 157:quantum/rgblight.c ****     led1->g = g;
 159               		.loc 1 157 5 view .LVU35
 157:quantum/rgblight.c ****     led1->g = g;
 160               		.loc 1 157 13 is_stmt 0 view .LVU36
 161 0010 7983      		std Y+1,r23
 158:quantum/rgblight.c ****     led1->b = b;
 162               		.loc 1 158 5 is_stmt 1 view .LVU37
 158:quantum/rgblight.c ****     led1->b = b;
 163               		.loc 1 158 13 is_stmt 0 view .LVU38
 164 0012 6883      		st Y,r22
 159:quantum/rgblight.c **** #ifdef RGBW
 165               		.loc 1 159 5 is_stmt 1 view .LVU39
 159:quantum/rgblight.c **** #ifdef RGBW
 166               		.loc 1 159 13 is_stmt 0 view .LVU40
 167 0014 8A83      		std Y+2,r24
 168               	.LVL11:
 169               	/* epilogue start */
 159:quantum/rgblight.c **** #ifdef RGBW
 170               		.loc 1 159 13 view .LVU41
 171               	.LBE21:
 172               	.LBE20:
 152:quantum/rgblight.c **** 
 173               		.loc 1 152 1 view .LVU42
 174 0016 DF91      		pop r29
 175 0018 CF91      		pop r28
 176               	.LVL12:
 152:quantum/rgblight.c **** 
 177               		.loc 1 152 1 view .LVU43
 178 001a 0895      		ret
 179               		.cfi_endproc
 180               	.LFE87:
 182               		.section	.text.sethsv,"ax",@progbits
 183               	.global	sethsv
 185               	sethsv:
 186               	.LVL13:
 187               	.LFB88:
 154:quantum/rgblight.c **** 
 188               		.loc 1 154 68 is_stmt 1 view -0
 189               		.cfi_startproc
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 0 */
 193               	.L__stack_usage = 0
 154:quantum/rgblight.c **** 
 194               		.loc 1 154 70 view .LVU45
 195 0000 0C94 0000 		jmp sethsv_raw
 196               	.LVL14:
 154:quantum/rgblight.c **** 
 197               		.loc 1 154 70 is_stmt 0 view .LVU46
 198               		.cfi_endproc
 199               	.LFE88:
 201               		.section	.text.setrgb,"ax",@progbits
 202               	.global	setrgb
 204               	setrgb:
 205               	.LVL15:
 206               	.LFB89:
 156:quantum/rgblight.c ****     led1->r = r;
 207               		.loc 1 156 62 is_stmt 1 view -0
 208               		.cfi_startproc
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 156:quantum/rgblight.c ****     led1->r = r;
 213               		.loc 1 156 62 is_stmt 0 view .LVU48
 214 0000 F901      		movw r30,r18
 157:quantum/rgblight.c ****     led1->g = g;
 215               		.loc 1 157 5 is_stmt 1 view .LVU49
 157:quantum/rgblight.c ****     led1->g = g;
 216               		.loc 1 157 13 is_stmt 0 view .LVU50
 217 0002 8183      		std Z+1,r24
 158:quantum/rgblight.c ****     led1->b = b;
 218               		.loc 1 158 5 is_stmt 1 view .LVU51
 158:quantum/rgblight.c ****     led1->b = b;
 219               		.loc 1 158 13 is_stmt 0 view .LVU52
 220 0004 6083      		st Z,r22
 159:quantum/rgblight.c **** #ifdef RGBW
 221               		.loc 1 159 5 is_stmt 1 view .LVU53
 159:quantum/rgblight.c **** #ifdef RGBW
 222               		.loc 1 159 13 is_stmt 0 view .LVU54
 223 0006 4283      		std Z+2,r20
 224               	/* epilogue start */
 163:quantum/rgblight.c **** 
 225               		.loc 1 163 1 view .LVU55
 226 0008 0895      		ret
 227               		.cfi_endproc
 228               	.LFE89:
 230               		.section	.text.rgblight_check_config,"ax",@progbits
 231               	.global	rgblight_check_config
 233               	rgblight_check_config:
 234               	.LFB90:
 165:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 235               		.loc 1 165 34 is_stmt 1 view -0
 236               		.cfi_startproc
 237               	/* prologue: function */
 238               	/* frame size = 0 */
 239               	/* stack size = 0 */
 240               	.L__stack_usage = 0
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 241               		.loc 1 168 5 view .LVU57
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 242               		.loc 1 168 30 is_stmt 0 view .LVU58
 243 0000 8091 0000 		lds r24,rgblight_config
 244 0004 982F      		mov r25,r24
 245 0006 9E7F      		andi r25,lo8(-2)
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 246               		.loc 1 168 8 view .LVU59
 247 0008 01F4      		brne .L10
 169:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 248               		.loc 1 169 9 is_stmt 1 view .LVU60
 169:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 249               		.loc 1 169 30 is_stmt 0 view .LVU61
 250 000a 8170      		andi r24,lo8(1)
 251 000c 8260      		ori r24,lo8(2)
 252               	.L12:
 171:quantum/rgblight.c ****     }
 253               		.loc 1 171 30 view .LVU62
 254 000e 8093 0000 		sts rgblight_config,r24
 174:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 255               		.loc 1 174 5 is_stmt 1 view .LVU63
 256               	.L9:
 257               	/* epilogue start */
 177:quantum/rgblight.c **** 
 258               		.loc 1 177 1 is_stmt 0 view .LVU64
 259 0012 0895      		ret
 260               	.L10:
 170:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 261               		.loc 1 170 12 is_stmt 1 view .LVU65
 170:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 262               		.loc 1 170 15 is_stmt 0 view .LVU66
 263 0014 8635      		cpi r24,lo8(86)
 264 0016 00F0      		brlo .L9
 171:quantum/rgblight.c ****     }
 265               		.loc 1 171 9 is_stmt 1 view .LVU67
 171:quantum/rgblight.c ****     }
 266               		.loc 1 171 30 is_stmt 0 view .LVU68
 267 0018 8170      		andi r24,lo8(1)
 268 001a 8465      		ori r24,lo8(84)
 269 001c 00C0      		rjmp .L12
 270               		.cfi_endproc
 271               	.LFE90:
 273               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 274               	.global	eeconfig_read_rgblight
 276               	eeconfig_read_rgblight:
 277               	.LFB91:
 179:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 278               		.loc 1 179 39 is_stmt 1 view -0
 279               		.cfi_startproc
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
 181:quantum/rgblight.c **** #else
 284               		.loc 1 181 5 view .LVU70
 181:quantum/rgblight.c **** #else
 285               		.loc 1 181 12 is_stmt 0 view .LVU71
 286 0000 88E0      		ldi r24,lo8(8)
 287 0002 90E0      		ldi r25,0
 288 0004 0C94 0000 		jmp eeprom_read_dword
 289               	.LVL16:
 290               		.cfi_endproc
 291               	.LFE91:
 293               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 294               	.global	eeconfig_update_rgblight
 296               	eeconfig_update_rgblight:
 297               	.LVL17:
 298               	.LFB92:
 187:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 299               		.loc 1 187 45 is_stmt 1 view -0
 300               		.cfi_startproc
 187:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 301               		.loc 1 187 45 is_stmt 0 view .LVU73
 302 0000 CF92      		push r12
 303               	.LCFI2:
 304               		.cfi_def_cfa_offset 3
 305               		.cfi_offset 12, -2
 306 0002 DF92      		push r13
 307               	.LCFI3:
 308               		.cfi_def_cfa_offset 4
 309               		.cfi_offset 13, -3
 310 0004 EF92      		push r14
 311               	.LCFI4:
 312               		.cfi_def_cfa_offset 5
 313               		.cfi_offset 14, -4
 314 0006 FF92      		push r15
 315               	.LCFI5:
 316               		.cfi_def_cfa_offset 6
 317               		.cfi_offset 15, -5
 318               	/* prologue: function */
 319               	/* frame size = 0 */
 320               	/* stack size = 4 */
 321               	.L__stack_usage = 4
 322 0008 6B01      		movw r12,r22
 323 000a 7C01      		movw r14,r24
 189:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 324               		.loc 1 189 5 is_stmt 1 view .LVU74
 325 000c 0E94 0000 		call rgblight_check_config
 326               	.LVL18:
 190:quantum/rgblight.c **** #endif
 327               		.loc 1 190 5 view .LVU75
 328 0010 B701      		movw r22,r14
 329 0012 A601      		movw r20,r12
 330 0014 88E0      		ldi r24,lo8(8)
 331 0016 90E0      		ldi r25,0
 332               	/* epilogue start */
 192:quantum/rgblight.c **** 
 333               		.loc 1 192 1 is_stmt 0 view .LVU76
 334 0018 FF90      		pop r15
 335 001a EF90      		pop r14
 336 001c DF90      		pop r13
 337 001e CF90      		pop r12
 190:quantum/rgblight.c **** #endif
 338               		.loc 1 190 5 view .LVU77
 339 0020 0C94 0000 		jmp eeprom_update_dword
 340               	.LVL19:
 341               		.cfi_endproc
 342               	.LFE92:
 344               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 345               	.global	eeconfig_update_rgblight_current
 347               	eeconfig_update_rgblight_current:
 348               	.LFB93:
 194:quantum/rgblight.c **** 
 349               		.loc 1 194 45 is_stmt 1 view -0
 350               		.cfi_startproc
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 194:quantum/rgblight.c **** 
 355               		.loc 1 194 47 view .LVU79
 356 0000 6091 0000 		lds r22,rgblight_config
 357 0004 7091 0000 		lds r23,rgblight_config+1
 358 0008 8091 0000 		lds r24,rgblight_config+2
 359 000c 9091 0000 		lds r25,rgblight_config+3
 360 0010 0C94 0000 		jmp eeconfig_update_rgblight
 361               	.LVL20:
 362               		.cfi_endproc
 363               	.LFE93:
 365               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 366               	.global	eeconfig_update_rgblight_default
 368               	eeconfig_update_rgblight_default:
 369               	.LFB94:
 196:quantum/rgblight.c ****     rgblight_config.enable = 1;
 370               		.loc 1 196 45 view -0
 371               		.cfi_startproc
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 197:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 376               		.loc 1 197 5 view .LVU81
 198:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 377               		.loc 1 198 5 view .LVU82
 199:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 378               		.loc 1 199 5 view .LVU83
 200:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 379               		.loc 1 200 5 view .LVU84
 201:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 380               		.loc 1 201 5 view .LVU85
 202:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 381               		.loc 1 202 5 view .LVU86
 197:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 382               		.loc 1 197 28 is_stmt 0 view .LVU87
 383 0000 E0E0      		ldi r30,lo8(rgblight_config)
 384 0002 F0E0      		ldi r31,hi8(rgblight_config)
 385 0004 83E0      		ldi r24,lo8(3)
 386 0006 8083      		st Z,r24
 199:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 387               		.loc 1 199 28 view .LVU88
 388 0008 1182      		std Z+1,__zero_reg__
 200:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 389               		.loc 1 200 28 view .LVU89
 390 000a 8FEF      		ldi r24,lo8(-1)
 391 000c 8283      		std Z+2,r24
 201:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 392               		.loc 1 201 28 view .LVU90
 393 000e 8383      		std Z+3,r24
 202:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 394               		.loc 1 202 28 view .LVU91
 395 0010 1482      		std Z+4,__zero_reg__
 203:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 396               		.loc 1 203 39 is_stmt 1 view .LVU92
 204:quantum/rgblight.c **** }
 397               		.loc 1 204 5 view .LVU93
 398 0012 6081      		ld r22,Z
 399 0014 7181      		ldd r23,Z+1
 400 0016 8281      		ldd r24,Z+2
 401 0018 9381      		ldd r25,Z+3
 402 001a 0C94 0000 		jmp eeconfig_update_rgblight
 403               	.LVL21:
 404               		.cfi_endproc
 405               	.LFE94:
 407               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 408               	.global	eeconfig_debug_rgblight
 410               	eeconfig_debug_rgblight:
 411               	.LFB95:
 207:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 412               		.loc 1 207 36 view -0
 413               		.cfi_startproc
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 0 */
 417               	.L__stack_usage = 0
 208:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 418               		.loc 1 208 41 view .LVU95
 209:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 419               		.loc 1 209 69 view .LVU96
 210:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 420               		.loc 1 210 65 view .LVU97
 211:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 421               		.loc 1 211 63 view .LVU98
 212:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 422               		.loc 1 212 63 view .LVU99
 213:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 423               		.loc 1 213 63 view .LVU100
 214:quantum/rgblight.c **** }
 424               		.loc 1 214 67 view .LVU101
 425               	/* epilogue start */
 215:quantum/rgblight.c **** 
 426               		.loc 1 215 1 is_stmt 0 view .LVU102
 427 0000 0895      		ret
 428               		.cfi_endproc
 429               	.LFE95:
 431               		.section	.text.rgblight_read_dword,"ax",@progbits
 432               	.global	rgblight_read_dword
 434               	rgblight_read_dword:
 435               	.LFB98:
 263:quantum/rgblight.c **** 
 436               		.loc 1 263 36 is_stmt 1 view -0
 437               		.cfi_startproc
 438               	/* prologue: function */
 439               	/* frame size = 0 */
 440               	/* stack size = 0 */
 441               	.L__stack_usage = 0
 263:quantum/rgblight.c **** 
 442               		.loc 1 263 38 view .LVU104
 263:quantum/rgblight.c **** 
 443               		.loc 1 263 60 is_stmt 0 view .LVU105
 444 0000 6091 0000 		lds r22,rgblight_config
 445 0004 7091 0000 		lds r23,rgblight_config+1
 446 0008 8091 0000 		lds r24,rgblight_config+2
 447 000c 9091 0000 		lds r25,rgblight_config+3
 448               	/* epilogue start */
 263:quantum/rgblight.c **** 
 449               		.loc 1 263 1 view .LVU106
 450 0010 0895      		ret
 451               		.cfi_endproc
 452               	.LFE98:
 454               		.section	.text.rgblight_get_mode,"ax",@progbits
 455               	.global	rgblight_get_mode
 457               	rgblight_get_mode:
 458               	.LFB108:
 312:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 459               		.loc 1 312 33 is_stmt 1 view -0
 460               		.cfi_startproc
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 313:quantum/rgblight.c ****         return false;
 465               		.loc 1 313 5 view .LVU108
 313:quantum/rgblight.c ****         return false;
 466               		.loc 1 313 25 is_stmt 0 view .LVU109
 467 0000 8091 0000 		lds r24,rgblight_config
 313:quantum/rgblight.c ****         return false;
 468               		.loc 1 313 8 view .LVU110
 469 0004 80FF      		sbrs r24,0
 470 0006 00C0      		rjmp .L21
 317:quantum/rgblight.c **** }
 471               		.loc 1 317 5 is_stmt 1 view .LVU111
 317:quantum/rgblight.c **** }
 472               		.loc 1 317 27 is_stmt 0 view .LVU112
 473 0008 8695      		lsr r24
 474 000a 0895      		ret
 475               	.L21:
 314:quantum/rgblight.c ****     }
 476               		.loc 1 314 16 view .LVU113
 477 000c 80E0      		ldi r24,0
 478               	/* epilogue start */
 318:quantum/rgblight.c **** 
 479               		.loc 1 318 1 view .LVU114
 480 000e 0895      		ret
 481               		.cfi_endproc
 482               	.LFE108:
 484               		.section	.text.rgblight_is_enabled,"ax",@progbits
 485               	.global	rgblight_is_enabled
 487               	rgblight_is_enabled:
 488               	.LFB118:
 404:quantum/rgblight.c **** 
 489               		.loc 1 404 32 is_stmt 1 view -0
 490               		.cfi_startproc
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 493               	/* stack size = 0 */
 494               	.L__stack_usage = 0
 404:quantum/rgblight.c **** 
 495               		.loc 1 404 34 view .LVU116
 404:quantum/rgblight.c **** 
 496               		.loc 1 404 56 is_stmt 0 view .LVU117
 497 0000 8091 0000 		lds r24,rgblight_config
 404:quantum/rgblight.c **** 
 498               		.loc 1 404 1 view .LVU118
 499 0004 8170      		andi r24,lo8(1)
 500               	/* epilogue start */
 501 0006 0895      		ret
 502               		.cfi_endproc
 503               	.LFE118:
 505               		.section	.text.rgblight_increase_speed_helper,"ax",@progbits
 506               	.global	rgblight_increase_speed_helper
 508               	rgblight_increase_speed_helper:
 509               	.LVL22:
 510               	.LFB137:
 443:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 511               		.loc 1 443 59 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 517               		.loc 1 444 5 view .LVU120
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 518               		.loc 1 444 24 is_stmt 0 view .LVU121
 519 0000 9091 0000 		lds r25,rgblight_config+4
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 520               		.loc 1 444 8 view .LVU122
 521 0004 9330      		cpi r25,lo8(3)
 522 0006 00F4      		brsh .L24
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 523               		.loc 1 444 36 is_stmt 1 discriminator 1 view .LVU123
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 524               		.loc 1 444 57 is_stmt 0 discriminator 1 view .LVU124
 525 0008 9F5F      		subi r25,lo8(-(1))
 526 000a 9093 0000 		sts rgblight_config+4,r25
 527               	.L24:
 446:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 528               		.loc 1 446 5 is_stmt 1 view .LVU125
 446:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 529               		.loc 1 446 8 is_stmt 0 view .LVU126
 530 000e 8823      		tst r24
 531 0010 01F0      		breq .L23
 447:quantum/rgblight.c ****     }
 532               		.loc 1 447 9 is_stmt 1 view .LVU127
 533 0012 6091 0000 		lds r22,rgblight_config
 534 0016 7091 0000 		lds r23,rgblight_config+1
 535 001a 8091 0000 		lds r24,rgblight_config+2
 536 001e 9091 0000 		lds r25,rgblight_config+3
 537 0022 0C94 0000 		jmp eeconfig_update_rgblight
 538               	.LVL23:
 539               	.L23:
 540               	/* epilogue start */
 449:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 541               		.loc 1 449 1 is_stmt 0 view .LVU128
 542 0026 0895      		ret
 543               		.cfi_endproc
 544               	.LFE137:
 546               		.section	.text.rgblight_increase_speed,"ax",@progbits
 547               	.global	rgblight_increase_speed
 549               	rgblight_increase_speed:
 550               	.LFB138:
 450:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 551               		.loc 1 450 36 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 450:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 557               		.loc 1 450 38 view .LVU130
 558 0000 81E0      		ldi r24,lo8(1)
 559 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 560               	.LVL24:
 561               		.cfi_endproc
 562               	.LFE138:
 564               		.section	.text.rgblight_increase_speed_noeeprom,"ax",@progbits
 565               	.global	rgblight_increase_speed_noeeprom
 567               	rgblight_increase_speed_noeeprom:
 568               	.LFB139:
 451:quantum/rgblight.c **** 
 569               		.loc 1 451 45 view -0
 570               		.cfi_startproc
 571               	/* prologue: function */
 572               	/* frame size = 0 */
 573               	/* stack size = 0 */
 574               	.L__stack_usage = 0
 451:quantum/rgblight.c **** 
 575               		.loc 1 451 47 view .LVU132
 576 0000 80E0      		ldi r24,0
 577 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 578               	.LVL25:
 579               		.cfi_endproc
 580               	.LFE139:
 582               		.section	.text.rgblight_decrease_speed_helper,"ax",@progbits
 583               	.global	rgblight_decrease_speed_helper
 585               	rgblight_decrease_speed_helper:
 586               	.LVL26:
 587               	.LFB140:
 453:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 588               		.loc 1 453 59 view -0
 589               		.cfi_startproc
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 594               		.loc 1 454 5 view .LVU134
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 595               		.loc 1 454 24 is_stmt 0 view .LVU135
 596 0000 9091 0000 		lds r25,rgblight_config+4
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 597               		.loc 1 454 8 view .LVU136
 598 0004 9923      		tst r25
 599 0006 01F0      		breq .L29
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 600               		.loc 1 454 36 is_stmt 1 discriminator 1 view .LVU137
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 601               		.loc 1 454 57 is_stmt 0 discriminator 1 view .LVU138
 602 0008 9150      		subi r25,lo8(-(-1))
 603 000a 9093 0000 		sts rgblight_config+4,r25
 604               	.L29:
 456:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 605               		.loc 1 456 5 is_stmt 1 view .LVU139
 456:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 606               		.loc 1 456 8 is_stmt 0 view .LVU140
 607 000e 8823      		tst r24
 608 0010 01F0      		breq .L28
 457:quantum/rgblight.c ****     }
 609               		.loc 1 457 9 is_stmt 1 view .LVU141
 610 0012 6091 0000 		lds r22,rgblight_config
 611 0016 7091 0000 		lds r23,rgblight_config+1
 612 001a 8091 0000 		lds r24,rgblight_config+2
 613 001e 9091 0000 		lds r25,rgblight_config+3
 614 0022 0C94 0000 		jmp eeconfig_update_rgblight
 615               	.LVL27:
 616               	.L28:
 617               	/* epilogue start */
 459:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 618               		.loc 1 459 1 is_stmt 0 view .LVU142
 619 0026 0895      		ret
 620               		.cfi_endproc
 621               	.LFE140:
 623               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 624               	.global	rgblight_decrease_speed
 626               	rgblight_decrease_speed:
 627               	.LFB141:
 460:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 628               		.loc 1 460 36 is_stmt 1 view -0
 629               		.cfi_startproc
 630               	/* prologue: function */
 631               	/* frame size = 0 */
 632               	/* stack size = 0 */
 633               	.L__stack_usage = 0
 460:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 634               		.loc 1 460 38 view .LVU144
 635 0000 81E0      		ldi r24,lo8(1)
 636 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 637               	.LVL28:
 638               		.cfi_endproc
 639               	.LFE141:
 641               		.section	.text.rgblight_decrease_speed_noeeprom,"ax",@progbits
 642               	.global	rgblight_decrease_speed_noeeprom
 644               	rgblight_decrease_speed_noeeprom:
 645               	.LFB142:
 461:quantum/rgblight.c **** 
 646               		.loc 1 461 45 view -0
 647               		.cfi_startproc
 648               	/* prologue: function */
 649               	/* frame size = 0 */
 650               	/* stack size = 0 */
 651               	.L__stack_usage = 0
 461:quantum/rgblight.c **** 
 652               		.loc 1 461 47 view .LVU146
 653 0000 80E0      		ldi r24,0
 654 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 655               	.LVL29:
 656               		.cfi_endproc
 657               	.LFE142:
 659               		.section	.text.rgblight_get_speed,"ax",@progbits
 660               	.global	rgblight_get_speed
 662               	rgblight_get_speed:
 663               	.LFB147:
 547:quantum/rgblight.c **** 
 664               		.loc 1 547 34 view -0
 665               		.cfi_startproc
 666               	/* prologue: function */
 667               	/* frame size = 0 */
 668               	/* stack size = 0 */
 669               	.L__stack_usage = 0
 547:quantum/rgblight.c **** 
 670               		.loc 1 547 36 view .LVU148
 547:quantum/rgblight.c **** 
 671               		.loc 1 547 1 is_stmt 0 view .LVU149
 672 0000 8091 0000 		lds r24,rgblight_config+4
 673               	/* epilogue start */
 674 0004 0895      		ret
 675               		.cfi_endproc
 676               	.LFE147:
 678               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 679               	.global	rgblight_set_speed_eeprom_helper
 681               	rgblight_set_speed_eeprom_helper:
 682               	.LVL30:
 683               	.LFB148:
 549:quantum/rgblight.c ****     rgblight_config.speed = speed;
 684               		.loc 1 549 76 is_stmt 1 view -0
 685               		.cfi_startproc
 686               	/* prologue: function */
 687               	/* frame size = 0 */
 688               	/* stack size = 0 */
 689               	.L__stack_usage = 0
 550:quantum/rgblight.c ****     if (write_to_eeprom) {
 690               		.loc 1 550 5 view .LVU151
 550:quantum/rgblight.c ****     if (write_to_eeprom) {
 691               		.loc 1 550 27 is_stmt 0 view .LVU152
 692 0000 8093 0000 		sts rgblight_config+4,r24
 551:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 693               		.loc 1 551 5 is_stmt 1 view .LVU153
 551:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 694               		.loc 1 551 8 is_stmt 0 view .LVU154
 695 0004 6623      		tst r22
 696 0006 01F0      		breq .L37
 552:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 697               		.loc 1 552 9 is_stmt 1 view .LVU155
 698 0008 6091 0000 		lds r22,rgblight_config
 699 000c 7091 0000 		lds r23,rgblight_config+1
 700 0010 8091 0000 		lds r24,rgblight_config+2
 701 0014 9091 0000 		lds r25,rgblight_config+3
 702               	.LVL31:
 552:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 703               		.loc 1 552 9 is_stmt 0 view .LVU156
 704 0018 0C94 0000 		jmp eeconfig_update_rgblight
 705               	.LVL32:
 706               	.L37:
 707               	/* epilogue start */
 557:quantum/rgblight.c **** 
 708               		.loc 1 557 1 view .LVU157
 709 001c 0895      		ret
 710               		.cfi_endproc
 711               	.LFE148:
 713               		.section	.text.rgblight_set_speed,"ax",@progbits
 714               	.global	rgblight_set_speed
 716               	rgblight_set_speed:
 717               	.LVL33:
 718               	.LFB149:
 559:quantum/rgblight.c **** 
 719               		.loc 1 559 40 is_stmt 1 view -0
 720               		.cfi_startproc
 721               	/* prologue: function */
 722               	/* frame size = 0 */
 723               	/* stack size = 0 */
 724               	.L__stack_usage = 0
 559:quantum/rgblight.c **** 
 725               		.loc 1 559 42 view .LVU159
 726 0000 61E0      		ldi r22,lo8(1)
 727 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 728               	.LVL34:
 559:quantum/rgblight.c **** 
 729               		.loc 1 559 42 is_stmt 0 view .LVU160
 730               		.cfi_endproc
 731               	.LFE149:
 733               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 734               	.global	rgblight_set_speed_noeeprom
 736               	rgblight_set_speed_noeeprom:
 737               	.LVL35:
 738               	.LFB150:
 561:quantum/rgblight.c **** 
 739               		.loc 1 561 49 is_stmt 1 view -0
 740               		.cfi_startproc
 741               	/* prologue: function */
 742               	/* frame size = 0 */
 743               	/* stack size = 0 */
 744               	.L__stack_usage = 0
 561:quantum/rgblight.c **** 
 745               		.loc 1 561 51 view .LVU162
 746 0000 60E0      		ldi r22,0
 747 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 748               	.LVL36:
 561:quantum/rgblight.c **** 
 749               		.loc 1 561 51 is_stmt 0 view .LVU163
 750               		.cfi_endproc
 751               	.LFE150:
 753               		.section	.text.rgblight_get_hue,"ax",@progbits
 754               	.global	rgblight_get_hue
 756               	rgblight_get_hue:
 757               	.LFB151:
 563:quantum/rgblight.c **** 
 758               		.loc 1 563 32 is_stmt 1 view -0
 759               		.cfi_startproc
 760               	/* prologue: function */
 761               	/* frame size = 0 */
 762               	/* stack size = 0 */
 763               	.L__stack_usage = 0
 563:quantum/rgblight.c **** 
 764               		.loc 1 563 34 view .LVU165
 563:quantum/rgblight.c **** 
 765               		.loc 1 563 1 is_stmt 0 view .LVU166
 766 0000 8091 0000 		lds r24,rgblight_config+1
 767               	/* epilogue start */
 768 0004 0895      		ret
 769               		.cfi_endproc
 770               	.LFE151:
 772               		.section	.text.rgblight_get_sat,"ax",@progbits
 773               	.global	rgblight_get_sat
 775               	rgblight_get_sat:
 776               	.LFB152:
 565:quantum/rgblight.c **** 
 777               		.loc 1 565 32 is_stmt 1 view -0
 778               		.cfi_startproc
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 565:quantum/rgblight.c **** 
 783               		.loc 1 565 34 view .LVU168
 565:quantum/rgblight.c **** 
 784               		.loc 1 565 1 is_stmt 0 view .LVU169
 785 0000 8091 0000 		lds r24,rgblight_config+2
 786               	/* epilogue start */
 787 0004 0895      		ret
 788               		.cfi_endproc
 789               	.LFE152:
 791               		.section	.text.rgblight_get_val,"ax",@progbits
 792               	.global	rgblight_get_val
 794               	rgblight_get_val:
 795               	.LFB153:
 567:quantum/rgblight.c **** 
 796               		.loc 1 567 32 is_stmt 1 view -0
 797               		.cfi_startproc
 798               	/* prologue: function */
 799               	/* frame size = 0 */
 800               	/* stack size = 0 */
 801               	.L__stack_usage = 0
 567:quantum/rgblight.c **** 
 802               		.loc 1 567 34 view .LVU171
 567:quantum/rgblight.c **** 
 803               		.loc 1 567 1 is_stmt 0 view .LVU172
 804 0000 8091 0000 		lds r24,rgblight_config+3
 805               	/* epilogue start */
 806 0004 0895      		ret
 807               		.cfi_endproc
 808               	.LFE153:
 810               		.section	.text.rgblight_get_hsv,"ax",@progbits
 811               	.global	rgblight_get_hsv
 813               	rgblight_get_hsv:
 814               	.LFB154:
 569:quantum/rgblight.c **** 
 815               		.loc 1 569 28 is_stmt 1 view -0
 816               		.cfi_startproc
 817               	/* prologue: function */
 818               	/* frame size = 0 */
 819               	/* stack size = 0 */
 820               	.L__stack_usage = 0
 569:quantum/rgblight.c **** 
 821               		.loc 1 569 30 view .LVU174
 569:quantum/rgblight.c **** 
 822               		.loc 1 569 79 is_stmt 0 view .LVU175
 823 0000 E0E0      		ldi r30,lo8(rgblight_config)
 824 0002 F0E0      		ldi r31,hi8(rgblight_config)
 825 0004 7281      		ldd r23,Z+2
 569:quantum/rgblight.c **** 
 826               		.loc 1 569 37 view .LVU176
 827 0006 6181      		ldd r22,Z+1
 569:quantum/rgblight.c **** 
 828               		.loc 1 569 1 view .LVU177
 829 0008 8381      		ldd r24,Z+3
 830               	/* epilogue start */
 831 000a 0895      		ret
 832               		.cfi_endproc
 833               	.LFE154:
 835               		.section	.text.rgblight_call_driver,"ax",@progbits
 836               		.weak	rgblight_call_driver
 838               	rgblight_call_driver:
 839               	.LVL37:
 840               	.LFB165:
 792:quantum/rgblight.c **** 
 841               		.loc 1 792 88 is_stmt 1 view -0
 842               		.cfi_startproc
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 792:quantum/rgblight.c **** 
 847               		.loc 1 792 90 view .LVU179
 848 0000 70E0      		ldi r23,0
 849 0002 0C94 0000 		jmp ws2812_setleds
 850               	.LVL38:
 792:quantum/rgblight.c **** 
 851               		.loc 1 792 90 is_stmt 0 view .LVU180
 852               		.cfi_endproc
 853               	.LFE165:
 855               		.section	.text.rgblight_set,"ax",@progbits
 856               	.global	rgblight_set
 858               	rgblight_set:
 859               	.LFB166:
 796:quantum/rgblight.c ****     LED_TYPE *start_led;
 860               		.loc 1 796 25 is_stmt 1 view -0
 861               		.cfi_startproc
 862               	/* prologue: function */
 863               	/* frame size = 0 */
 864               	/* stack size = 0 */
 865               	.L__stack_usage = 0
 797:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 866               		.loc 1 797 5 view .LVU182
 798:quantum/rgblight.c **** 
 867               		.loc 1 798 5 view .LVU183
 798:quantum/rgblight.c **** 
 868               		.loc 1 798 15 is_stmt 0 view .LVU184
 869 0000 6091 0000 		lds r22,rgblight_ranges+1
 870               	.LVL39:
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 871               		.loc 1 800 5 is_stmt 1 view .LVU185
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 872               		.loc 1 800 25 is_stmt 0 view .LVU186
 873 0004 8091 0000 		lds r24,rgblight_config
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 874               		.loc 1 800 8 view .LVU187
 875 0008 80FF      		sbrs r24,0
 876 000a 00C0      		rjmp .L47
 877               	.L50:
 830:quantum/rgblight.c **** #    endif
 878               		.loc 1 830 5 is_stmt 1 view .LVU188
 879               	.LVL40:
 838:quantum/rgblight.c **** }
 880               		.loc 1 838 5 view .LVU189
 830:quantum/rgblight.c **** #    endif
 881               		.loc 1 830 21 is_stmt 0 view .LVU190
 882 000c 8091 0000 		lds r24,rgblight_ranges
 883 0010 23E0      		ldi r18,lo8(3)
 884 0012 829F      		mul r24,r18
 885 0014 C001      		movw r24,r0
 886 0016 1124      		clr __zero_reg__
 838:quantum/rgblight.c **** }
 887               		.loc 1 838 5 view .LVU191
 888 0018 8050      		subi r24,lo8(-(led))
 889 001a 9040      		sbci r25,hi8(-(led))
 890 001c 0C94 0000 		jmp rgblight_call_driver
 891               	.LVL41:
 892               	.L47:
 801:quantum/rgblight.c ****             led[i].r = 0;
 893               		.loc 1 801 9 is_stmt 1 view .LVU192
 894               	.LBB22:
 801:quantum/rgblight.c ****             led[i].r = 0;
 895               		.loc 1 801 14 view .LVU193
 801:quantum/rgblight.c ****             led[i].r = 0;
 896               		.loc 1 801 22 is_stmt 0 view .LVU194
 897 0020 8091 0000 		lds r24,rgblight_ranges+2
 898               	.LVL42:
 801:quantum/rgblight.c ****             led[i].r = 0;
 899               		.loc 1 801 79 view .LVU195
 900 0024 9091 0000 		lds r25,rgblight_ranges+3
 901 0028 23E0      		ldi r18,lo8(3)
 902 002a 829F      		mul r24,r18
 903 002c F001      		movw r30,r0
 904 002e 1124      		clr __zero_reg__
 905 0030 E050      		subi r30,lo8(-(led))
 906 0032 F040      		sbci r31,hi8(-(led))
 907               	.L48:
 801:quantum/rgblight.c ****             led[i].r = 0;
 908               		.loc 1 801 60 is_stmt 1 discriminator 1 view .LVU196
 801:quantum/rgblight.c ****             led[i].r = 0;
 909               		.loc 1 801 9 is_stmt 0 discriminator 1 view .LVU197
 910 0034 8917      		cp r24,r25
 911 0036 00F4      		brsh .L50
 802:quantum/rgblight.c ****             led[i].g = 0;
 912               		.loc 1 802 13 is_stmt 1 discriminator 3 view .LVU198
 802:quantum/rgblight.c ****             led[i].g = 0;
 913               		.loc 1 802 22 is_stmt 0 discriminator 3 view .LVU199
 914 0038 1182      		std Z+1,__zero_reg__
 803:quantum/rgblight.c ****             led[i].b = 0;
 915               		.loc 1 803 13 is_stmt 1 discriminator 3 view .LVU200
 803:quantum/rgblight.c ****             led[i].b = 0;
 916               		.loc 1 803 22 is_stmt 0 discriminator 3 view .LVU201
 917 003a 1082      		st Z,__zero_reg__
 804:quantum/rgblight.c **** #    ifdef RGBW
 918               		.loc 1 804 13 is_stmt 1 discriminator 3 view .LVU202
 804:quantum/rgblight.c **** #    ifdef RGBW
 919               		.loc 1 804 22 is_stmt 0 discriminator 3 view .LVU203
 920 003c 1282      		std Z+2,__zero_reg__
 801:quantum/rgblight.c ****             led[i].r = 0;
 921               		.loc 1 801 96 is_stmt 1 discriminator 3 view .LVU204
 801:quantum/rgblight.c ****             led[i].r = 0;
 922               		.loc 1 801 97 is_stmt 0 discriminator 3 view .LVU205
 923 003e 8F5F      		subi r24,lo8(-(1))
 924               	.LVL43:
 801:quantum/rgblight.c ****             led[i].r = 0;
 925               		.loc 1 801 97 discriminator 3 view .LVU206
 926 0040 3396      		adiw r30,3
 927 0042 00C0      		rjmp .L48
 928               	.LBE22:
 929               		.cfi_endproc
 930               	.LFE166:
 932               		.section	.text.rgblight_setrgb,"ax",@progbits
 933               	.global	rgblight_setrgb
 935               	rgblight_setrgb:
 936               	.LVL44:
 937               	.LFB155:
 571:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 938               		.loc 1 571 55 is_stmt 1 view -0
 939               		.cfi_startproc
 940               	/* prologue: function */
 941               	/* frame size = 0 */
 942               	/* stack size = 0 */
 943               	.L__stack_usage = 0
 572:quantum/rgblight.c ****         return;
 944               		.loc 1 572 5 view .LVU208
 572:quantum/rgblight.c ****         return;
 945               		.loc 1 572 25 is_stmt 0 view .LVU209
 946 0000 9091 0000 		lds r25,rgblight_config
 572:quantum/rgblight.c ****         return;
 947               		.loc 1 572 8 view .LVU210
 948 0004 90FF      		sbrs r25,0
 949 0006 00C0      		rjmp .L51
 576:quantum/rgblight.c ****         led[i].r = r;
 950               		.loc 1 576 5 is_stmt 1 view .LVU211
 951               	.LBB23:
 576:quantum/rgblight.c ****         led[i].r = r;
 952               		.loc 1 576 10 view .LVU212
 576:quantum/rgblight.c ****         led[i].r = r;
 953               		.loc 1 576 18 is_stmt 0 view .LVU213
 954 0008 9091 0000 		lds r25,rgblight_ranges+2
 955               	.LVL45:
 576:quantum/rgblight.c ****         led[i].r = r;
 956               		.loc 1 576 75 view .LVU214
 957 000c 2091 0000 		lds r18,rgblight_ranges+3
 958 0010 33E0      		ldi r19,lo8(3)
 959 0012 939F      		mul r25,r19
 960 0014 F001      		movw r30,r0
 961 0016 1124      		clr __zero_reg__
 962 0018 E050      		subi r30,lo8(-(led))
 963 001a F040      		sbci r31,hi8(-(led))
 964               	.L53:
 576:quantum/rgblight.c ****         led[i].r = r;
 965               		.loc 1 576 56 is_stmt 1 discriminator 1 view .LVU215
 576:quantum/rgblight.c ****         led[i].r = r;
 966               		.loc 1 576 5 is_stmt 0 discriminator 1 view .LVU216
 967 001c 9217      		cp r25,r18
 968 001e 00F0      		brlo .L54
 576:quantum/rgblight.c ****         led[i].r = r;
 969               		.loc 1 576 5 discriminator 1 view .LVU217
 970               	.LBE23:
 584:quantum/rgblight.c **** }
 971               		.loc 1 584 5 is_stmt 1 view .LVU218
 972 0020 0C94 0000 		jmp rgblight_set
 973               	.LVL46:
 974               	.L54:
 975               	.LBB24:
 577:quantum/rgblight.c ****         led[i].g = g;
 976               		.loc 1 577 9 discriminator 3 view .LVU219
 577:quantum/rgblight.c ****         led[i].g = g;
 977               		.loc 1 577 18 is_stmt 0 discriminator 3 view .LVU220
 978 0024 8183      		std Z+1,r24
 578:quantum/rgblight.c ****         led[i].b = b;
 979               		.loc 1 578 9 is_stmt 1 discriminator 3 view .LVU221
 578:quantum/rgblight.c ****         led[i].b = b;
 980               		.loc 1 578 18 is_stmt 0 discriminator 3 view .LVU222
 981 0026 6083      		st Z,r22
 579:quantum/rgblight.c **** #ifdef RGBW
 982               		.loc 1 579 9 is_stmt 1 discriminator 3 view .LVU223
 579:quantum/rgblight.c **** #ifdef RGBW
 983               		.loc 1 579 18 is_stmt 0 discriminator 3 view .LVU224
 984 0028 4283      		std Z+2,r20
 576:quantum/rgblight.c ****         led[i].r = r;
 985               		.loc 1 576 92 is_stmt 1 discriminator 3 view .LVU225
 576:quantum/rgblight.c ****         led[i].r = r;
 986               		.loc 1 576 93 is_stmt 0 discriminator 3 view .LVU226
 987 002a 9F5F      		subi r25,lo8(-(1))
 988               	.LVL47:
 576:quantum/rgblight.c ****         led[i].r = r;
 989               		.loc 1 576 93 discriminator 3 view .LVU227
 990 002c 3396      		adiw r30,3
 991 002e 00C0      		rjmp .L53
 992               	.LVL48:
 993               	.L51:
 994               	/* epilogue start */
 576:quantum/rgblight.c ****         led[i].r = r;
 995               		.loc 1 576 93 discriminator 3 view .LVU228
 996               	.LBE24:
 585:quantum/rgblight.c **** 
 997               		.loc 1 585 1 view .LVU229
 998 0030 0895      		ret
 999               		.cfi_endproc
 1000               	.LFE155:
 1002               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 1003               	.global	rgblight_sethsv_noeeprom_old
 1005               	rgblight_sethsv_noeeprom_old:
 1006               	.LVL49:
 1007               	.LFB143:
 463:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1008               		.loc 1 463 74 is_stmt 1 view -0
 1009               		.cfi_startproc
 463:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1010               		.loc 1 463 74 is_stmt 0 view .LVU231
 1011 0000 CF93      		push r28
 1012               	.LCFI6:
 1013               		.cfi_def_cfa_offset 3
 1014               		.cfi_offset 28, -2
 1015 0002 DF93      		push r29
 1016               	.LCFI7:
 1017               		.cfi_def_cfa_offset 4
 1018               		.cfi_offset 29, -3
 1019 0004 00D0      		rcall .
 1020 0006 0F92      		push __tmp_reg__
 1021               	.LCFI8:
 1022               		.cfi_def_cfa_offset 7
 1023 0008 CDB7      		in r28,__SP_L__
 1024 000a DEB7      		in r29,__SP_H__
 1025               	.LCFI9:
 1026               		.cfi_def_cfa_register 28
 1027               	/* prologue: function */
 1028               	/* frame size = 3 */
 1029               	/* stack size = 5 */
 1030               	.L__stack_usage = 5
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1031               		.loc 1 464 5 is_stmt 1 view .LVU232
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1032               		.loc 1 464 9 is_stmt 0 view .LVU233
 1033 000c 9091 0000 		lds r25,rgblight_config
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1034               		.loc 1 464 8 view .LVU234
 1035 0010 90FF      		sbrs r25,0
 1036 0012 00C0      		rjmp .L55
 1037               	.LBB28:
 465:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 1038               		.loc 1 465 9 is_stmt 1 view .LVU235
 466:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1039               		.loc 1 466 9 view .LVU236
 1040               	.LVL50:
 1041               	.LBB29:
 1042               	.LBI29:
 154:quantum/rgblight.c **** 
 1043               		.loc 1 154 6 view .LVU237
 1044               	.LBB30:
 154:quantum/rgblight.c **** 
 1045               		.loc 1 154 70 view .LVU238
 1046 0014 9E01      		movw r18,r28
 1047 0016 2F5F      		subi r18,-1
 1048 0018 3F4F      		sbci r19,-1
 1049 001a 0E94 0000 		call sethsv_raw
 1050               	.LVL51:
 154:quantum/rgblight.c **** 
 1051               		.loc 1 154 70 is_stmt 0 view .LVU239
 1052               	.LBE30:
 1053               	.LBE29:
 467:quantum/rgblight.c ****     }
 1054               		.loc 1 467 9 is_stmt 1 view .LVU240
 1055 001e 4B81      		ldd r20,Y+3
 1056 0020 6981      		ldd r22,Y+1
 1057 0022 8A81      		ldd r24,Y+2
 1058 0024 0E94 0000 		call rgblight_setrgb
 1059               	.LVL52:
 1060               	.L55:
 1061               	/* epilogue start */
 1062               	.LBE28:
 469:quantum/rgblight.c **** 
 1063               		.loc 1 469 1 is_stmt 0 view .LVU241
 1064 0028 0F90      		pop __tmp_reg__
 1065 002a 0F90      		pop __tmp_reg__
 1066 002c 0F90      		pop __tmp_reg__
 1067 002e DF91      		pop r29
 1068 0030 CF91      		pop r28
 1069 0032 0895      		ret
 1070               		.cfi_endproc
 1071               	.LFE143:
 1073               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 1074               	.global	rgblight_effect_breathing
 1076               	rgblight_effect_breathing:
 1077               	.LVL53:
 1078               	.LFB175:
 937:quantum/rgblight.c **** 
 938:quantum/rgblight.c **** void rgblight_task(void) {
 939:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 940:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 941:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 942:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 943:quantum/rgblight.c ****         animation_status.delta      = delta;
 944:quantum/rgblight.c **** 
 945:quantum/rgblight.c ****         // static light mode, do nothing here
 946:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 947:quantum/rgblight.c ****         }
 948:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 949:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 950:quantum/rgblight.c ****             // breathing mode
 951:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 952:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 953:quantum/rgblight.c ****         }
 954:quantum/rgblight.c **** #    endif
 955:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 956:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 957:quantum/rgblight.c ****             // rainbow mood mode
 958:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 959:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 960:quantum/rgblight.c ****         }
 961:quantum/rgblight.c **** #    endif
 962:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 963:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 964:quantum/rgblight.c ****             // rainbow swirl mode
 965:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 966:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 967:quantum/rgblight.c ****         }
 968:quantum/rgblight.c **** #    endif
 969:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 970:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 971:quantum/rgblight.c ****             // snake mode
 972:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 973:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 974:quantum/rgblight.c ****         }
 975:quantum/rgblight.c **** #    endif
 976:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 977:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 978:quantum/rgblight.c ****             // knight mode
 979:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 980:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 981:quantum/rgblight.c ****         }
 982:quantum/rgblight.c **** #    endif
 983:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 984:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 985:quantum/rgblight.c ****             // christmas mode
 986:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 987:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 988:quantum/rgblight.c ****         }
 989:quantum/rgblight.c **** #    endif
 990:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 991:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 992:quantum/rgblight.c ****             // RGB test mode
 993:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 994:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 995:quantum/rgblight.c ****         }
 996:quantum/rgblight.c **** #    endif
 997:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 998:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 999:quantum/rgblight.c ****             interval_time = 500;
1000:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
1001:quantum/rgblight.c ****         }
1002:quantum/rgblight.c **** #    endif
1003:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_TWINKLE
1004:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_TWINKLE) {
1005:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
1006:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
1007:quantum/rgblight.c ****         }
1008:quantum/rgblight.c **** #    endif
1009:quantum/rgblight.c ****         if (animation_status.restart) {
1010:quantum/rgblight.c ****             animation_status.restart    = false;
1011:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
1012:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
1013:quantum/rgblight.c ****         }
1014:quantum/rgblight.c ****         uint16_t now = sync_timer_read();
1015:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
1016:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1017:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
1018:quantum/rgblight.c ****             static bool     tick_flag         = false;
1019:quantum/rgblight.c ****             uint16_t        oldpos16;
1020:quantum/rgblight.c ****             if (tick_flag) {
1021:quantum/rgblight.c ****                 tick_flag = false;
1022:quantum/rgblight.c ****                 if (timer_expired(now, report_last_timer)) {
1023:quantum/rgblight.c ****                     report_last_timer += 30000;
1024:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
1025:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
1026:quantum/rgblight.c ****                 }
1027:quantum/rgblight.c ****             }
1028:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
1029:quantum/rgblight.c **** #    endif
1030:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
1031:quantum/rgblight.c ****             effect_func(&animation_status);
1032:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1033:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
1034:quantum/rgblight.c ****                 tick_flag = true;
1035:quantum/rgblight.c ****             }
1036:quantum/rgblight.c **** #    endif
1037:quantum/rgblight.c ****         }
1038:quantum/rgblight.c ****     }
1039:quantum/rgblight.c **** 
1040:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
1041:quantum/rgblight.c ****     rgblight_blink_layer_repeat_helper();
1042:quantum/rgblight.c **** #    endif
1043:quantum/rgblight.c **** }
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
1046:quantum/rgblight.c **** 
1047:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_TWINKLE)
1048:quantum/rgblight.c **** 
1049:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
1050:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
1051:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
1052:quantum/rgblight.c **** #        endif
1053:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
1054:quantum/rgblight.c **** #    endif
1055:quantum/rgblight.c **** 
1056:quantum/rgblight.c **** static uint8_t breathe_calc(uint8_t pos) {
1057:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
1058:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
1059:quantum/rgblight.c ****     return pgm_read_byte(&rgblight_effect_breathe_table[pos / table_scale]);
1060:quantum/rgblight.c **** #    else
1061:quantum/rgblight.c ****     return (exp(sin((pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT_EFFE
1062:quantum/rgblight.c **** #    endif
1063:quantum/rgblight.c **** }
1064:quantum/rgblight.c **** 
1065:quantum/rgblight.c **** #endif
1066:quantum/rgblight.c **** 
1067:quantum/rgblight.c **** // Effects
1068:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
1069:quantum/rgblight.c **** 
1070:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
1071:quantum/rgblight.c **** 
1072:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 1079               		.loc 1 1072 58 is_stmt 1 view -0
 1080               		.cfi_startproc
 1081               		.loc 1 1072 58 is_stmt 0 view .LVU243
 1082 0000 CF93      		push r28
 1083               	.LCFI10:
 1084               		.cfi_def_cfa_offset 3
 1085               		.cfi_offset 28, -2
 1086 0002 DF93      		push r29
 1087               	.LCFI11:
 1088               		.cfi_def_cfa_offset 4
 1089               		.cfi_offset 29, -3
 1090               	/* prologue: function */
 1091               	/* frame size = 0 */
 1092               	/* stack size = 2 */
 1093               	.L__stack_usage = 2
 1094 0004 EC01      		movw r28,r24
1073:quantum/rgblight.c ****     uint8_t val = breathe_calc(anim->pos);
 1095               		.loc 1 1073 5 is_stmt 1 view .LVU244
 1096               	.LVL54:
 1097               	.LBB34:
 1098               	.LBI34:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 1099               		.loc 1 1056 16 view .LVU245
 1100               	.LBE34:
1059:quantum/rgblight.c **** #    else
 1101               		.loc 1 1059 5 view .LVU246
 1102               	.LBB36:
 1103               	.LBB35:
1059:quantum/rgblight.c **** #    else
 1104               		.loc 1 1059 12 view .LVU247
1059:quantum/rgblight.c **** #    else
 1105               		.loc 1 1059 12 view .LVU248
1059:quantum/rgblight.c **** #    else
 1106               		.loc 1 1059 12 view .LVU249
 1107 0006 EC81      		ldd r30,Y+4
 1108 0008 F0E0      		ldi r31,0
 1109 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 1110 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 1111               	/* #APP */
 1112               	 ;  1059 "quantum/rgblight.c" 1
 1113 000e 4491      		lpm r20, Z
 1114               		
 1115               	 ;  0 "" 2
 1116               	.LVL55:
1059:quantum/rgblight.c **** #    else
 1117               		.loc 1 1059 12 view .LVU250
1059:quantum/rgblight.c **** #    else
 1118               		.loc 1 1059 12 is_stmt 0 view .LVU251
 1119               	/* #NOAPP */
 1120               	.LBE35:
 1121               	.LBE36:
1074:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 1122               		.loc 1 1074 5 is_stmt 1 view .LVU252
 1123 0010 E0E0      		ldi r30,lo8(rgblight_config)
 1124 0012 F0E0      		ldi r31,hi8(rgblight_config)
 1125 0014 6281      		ldd r22,Z+2
 1126 0016 8181      		ldd r24,Z+1
 1127               	.LVL56:
 1128               		.loc 1 1074 5 is_stmt 0 view .LVU253
 1129 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1130               	.LVL57:
1075:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 1131               		.loc 1 1075 5 is_stmt 1 view .LVU254
 1132               		.loc 1 1075 28 is_stmt 0 view .LVU255
 1133 001c 8C81      		ldd r24,Y+4
 1134 001e 8F5F      		subi r24,lo8(-(1))
 1135               		.loc 1 1075 15 view .LVU256
 1136 0020 8C83      		std Y+4,r24
 1137               	/* epilogue start */
1076:quantum/rgblight.c **** }
 1138               		.loc 1 1076 1 view .LVU257
 1139 0022 DF91      		pop r29
 1140 0024 CF91      		pop r28
 1141               	.LVL58:
 1142               		.loc 1 1076 1 view .LVU258
 1143 0026 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE175:
 1147               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1148               	.global	rgblight_effect_rainbow_mood
 1150               	rgblight_effect_rainbow_mood:
 1151               	.LVL59:
 1152               	.LFB176:
1077:quantum/rgblight.c **** #endif
1078:quantum/rgblight.c **** 
1079:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
1080:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
1081:quantum/rgblight.c **** 
1082:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 1153               		.loc 1 1082 61 is_stmt 1 view -0
 1154               		.cfi_startproc
 1155               		.loc 1 1082 61 is_stmt 0 view .LVU260
 1156 0000 CF93      		push r28
 1157               	.LCFI12:
 1158               		.cfi_def_cfa_offset 3
 1159               		.cfi_offset 28, -2
 1160 0002 DF93      		push r29
 1161               	.LCFI13:
 1162               		.cfi_def_cfa_offset 4
 1163               		.cfi_offset 29, -3
 1164               	/* prologue: function */
 1165               	/* frame size = 0 */
 1166               	/* stack size = 2 */
 1167               	.L__stack_usage = 2
 1168 0004 EC01      		movw r28,r24
1083:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 1169               		.loc 1 1083 5 is_stmt 1 view .LVU261
 1170 0006 E0E0      		ldi r30,lo8(rgblight_config)
 1171 0008 F0E0      		ldi r31,hi8(rgblight_config)
 1172 000a 4381      		ldd r20,Z+3
 1173 000c 6281      		ldd r22,Z+2
 1174 000e 8C81      		ldd r24,Y+4
 1175               	.LVL60:
 1176               		.loc 1 1083 5 is_stmt 0 view .LVU262
 1177 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1178               	.LVL61:
1084:quantum/rgblight.c ****     anim->current_hue++;
 1179               		.loc 1 1084 5 is_stmt 1 view .LVU263
 1180               		.loc 1 1084 22 is_stmt 0 view .LVU264
 1181 0014 8C81      		ldd r24,Y+4
 1182 0016 8F5F      		subi r24,lo8(-(1))
 1183 0018 8C83      		std Y+4,r24
 1184               	/* epilogue start */
1085:quantum/rgblight.c **** }
 1185               		.loc 1 1085 1 view .LVU265
 1186 001a DF91      		pop r29
 1187 001c CF91      		pop r28
 1188               	.LVL62:
 1189               		.loc 1 1085 1 view .LVU266
 1190 001e 0895      		ret
 1191               		.cfi_endproc
 1192               	.LFE176:
 1194               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1195               	.global	rgblight_effect_rgbtest
 1197               	rgblight_effect_rgbtest:
 1198               	.LVL63:
 1199               	.LFB181:
1086:quantum/rgblight.c **** #endif
1087:quantum/rgblight.c **** 
1088:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
1089:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
1090:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
1091:quantum/rgblight.c **** #    endif
1092:quantum/rgblight.c **** 
1093:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
1094:quantum/rgblight.c **** 
1095:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
1096:quantum/rgblight.c ****     uint8_t hue;
1097:quantum/rgblight.c ****     uint8_t i;
1098:quantum/rgblight.c **** 
1099:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1100:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
1101:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
1102:quantum/rgblight.c ****     }
1103:quantum/rgblight.c ****     rgblight_set();
1104:quantum/rgblight.c **** 
1105:quantum/rgblight.c ****     if (anim->delta % 2) {
1106:quantum/rgblight.c ****         anim->current_hue++;
1107:quantum/rgblight.c ****     } else {
1108:quantum/rgblight.c ****         anim->current_hue--;
1109:quantum/rgblight.c ****     }
1110:quantum/rgblight.c **** }
1111:quantum/rgblight.c **** #endif
1112:quantum/rgblight.c **** 
1113:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
1114:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
1115:quantum/rgblight.c **** 
1116:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
1117:quantum/rgblight.c ****     static uint8_t pos = 0;
1118:quantum/rgblight.c ****     uint8_t        i, j;
1119:quantum/rgblight.c ****     int8_t         k;
1120:quantum/rgblight.c ****     int8_t         increment = 1;
1121:quantum/rgblight.c **** 
1122:quantum/rgblight.c ****     if (anim->delta % 2) {
1123:quantum/rgblight.c ****         increment = -1;
1124:quantum/rgblight.c ****     }
1125:quantum/rgblight.c **** 
1126:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1127:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1128:quantum/rgblight.c ****         if (increment == 1) {
1129:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1130:quantum/rgblight.c ****         } else {
1131:quantum/rgblight.c ****             pos = 0;
1132:quantum/rgblight.c ****         }
1133:quantum/rgblight.c ****         anim->pos = 1;
1134:quantum/rgblight.c ****     }
1135:quantum/rgblight.c **** #    endif
1136:quantum/rgblight.c **** 
1137:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1138:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1139:quantum/rgblight.c ****         ledp->r        = 0;
1140:quantum/rgblight.c ****         ledp->g        = 0;
1141:quantum/rgblight.c ****         ledp->b        = 0;
1142:quantum/rgblight.c **** #    ifdef RGBW
1143:quantum/rgblight.c ****         ledp->w = 0;
1144:quantum/rgblight.c **** #    endif
1145:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
1146:quantum/rgblight.c ****             k = pos + j * increment;
1147:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
1148:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
1149:quantum/rgblight.c ****             }
1150:quantum/rgblight.c ****             if (k < 0) {
1151:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
1152:quantum/rgblight.c ****             }
1153:quantum/rgblight.c ****             if (i == k) {
1154:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
1155:quantum/rgblight.c ****             }
1156:quantum/rgblight.c ****         }
1157:quantum/rgblight.c ****     }
1158:quantum/rgblight.c ****     rgblight_set();
1159:quantum/rgblight.c ****     if (increment == 1) {
1160:quantum/rgblight.c ****         if (pos - 1 < 0) {
1161:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1162:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1163:quantum/rgblight.c ****             anim->pos = 0;
1164:quantum/rgblight.c **** #    endif
1165:quantum/rgblight.c ****         } else {
1166:quantum/rgblight.c ****             pos -= 1;
1167:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1168:quantum/rgblight.c ****             anim->pos = 1;
1169:quantum/rgblight.c **** #    endif
1170:quantum/rgblight.c ****         }
1171:quantum/rgblight.c ****     } else {
1172:quantum/rgblight.c ****         pos = (pos + 1) % rgblight_ranges.effect_num_leds;
1173:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1174:quantum/rgblight.c ****         anim->pos = pos;
1175:quantum/rgblight.c **** #    endif
1176:quantum/rgblight.c ****     }
1177:quantum/rgblight.c **** }
1178:quantum/rgblight.c **** #endif
1179:quantum/rgblight.c **** 
1180:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1181:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1182:quantum/rgblight.c **** 
1183:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1184:quantum/rgblight.c ****     static int8_t low_bound  = 0;
1185:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1186:quantum/rgblight.c ****     static int8_t increment  = 1;
1187:quantum/rgblight.c ****     uint8_t       i, cur;
1188:quantum/rgblight.c **** 
1189:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1190:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1191:quantum/rgblight.c ****         anim->pos  = 1;
1192:quantum/rgblight.c ****         low_bound  = 0;
1193:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1194:quantum/rgblight.c ****         increment  = 1;
1195:quantum/rgblight.c ****     }
1196:quantum/rgblight.c **** #    endif
1197:quantum/rgblight.c ****     // Set all the LEDs to 0
1198:quantum/rgblight.c ****     for (i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
1199:quantum/rgblight.c ****         led[i].r = 0;
1200:quantum/rgblight.c ****         led[i].g = 0;
1201:quantum/rgblight.c ****         led[i].b = 0;
1202:quantum/rgblight.c **** #    ifdef RGBW
1203:quantum/rgblight.c ****         led[i].w = 0;
1204:quantum/rgblight.c **** #    endif
1205:quantum/rgblight.c ****     }
1206:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1207:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1208:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
1209:quantum/rgblight.c **** 
1210:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1211:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1212:quantum/rgblight.c ****         } else {
1213:quantum/rgblight.c ****             led[cur].r = 0;
1214:quantum/rgblight.c ****             led[cur].g = 0;
1215:quantum/rgblight.c ****             led[cur].b = 0;
1216:quantum/rgblight.c **** #    ifdef RGBW
1217:quantum/rgblight.c ****             led[cur].w = 0;
1218:quantum/rgblight.c **** #    endif
1219:quantum/rgblight.c ****         }
1220:quantum/rgblight.c ****     }
1221:quantum/rgblight.c ****     rgblight_set();
1222:quantum/rgblight.c **** 
1223:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1224:quantum/rgblight.c ****     // time a boundary is hit.
1225:quantum/rgblight.c ****     low_bound += increment;
1226:quantum/rgblight.c ****     high_bound += increment;
1227:quantum/rgblight.c **** 
1228:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1229:quantum/rgblight.c ****         increment = -increment;
1230:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1231:quantum/rgblight.c ****         if (increment == 1) {
1232:quantum/rgblight.c ****             anim->pos = 0;
1233:quantum/rgblight.c ****         }
1234:quantum/rgblight.c **** #    endif
1235:quantum/rgblight.c ****     }
1236:quantum/rgblight.c **** }
1237:quantum/rgblight.c **** #endif
1238:quantum/rgblight.c **** 
1239:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1240:quantum/rgblight.c **** #    define CUBED(x) ((x) * (x) * (x))
1241:quantum/rgblight.c **** 
1242:quantum/rgblight.c **** /**
1243:quantum/rgblight.c ****  * Christmas lights effect, with a smooth animation between red & green.
1244:quantum/rgblight.c ****  */
1245:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1246:quantum/rgblight.c ****     static int8_t increment = 1;
1247:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
1248:quantum/rgblight.c ****     const uint8_t hue_green = 85;
1249:quantum/rgblight.c **** 
1250:quantum/rgblight.c ****     uint32_t xa;
1251:quantum/rgblight.c ****     uint8_t  hue, val;
1252:quantum/rgblight.c ****     uint8_t  i;
1253:quantum/rgblight.c **** 
1254:quantum/rgblight.c ****     // The effect works by animating anim->pos from 0 to 32 and back to 0.
1255:quantum/rgblight.c ****     // The pos is used in a cubic bezier formula to ease-in-out between red and green, leaving the 
1256:quantum/rgblight.c ****     xa  = CUBED((uint32_t)anim->pos);
1257:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
1258:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
1259:quantum/rgblight.c ****     val = 255 - (3 * (hue < hue_green / 2 ? hue : hue_green - hue) / 2);
1260:quantum/rgblight.c **** 
1261:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1262:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
1263:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
1264:quantum/rgblight.c ****     }
1265:quantum/rgblight.c ****     rgblight_set();
1266:quantum/rgblight.c **** 
1267:quantum/rgblight.c ****     if (anim->pos == 0) {
1268:quantum/rgblight.c ****         increment = 1;
1269:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
1270:quantum/rgblight.c ****         increment = -1;
1271:quantum/rgblight.c ****     }
1272:quantum/rgblight.c ****     anim->pos += increment;
1273:quantum/rgblight.c **** }
1274:quantum/rgblight.c **** #endif
1275:quantum/rgblight.c **** 
1276:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1277:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1278:quantum/rgblight.c **** 
1279:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1200               		.loc 1 1279 56 is_stmt 1 view -0
 1201               		.cfi_startproc
 1202               		.loc 1 1279 56 is_stmt 0 view .LVU268
 1203 0000 0F93      		push r16
 1204               	.LCFI14:
 1205               		.cfi_def_cfa_offset 3
 1206               		.cfi_offset 16, -2
 1207 0002 1F93      		push r17
 1208               	.LCFI15:
 1209               		.cfi_def_cfa_offset 4
 1210               		.cfi_offset 17, -3
 1211 0004 CF93      		push r28
 1212               	.LCFI16:
 1213               		.cfi_def_cfa_offset 5
 1214               		.cfi_offset 28, -4
 1215 0006 DF93      		push r29
 1216               	.LCFI17:
 1217               		.cfi_def_cfa_offset 6
 1218               		.cfi_offset 29, -5
 1219 0008 00D0      		rcall .
 1220 000a 0F92      		push __tmp_reg__
 1221               	.LCFI18:
 1222               		.cfi_def_cfa_offset 9
 1223 000c CDB7      		in r28,__SP_L__
 1224 000e DEB7      		in r29,__SP_H__
 1225               	.LCFI19:
 1226               		.cfi_def_cfa_register 28
 1227               	/* prologue: function */
 1228               	/* frame size = 3 */
 1229               	/* stack size = 7 */
 1230               	.L__stack_usage = 7
 1231 0010 8C01      		movw r16,r24
1280:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1232               		.loc 1 1280 5 is_stmt 1 view .LVU269
1281:quantum/rgblight.c ****     uint8_t        g;
 1233               		.loc 1 1281 5 view .LVU270
1282:quantum/rgblight.c ****     uint8_t        r;
 1234               		.loc 1 1282 5 view .LVU271
1283:quantum/rgblight.c ****     uint8_t        b;
 1235               		.loc 1 1283 5 view .LVU272
1284:quantum/rgblight.c **** 
1285:quantum/rgblight.c ****     if (maxval == 0) {
 1236               		.loc 1 1285 5 view .LVU273
 1237               		.loc 1 1285 8 is_stmt 0 view .LVU274
 1238 0012 8091 0000 		lds r24,maxval.3469
 1239               	.LVL64:
 1240               		.loc 1 1285 8 view .LVU275
 1241 0016 8111      		cpse r24,__zero_reg__
 1242 0018 00C0      		rjmp .L63
 1243               	.LBB40:
1286:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1244               		.loc 1 1286 9 is_stmt 1 view .LVU276
1287:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1245               		.loc 1 1287 9 view .LVU277
 1246               	.LVL65:
 1247               	.LBB41:
 1248               	.LBI41:
 154:quantum/rgblight.c **** 
 1249               		.loc 1 154 6 view .LVU278
 1250               	.LBB42:
 154:quantum/rgblight.c **** 
 1251               		.loc 1 154 70 view .LVU279
 1252 001a 9E01      		movw r18,r28
 1253 001c 2F5F      		subi r18,-1
 1254 001e 3F4F      		sbci r19,-1
 1255 0020 4FEF      		ldi r20,lo8(-1)
 1256 0022 6FEF      		ldi r22,lo8(-1)
 1257 0024 0E94 0000 		call sethsv_raw
 1258               	.LVL66:
 154:quantum/rgblight.c **** 
 1259               		.loc 1 154 70 is_stmt 0 view .LVU280
 1260               	.LBE42:
 1261               	.LBE41:
1288:quantum/rgblight.c ****         maxval = tmp_led.r;
 1262               		.loc 1 1288 9 is_stmt 1 view .LVU281
 1263               		.loc 1 1288 16 is_stmt 0 view .LVU282
 1264 0028 8A81      		ldd r24,Y+2
 1265 002a 8093 0000 		sts maxval.3469,r24
 1266               	.L63:
 1267               	.LBE40:
1289:quantum/rgblight.c ****     }
1290:quantum/rgblight.c ****     g = r = b = 0;
 1268               		.loc 1 1290 5 is_stmt 1 view .LVU283
 1269               	.LVL67:
1291:quantum/rgblight.c ****     switch (anim->pos) {
 1270               		.loc 1 1291 5 view .LVU284
 1271               		.loc 1 1291 17 is_stmt 0 view .LVU285
 1272 002e F801      		movw r30,r16
 1273 0030 6481      		ldd r22,Z+4
 1274               		.loc 1 1291 5 view .LVU286
 1275 0032 6130      		cpi r22,lo8(1)
 1276 0034 01F0      		breq .L64
1292:quantum/rgblight.c ****         case 0:
1293:quantum/rgblight.c ****             r = maxval;
 1277               		.loc 1 1293 15 view .LVU287
 1278 0036 8091 0000 		lds r24,maxval.3469
 1279               	.LVL68:
1294:quantum/rgblight.c ****             break;
 1280               		.loc 1 1294 13 is_stmt 1 view .LVU288
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1281               		.loc 1 1290 15 is_stmt 0 view .LVU289
 1282 003a 40E0      		ldi r20,0
1291:quantum/rgblight.c ****         case 0:
 1283               		.loc 1 1291 5 view .LVU290
 1284 003c 6623      		tst r22
 1285 003e 01F0      		breq .L67
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1286               		.loc 1 1290 15 view .LVU291
 1287 0040 40E0      		ldi r20,0
1291:quantum/rgblight.c ****         case 0:
 1288               		.loc 1 1291 5 view .LVU292
 1289 0042 6230      		cpi r22,lo8(2)
 1290 0044 01F4      		brne .L68
1295:quantum/rgblight.c ****         case 1:
1296:quantum/rgblight.c ****             g = maxval;
1297:quantum/rgblight.c ****             break;
1298:quantum/rgblight.c ****         case 2:
1299:quantum/rgblight.c ****             b = maxval;
 1291               		.loc 1 1299 13 is_stmt 1 view .LVU293
 1292               		.loc 1 1299 15 is_stmt 0 view .LVU294
 1293 0046 4091 0000 		lds r20,maxval.3469
 1294               	.L68:
 1295               	.LVL69:
1300:quantum/rgblight.c ****             break;
 1296               		.loc 1 1300 13 is_stmt 1 view .LVU295
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1297               		.loc 1 1290 11 is_stmt 0 view .LVU296
 1298 004a 80E0      		ldi r24,0
 1299               	.LVL70:
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1300               		.loc 1 1290 7 view .LVU297
 1301 004c 60E0      		ldi r22,0
 1302               		.loc 1 1300 13 view .LVU298
 1303 004e 00C0      		rjmp .L67
 1304               	.LVL71:
 1305               	.L64:
1296:quantum/rgblight.c ****             break;
 1306               		.loc 1 1296 13 is_stmt 1 view .LVU299
1296:quantum/rgblight.c ****             break;
 1307               		.loc 1 1296 15 is_stmt 0 view .LVU300
 1308 0050 6091 0000 		lds r22,maxval.3469
 1309               	.LVL72:
1297:quantum/rgblight.c ****         case 2:
 1310               		.loc 1 1297 13 is_stmt 1 view .LVU301
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1311               		.loc 1 1290 15 is_stmt 0 view .LVU302
 1312 0054 40E0      		ldi r20,0
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1313               		.loc 1 1290 11 view .LVU303
 1314 0056 80E0      		ldi r24,0
 1315               	.LVL73:
 1316               	.L67:
1301:quantum/rgblight.c ****     }
1302:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1317               		.loc 1 1302 5 is_stmt 1 view .LVU304
 1318 0058 0E94 0000 		call rgblight_setrgb
 1319               	.LVL74:
1303:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1320               		.loc 1 1303 5 view .LVU305
 1321               		.loc 1 1303 22 is_stmt 0 view .LVU306
 1322 005c F801      		movw r30,r16
 1323 005e 8481      		ldd r24,Z+4
 1324 0060 90E0      		ldi r25,0
 1325               		.loc 1 1303 28 view .LVU307
 1326 0062 0196      		adiw r24,1
 1327               		.loc 1 1303 33 view .LVU308
 1328 0064 63E0      		ldi r22,lo8(3)
 1329 0066 70E0      		ldi r23,0
 1330 0068 0E94 0000 		call __divmodhi4
 1331               		.loc 1 1303 15 view .LVU309
 1332 006c 8483      		std Z+4,r24
 1333               	/* epilogue start */
1304:quantum/rgblight.c **** }
 1334               		.loc 1 1304 1 view .LVU310
 1335 006e 0F90      		pop __tmp_reg__
 1336 0070 0F90      		pop __tmp_reg__
 1337 0072 0F90      		pop __tmp_reg__
 1338 0074 DF91      		pop r29
 1339 0076 CF91      		pop r28
 1340 0078 1F91      		pop r17
 1341 007a 0F91      		pop r16
 1342               	.LVL75:
 1343               		.loc 1 1304 1 view .LVU311
 1344 007c 0895      		ret
 1345               		.cfi_endproc
 1346               	.LFE181:
 1348               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1349               	.global	rgblight_sethsv_eeprom_helper
 1351               	rgblight_sethsv_eeprom_helper:
 1352               	.LVL76:
 1353               	.LFB144:
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1354               		.loc 1 471 97 is_stmt 1 view -0
 1355               		.cfi_startproc
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1356               		.loc 1 471 97 is_stmt 0 view .LVU313
 1357 0000 AF92      		push r10
 1358               	.LCFI20:
 1359               		.cfi_def_cfa_offset 3
 1360               		.cfi_offset 10, -2
 1361 0002 BF92      		push r11
 1362               	.LCFI21:
 1363               		.cfi_def_cfa_offset 4
 1364               		.cfi_offset 11, -3
 1365 0004 CF92      		push r12
 1366               	.LCFI22:
 1367               		.cfi_def_cfa_offset 5
 1368               		.cfi_offset 12, -4
 1369 0006 DF92      		push r13
 1370               	.LCFI23:
 1371               		.cfi_def_cfa_offset 6
 1372               		.cfi_offset 13, -5
 1373 0008 EF92      		push r14
 1374               	.LCFI24:
 1375               		.cfi_def_cfa_offset 7
 1376               		.cfi_offset 14, -6
 1377 000a FF92      		push r15
 1378               	.LCFI25:
 1379               		.cfi_def_cfa_offset 8
 1380               		.cfi_offset 15, -7
 1381 000c 0F93      		push r16
 1382               	.LCFI26:
 1383               		.cfi_def_cfa_offset 9
 1384               		.cfi_offset 16, -8
 1385 000e 1F93      		push r17
 1386               	.LCFI27:
 1387               		.cfi_def_cfa_offset 10
 1388               		.cfi_offset 17, -9
 1389 0010 CF93      		push r28
 1390               	.LCFI28:
 1391               		.cfi_def_cfa_offset 11
 1392               		.cfi_offset 28, -10
 1393 0012 DF93      		push r29
 1394               	.LCFI29:
 1395               		.cfi_def_cfa_offset 12
 1396               		.cfi_offset 29, -11
 1397 0014 00D0      		rcall .
 1398 0016 0F92      		push __tmp_reg__
 1399               	.LCFI30:
 1400               		.cfi_def_cfa_offset 15
 1401 0018 CDB7      		in r28,__SP_L__
 1402 001a DEB7      		in r29,__SP_H__
 1403               	.LCFI31:
 1404               		.cfi_def_cfa_register 28
 1405               	/* prologue: function */
 1406               	/* frame size = 3 */
 1407               	/* stack size = 13 */
 1408               	.L__stack_usage = 13
 1409 001c 182F      		mov r17,r24
 1410 001e F62E      		mov r15,r22
 1411 0020 042F      		mov r16,r20
 1412 0022 E22E      		mov r14,r18
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1413               		.loc 1 472 5 is_stmt 1 view .LVU314
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1414               		.loc 1 472 9 is_stmt 0 view .LVU315
 1415 0024 9091 0000 		lds r25,rgblight_config
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1416               		.loc 1 472 8 view .LVU316
 1417 0028 90FF      		sbrs r25,0
 1418 002a 00C0      		rjmp .L69
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1419               		.loc 1 473 9 is_stmt 1 view .LVU317
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1420               		.loc 1 473 68 is_stmt 0 view .LVU318
 1421 002c E92F      		mov r30,r25
 1422 002e E695      		lsr r30
 1423 0030 AE2F      		mov r26,r30
 1424 0032 B0E0      		ldi r27,0
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1425               		.loc 1 473 52 view .LVU319
 1426 0034 A050      		subi r26,lo8(-(mode_base_table))
 1427 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1428 0038 8C91      		ld r24,X
 1429               	.LVL77:
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1430               		.loc 1 473 35 view .LVU320
 1431 003a 8093 0000 		sts rgblight_status,r24
 474:quantum/rgblight.c ****             // same static color
 1432               		.loc 1 474 9 is_stmt 1 view .LVU321
 474:quantum/rgblight.c ****             // same static color
 1433               		.loc 1 474 34 is_stmt 0 view .LVU322
 1434 003e 9E7F      		andi r25,lo8(-2)
 474:quantum/rgblight.c ****             // same static color
 1435               		.loc 1 474 12 view .LVU323
 1436 0040 9230      		cpi r25,lo8(2)
 1437 0042 01F4      		brne .L72
 1438               	.LBB52:
 476:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1439               		.loc 1 476 13 is_stmt 1 view .LVU324
 477:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1440               		.loc 1 477 13 view .LVU325
 1441               	.LVL78:
 1442               	.LBB53:
 1443               	.LBI53:
 154:quantum/rgblight.c **** 
 1444               		.loc 1 154 6 view .LVU326
 1445               	.LBB54:
 154:quantum/rgblight.c **** 
 1446               		.loc 1 154 70 view .LVU327
 1447 0044 9E01      		movw r18,r28
 1448               	.LVL79:
 154:quantum/rgblight.c **** 
 1449               		.loc 1 154 70 is_stmt 0 view .LVU328
 1450 0046 2F5F      		subi r18,-1
 1451 0048 3F4F      		sbci r19,-1
 1452 004a 812F      		mov r24,r17
 1453 004c 0E94 0000 		call sethsv_raw
 1454               	.LVL80:
 154:quantum/rgblight.c **** 
 1455               		.loc 1 154 70 view .LVU329
 1456               	.LBE54:
 1457               	.LBE53:
 478:quantum/rgblight.c ****         } else {
 1458               		.loc 1 478 13 is_stmt 1 view .LVU330
 1459 0050 4B81      		ldd r20,Y+3
 1460 0052 6981      		ldd r22,Y+1
 1461 0054 8A81      		ldd r24,Y+2
 1462 0056 0E94 0000 		call rgblight_setrgb
 1463               	.LVL81:
 1464               	.L73:
 478:quantum/rgblight.c ****         } else {
 1465               		.loc 1 478 13 is_stmt 0 view .LVU331
 1466               	.LBE52:
 531:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1467               		.loc 1 531 9 is_stmt 1 view .LVU332
 531:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1468               		.loc 1 531 29 is_stmt 0 view .LVU333
 1469 005a 1093 0000 		sts rgblight_config+1,r17
 532:quantum/rgblight.c ****         rgblight_config.val = val;
 1470               		.loc 1 532 9 is_stmt 1 view .LVU334
 532:quantum/rgblight.c ****         rgblight_config.val = val;
 1471               		.loc 1 532 29 is_stmt 0 view .LVU335
 1472 005e F092 0000 		sts rgblight_config+2,r15
 533:quantum/rgblight.c ****         if (write_to_eeprom) {
 1473               		.loc 1 533 9 is_stmt 1 view .LVU336
 533:quantum/rgblight.c ****         if (write_to_eeprom) {
 1474               		.loc 1 533 29 is_stmt 0 view .LVU337
 1475 0062 0093 0000 		sts rgblight_config+3,r16
 534:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1476               		.loc 1 534 9 is_stmt 1 view .LVU338
 534:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1477               		.loc 1 534 12 is_stmt 0 view .LVU339
 1478 0066 EE20      		tst r14
 1479 0068 01F0      		breq .L69
 535:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1480               		.loc 1 535 13 is_stmt 1 view .LVU340
 1481 006a 6091 0000 		lds r22,rgblight_config
 1482 006e 7091 0000 		lds r23,rgblight_config+1
 1483 0072 8091 0000 		lds r24,rgblight_config+2
 1484 0076 9091 0000 		lds r25,rgblight_config+3
 1485 007a 0E94 0000 		call eeconfig_update_rgblight
 1486               	.LVL82:
 536:quantum/rgblight.c ****         } else {
 1487               		.loc 1 536 124 view .LVU341
 538:quantum/rgblight.c ****         }
 1488               		.loc 1 538 126 view .LVU342
 1489               	.L69:
 1490               	/* epilogue start */
 541:quantum/rgblight.c **** 
 1491               		.loc 1 541 1 is_stmt 0 view .LVU343
 1492 007e 0F90      		pop __tmp_reg__
 1493 0080 0F90      		pop __tmp_reg__
 1494 0082 0F90      		pop __tmp_reg__
 1495 0084 DF91      		pop r29
 1496 0086 CF91      		pop r28
 1497 0088 1F91      		pop r17
 1498               	.LVL83:
 541:quantum/rgblight.c **** 
 1499               		.loc 1 541 1 view .LVU344
 1500 008a 0F91      		pop r16
 1501               	.LVL84:
 541:quantum/rgblight.c **** 
 1502               		.loc 1 541 1 view .LVU345
 1503 008c FF90      		pop r15
 1504               	.LVL85:
 541:quantum/rgblight.c **** 
 1505               		.loc 1 541 1 view .LVU346
 1506 008e EF90      		pop r14
 1507               	.LVL86:
 541:quantum/rgblight.c **** 
 1508               		.loc 1 541 1 view .LVU347
 1509 0090 DF90      		pop r13
 1510 0092 CF90      		pop r12
 1511 0094 BF90      		pop r11
 1512 0096 AF90      		pop r10
 1513 0098 0895      		ret
 1514               	.LVL87:
 1515               	.L72:
 481:quantum/rgblight.c ****             }
 1516               		.loc 1 481 13 is_stmt 1 view .LVU348
 484:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1517               		.loc 1 484 18 view .LVU349
 484:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1518               		.loc 1 484 21 is_stmt 0 view .LVU350
 1519 009a 8230      		cpi r24,lo8(2)
 1520 009c 01F4      		brne .L74
 486:quantum/rgblight.c ****             }
 1521               		.loc 1 486 17 is_stmt 1 view .LVU351
 486:quantum/rgblight.c ****             }
 1522               		.loc 1 486 21 is_stmt 0 view .LVU352
 1523 009e 0091 0000 		lds r16,rgblight_config+3
 1524               	.LVL88:
 486:quantum/rgblight.c ****             }
 1525               		.loc 1 486 21 view .LVU353
 1526 00a2 00C0      		rjmp .L73
 1527               	.L74:
 490:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1528               		.loc 1 490 18 is_stmt 1 view .LVU354
 490:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1529               		.loc 1 490 21 is_stmt 0 view .LVU355
 1530 00a4 8630      		cpi r24,lo8(6)
 1531 00a6 01F4      		brne .L75
 1532               	.L76:
 492:quantum/rgblight.c ****             }
 1533               		.loc 1 492 17 is_stmt 1 view .LVU356
 492:quantum/rgblight.c ****             }
 1534               		.loc 1 492 21 is_stmt 0 view .LVU357
 1535 00a8 1091 0000 		lds r17,rgblight_config+1
 1536               	.LVL89:
 492:quantum/rgblight.c ****             }
 1537               		.loc 1 492 21 view .LVU358
 1538 00ac 00C0      		rjmp .L73
 1539               	.L75:
 496:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1540               		.loc 1 496 18 is_stmt 1 view .LVU359
 496:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1541               		.loc 1 496 21 is_stmt 0 view .LVU360
 1542 00ae 8930      		cpi r24,lo8(9)
 1543 00b0 01F0      		breq .L76
 502:quantum/rgblight.c ****                 // static gradient
 1544               		.loc 1 502 18 is_stmt 1 view .LVU361
 502:quantum/rgblight.c ****                 // static gradient
 1545               		.loc 1 502 21 is_stmt 0 view .LVU362
 1546 00b2 8931      		cpi r24,lo8(25)
 1547 00b4 01F4      		brne .L73
 1548               	.LBB55:
 504:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1549               		.loc 1 504 17 is_stmt 1 view .LVU363
 504:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1550               		.loc 1 504 25 is_stmt 0 view .LVU364
 1551 00b6 E951      		subi r30,lo8(-(-25))
 1552               	.LVL90:
 505:quantum/rgblight.c **** #    ifdef __AVR__
 1553               		.loc 1 505 17 is_stmt 1 view .LVU365
 505:quantum/rgblight.c **** #    ifdef __AVR__
 1554               		.loc 1 505 49 is_stmt 0 view .LVU366
 1555 00b8 8E2F      		mov r24,r30
 1556 00ba 8170      		andi r24,lo8(1)
 1557 00bc D82E      		mov r13,r24
 1558               	.LVL91:
 508:quantum/rgblight.c **** #    else
 1559               		.loc 1 508 17 is_stmt 1 view .LVU367
 1560               	.LBB56:
 508:quantum/rgblight.c **** #    else
 1561               		.loc 1 508 33 view .LVU368
 1562 00be E695      		lsr r30
 1563               	.LVL92:
 508:quantum/rgblight.c **** #    else
 1564               		.loc 1 508 33 is_stmt 0 view .LVU369
 1565 00c0 F0E0      		ldi r31,0
 1566 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1567 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1568               	.LVL93:
 508:quantum/rgblight.c **** #    else
 1569               		.loc 1 508 33 is_stmt 1 view .LVU370
 508:quantum/rgblight.c **** #    else
 1570               		.loc 1 508 33 view .LVU371
 1571               	/* #APP */
 1572               	 ;  508 "quantum/rgblight.c" 1
 1573 00c6 A590      		lpm r10, Z+
 1574 00c8 B490      		lpm r11, Z
 1575               		
 1576               	 ;  0 "" 2
 1577               	.LVL94:
 508:quantum/rgblight.c **** #    else
 1578               		.loc 1 508 33 view .LVU372
 508:quantum/rgblight.c **** #    else
 1579               		.loc 1 508 33 is_stmt 0 view .LVU373
 1580               	/* #NOAPP */
 1581               	.LBE56:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1582               		.loc 1 512 17 is_stmt 1 view .LVU374
 1583               	.LBB57:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1584               		.loc 1 512 22 view .LVU375
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1585               		.loc 1 512 30 is_stmt 0 view .LVU376
 1586 00ca C12C      		mov r12,__zero_reg__
 1587               	.LBB58:
 513:quantum/rgblight.c ****                     if (direction) {
 1588               		.loc 1 513 49 view .LVU377
 1589 00cc BB24      		clr r11
 1590               	.LVL95:
 1591               	.L77:
 513:quantum/rgblight.c ****                     if (direction) {
 1592               		.loc 1 513 49 view .LVU378
 1593               	.LBE58:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1594               		.loc 1 512 37 is_stmt 1 discriminator 1 view .LVU379
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1595               		.loc 1 512 56 is_stmt 0 discriminator 1 view .LVU380
 1596 00ce 6091 0000 		lds r22,rgblight_ranges+4
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1597               		.loc 1 512 17 discriminator 1 view .LVU381
 1598 00d2 C616      		cp r12,r22
 1599 00d4 00F0      		brlo .L80
 1600               	.LBE57:
 522:quantum/rgblight.c ****             }
 1601               		.loc 1 522 17 is_stmt 1 view .LVU382
 1602 00d6 0E94 0000 		call rgblight_set
 1603               	.LVL96:
 1604 00da 00C0      		rjmp .L73
 1605               	.L80:
 1606               	.LBB65:
 1607               	.LBB63:
 513:quantum/rgblight.c ****                     if (direction) {
 1608               		.loc 1 513 21 view .LVU383
 513:quantum/rgblight.c ****                     if (direction) {
 1609               		.loc 1 513 37 is_stmt 0 view .LVU384
 1610 00dc 2C2D      		mov r18,r12
 1611 00de 30E0      		ldi r19,0
 513:quantum/rgblight.c ****                     if (direction) {
 1612               		.loc 1 513 49 view .LVU385
 1613 00e0 A29E      		mul r10,r18
 1614 00e2 C001      		movw r24,r0
 1615 00e4 A39E      		mul r10,r19
 1616 00e6 900D      		add r25,r0
 1617 00e8 B29E      		mul r11,r18
 1618 00ea 900D      		add r25,r0
 1619 00ec 1124      		clr r1
 513:quantum/rgblight.c ****                     if (direction) {
 1620               		.loc 1 513 85 view .LVU386
 1621 00ee 70E0      		ldi r23,0
 513:quantum/rgblight.c ****                     if (direction) {
 1622               		.loc 1 513 68 view .LVU387
 1623 00f0 0E94 0000 		call __udivmodhi4
 1624               	.LVL97:
 514:quantum/rgblight.c ****                         _hue = hue + _hue;
 1625               		.loc 1 514 21 is_stmt 1 view .LVU388
 515:quantum/rgblight.c ****                     } else {
 1626               		.loc 1 515 30 is_stmt 0 view .LVU389
 1627 00f4 812F      		mov r24,r17
 514:quantum/rgblight.c ****                         _hue = hue + _hue;
 1628               		.loc 1 514 24 view .LVU390
 1629 00f6 D110      		cpse r13,__zero_reg__
 1630 00f8 00C0      		rjmp .L78
 515:quantum/rgblight.c ****                     } else {
 1631               		.loc 1 515 25 is_stmt 1 view .LVU391
 515:quantum/rgblight.c ****                     } else {
 1632               		.loc 1 515 30 is_stmt 0 view .LVU392
 1633 00fa 860F      		add r24,r22
 1634               	.LVL98:
 1635               	.L79:
 519:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 1636               		.loc 1 519 98 is_stmt 1 discriminator 2 view .LVU393
 520:quantum/rgblight.c ****                 }
 1637               		.loc 1 520 21 discriminator 2 view .LVU394
 1638               	.LBB59:
 1639               	.LBI59:
 154:quantum/rgblight.c **** 
 1640               		.loc 1 154 6 discriminator 2 view .LVU395
 1641               	.LBB60:
 154:quantum/rgblight.c **** 
 1642               		.loc 1 154 70 discriminator 2 view .LVU396
 1643               	.LBE60:
 1644               	.LBE59:
 520:quantum/rgblight.c ****                 }
 1645               		.loc 1 520 80 is_stmt 0 discriminator 2 view .LVU397
 1646 00fc 4091 0000 		lds r20,rgblight_ranges+2
 520:quantum/rgblight.c ****                 }
 1647               		.loc 1 520 63 discriminator 2 view .LVU398
 1648 0100 420F      		add r20,r18
 1649 0102 532F      		mov r21,r19
 1650 0104 511D      		adc r21,__zero_reg__
 520:quantum/rgblight.c ****                 }
 1651               		.loc 1 520 21 discriminator 2 view .LVU399
 1652 0106 9A01      		movw r18,r20
 1653 0108 220F      		lsl r18
 1654 010a 331F      		rol r19
 1655 010c 240F      		add r18,r20
 1656 010e 351F      		adc r19,r21
 1657 0110 2050      		subi r18,lo8(-(led))
 1658 0112 3040      		sbci r19,hi8(-(led))
 1659               	.LBB62:
 1660               	.LBB61:
 154:quantum/rgblight.c **** 
 1661               		.loc 1 154 70 discriminator 2 view .LVU400
 1662 0114 402F      		mov r20,r16
 1663 0116 6F2D      		mov r22,r15
 1664 0118 0E94 0000 		call sethsv_raw
 1665               	.LVL99:
 154:quantum/rgblight.c **** 
 1666               		.loc 1 154 70 discriminator 2 view .LVU401
 1667               	.LBE61:
 1668               	.LBE62:
 1669               	.LBE63:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1670               		.loc 1 512 74 is_stmt 1 discriminator 2 view .LVU402
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1671               		.loc 1 512 75 is_stmt 0 discriminator 2 view .LVU403
 1672 011c C394      		inc r12
 1673               	.LVL100:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1674               		.loc 1 512 75 discriminator 2 view .LVU404
 1675 011e 00C0      		rjmp .L77
 1676               	.LVL101:
 1677               	.L78:
 1678               	.LBB64:
 517:quantum/rgblight.c ****                     }
 1679               		.loc 1 517 25 is_stmt 1 view .LVU405
 517:quantum/rgblight.c ****                     }
 1680               		.loc 1 517 30 is_stmt 0 view .LVU406
 1681 0120 861B      		sub r24,r22
 1682               	.LVL102:
 517:quantum/rgblight.c ****                     }
 1683               		.loc 1 517 30 view .LVU407
 1684 0122 00C0      		rjmp .L79
 1685               	.LBE64:
 1686               	.LBE65:
 1687               	.LBE55:
 1688               		.cfi_endproc
 1689               	.LFE144:
 1691               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1692               	.global	rgblight_increase_hue_helper
 1694               	rgblight_increase_hue_helper:
 1695               	.LVL103:
 1696               	.LFB119:
 406:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1697               		.loc 1 406 57 is_stmt 1 view -0
 1698               		.cfi_startproc
 1699               	/* prologue: function */
 1700               	/* frame size = 0 */
 1701               	/* stack size = 0 */
 1702               	.L__stack_usage = 0
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1703               		.loc 1 407 5 view .LVU409
 408:quantum/rgblight.c **** }
 1704               		.loc 1 408 5 view .LVU410
 1705 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1706 0002 F0E0      		ldi r31,hi8(rgblight_config)
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1707               		.loc 1 407 13 is_stmt 0 view .LVU411
 1708 0004 9181      		ldd r25,Z+1
 408:quantum/rgblight.c **** }
 1709               		.loc 1 408 5 view .LVU412
 1710 0006 282F      		mov r18,r24
 1711 0008 4381      		ldd r20,Z+3
 1712 000a 6281      		ldd r22,Z+2
 1713 000c 88E0      		ldi r24,lo8(8)
 1714               	.LVL104:
 408:quantum/rgblight.c **** }
 1715               		.loc 1 408 5 view .LVU413
 1716 000e 890F      		add r24,r25
 1717               	.LVL105:
 408:quantum/rgblight.c **** }
 1718               		.loc 1 408 5 view .LVU414
 1719 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1720               	.LVL106:
 408:quantum/rgblight.c **** }
 1721               		.loc 1 408 5 view .LVU415
 1722               		.cfi_endproc
 1723               	.LFE119:
 1725               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1726               	.global	rgblight_increase_hue_noeeprom
 1728               	rgblight_increase_hue_noeeprom:
 1729               	.LFB120:
 410:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1730               		.loc 1 410 43 is_stmt 1 view -0
 1731               		.cfi_startproc
 1732               	/* prologue: function */
 1733               	/* frame size = 0 */
 1734               	/* stack size = 0 */
 1735               	.L__stack_usage = 0
 410:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1736               		.loc 1 410 45 view .LVU417
 1737 0000 80E0      		ldi r24,0
 1738 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1739               	.LVL107:
 1740               		.cfi_endproc
 1741               	.LFE120:
 1743               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1744               	.global	rgblight_increase_hue
 1746               	rgblight_increase_hue:
 1747               	.LFB121:
 411:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1748               		.loc 1 411 34 view -0
 1749               		.cfi_startproc
 1750               	/* prologue: function */
 1751               	/* frame size = 0 */
 1752               	/* stack size = 0 */
 1753               	.L__stack_usage = 0
 411:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1754               		.loc 1 411 36 view .LVU419
 1755 0000 81E0      		ldi r24,lo8(1)
 1756 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1757               	.LVL108:
 1758               		.cfi_endproc
 1759               	.LFE121:
 1761               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1762               	.global	rgblight_decrease_hue_helper
 1764               	rgblight_decrease_hue_helper:
 1765               	.LVL109:
 1766               	.LFB122:
 412:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1767               		.loc 1 412 57 view -0
 1768               		.cfi_startproc
 1769               	/* prologue: function */
 1770               	/* frame size = 0 */
 1771               	/* stack size = 0 */
 1772               	.L__stack_usage = 0
 413:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1773               		.loc 1 413 5 view .LVU421
 414:quantum/rgblight.c **** }
 1774               		.loc 1 414 5 view .LVU422
 1775 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1776 0002 F0E0      		ldi r31,hi8(rgblight_config)
 413:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1777               		.loc 1 413 13 is_stmt 0 view .LVU423
 1778 0004 9181      		ldd r25,Z+1
 414:quantum/rgblight.c **** }
 1779               		.loc 1 414 5 view .LVU424
 1780 0006 282F      		mov r18,r24
 1781 0008 4381      		ldd r20,Z+3
 1782 000a 6281      		ldd r22,Z+2
 1783 000c 88EF      		ldi r24,lo8(-8)
 1784               	.LVL110:
 414:quantum/rgblight.c **** }
 1785               		.loc 1 414 5 view .LVU425
 1786 000e 890F      		add r24,r25
 1787               	.LVL111:
 414:quantum/rgblight.c **** }
 1788               		.loc 1 414 5 view .LVU426
 1789 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1790               	.LVL112:
 414:quantum/rgblight.c **** }
 1791               		.loc 1 414 5 view .LVU427
 1792               		.cfi_endproc
 1793               	.LFE122:
 1795               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1796               	.global	rgblight_decrease_hue_noeeprom
 1798               	rgblight_decrease_hue_noeeprom:
 1799               	.LFB123:
 416:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1800               		.loc 1 416 43 is_stmt 1 view -0
 1801               		.cfi_startproc
 1802               	/* prologue: function */
 1803               	/* frame size = 0 */
 1804               	/* stack size = 0 */
 1805               	.L__stack_usage = 0
 416:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1806               		.loc 1 416 45 view .LVU429
 1807 0000 80E0      		ldi r24,0
 1808 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1809               	.LVL113:
 1810               		.cfi_endproc
 1811               	.LFE123:
 1813               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1814               	.global	rgblight_decrease_hue
 1816               	rgblight_decrease_hue:
 1817               	.LFB124:
 417:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1818               		.loc 1 417 34 view -0
 1819               		.cfi_startproc
 1820               	/* prologue: function */
 1821               	/* frame size = 0 */
 1822               	/* stack size = 0 */
 1823               	.L__stack_usage = 0
 417:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1824               		.loc 1 417 36 view .LVU431
 1825 0000 81E0      		ldi r24,lo8(1)
 1826 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1827               	.LVL114:
 1828               		.cfi_endproc
 1829               	.LFE124:
 1831               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1832               	.global	rgblight_increase_sat_helper
 1834               	rgblight_increase_sat_helper:
 1835               	.LVL115:
 1836               	.LFB125:
 418:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1837               		.loc 1 418 57 view -0
 1838               		.cfi_startproc
 1839               	/* prologue: function */
 1840               	/* frame size = 0 */
 1841               	/* stack size = 0 */
 1842               	.L__stack_usage = 0
 419:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1843               		.loc 1 419 5 view .LVU433
 1844               	.LBB66:
 1845               	.LBI66:
 1846               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1847               		.loc 2 23 34 view .LVU434
 1848               	.LBB67:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1849               		.loc 2 30 5 view .LVU435
 1850               	.LBE67:
 1851               	.LBE66:
 419:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1852               		.loc 1 419 19 is_stmt 0 view .LVU436
 1853 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1854 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1855               	.LBB69:
 1856               	.LBB68:
 1857               		.loc 2 30 5 view .LVU437
 1858 0004 6281      		ldd r22,Z+2
 1859 0006 28E0      		ldi r18,lo8(8)
 1860               	/* #APP */
 1861               	 ;  30 "./lib/lib8tion/math8.h" 1
 1862 0008 620F      		add r22, r18    
 1863 000a 00F4      		brcc L_1447     
 1864 000c 6FEF      		ldi r22, 0xFF  
 1865               		L_1447: 
 1866               	 ;  0 "" 2
 1867               	.LVL116:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1868               		.loc 2 43 5 is_stmt 1 view .LVU438
 1869               		.loc 2 43 5 is_stmt 0 view .LVU439
 1870               	/* #NOAPP */
 1871               	.LBE68:
 1872               	.LBE69:
 420:quantum/rgblight.c **** }
 1873               		.loc 1 420 5 is_stmt 1 view .LVU440
 1874 000e 282F      		mov r18,r24
 1875 0010 4381      		ldd r20,Z+3
 1876 0012 8181      		ldd r24,Z+1
 1877               	.LVL117:
 420:quantum/rgblight.c **** }
 1878               		.loc 1 420 5 is_stmt 0 view .LVU441
 1879 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1880               	.LVL118:
 420:quantum/rgblight.c **** }
 1881               		.loc 1 420 5 view .LVU442
 1882               		.cfi_endproc
 1883               	.LFE125:
 1885               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1886               	.global	rgblight_increase_sat_noeeprom
 1888               	rgblight_increase_sat_noeeprom:
 1889               	.LFB126:
 422:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1890               		.loc 1 422 43 is_stmt 1 view -0
 1891               		.cfi_startproc
 1892               	/* prologue: function */
 1893               	/* frame size = 0 */
 1894               	/* stack size = 0 */
 1895               	.L__stack_usage = 0
 422:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1896               		.loc 1 422 45 view .LVU444
 1897 0000 80E0      		ldi r24,0
 1898 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1899               	.LVL119:
 1900               		.cfi_endproc
 1901               	.LFE126:
 1903               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1904               	.global	rgblight_increase_sat
 1906               	rgblight_increase_sat:
 1907               	.LFB127:
 423:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1908               		.loc 1 423 34 view -0
 1909               		.cfi_startproc
 1910               	/* prologue: function */
 1911               	/* frame size = 0 */
 1912               	/* stack size = 0 */
 1913               	.L__stack_usage = 0
 423:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1914               		.loc 1 423 36 view .LVU446
 1915 0000 81E0      		ldi r24,lo8(1)
 1916 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1917               	.LVL120:
 1918               		.cfi_endproc
 1919               	.LFE127:
 1921               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1922               	.global	rgblight_decrease_sat_helper
 1924               	rgblight_decrease_sat_helper:
 1925               	.LVL121:
 1926               	.LFB128:
 424:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1927               		.loc 1 424 57 view -0
 1928               		.cfi_startproc
 1929               	/* prologue: function */
 1930               	/* frame size = 0 */
 1931               	/* stack size = 0 */
 1932               	.L__stack_usage = 0
 425:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1933               		.loc 1 425 5 view .LVU448
 1934               	.LBB70:
 1935               	.LBI70:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1936               		.loc 2 88 34 view .LVU449
 1937               	.LBB71:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1938               		.loc 2 96 5 view .LVU450
 1939               	.LBE71:
 1940               	.LBE70:
 425:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1941               		.loc 1 425 19 is_stmt 0 view .LVU451
 1942 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1943 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1944               	.LBB73:
 1945               	.LBB72:
 1946               		.loc 2 96 5 view .LVU452
 1947 0004 6281      		ldd r22,Z+2
 1948 0006 28E0      		ldi r18,lo8(8)
 1949               	/* #APP */
 1950               	 ;  96 "./lib/lib8tion/math8.h" 1
 1951 0008 621B      		sub r22, r18    
 1952 000a 00F4      		brcc L_1503     
 1953 000c 60E0      		ldi r22, 0x00  
 1954               		L_1503: 
 1955               	 ;  0 "" 2
 1956               	.LVL122:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1957               		.loc 2 110 5 is_stmt 1 view .LVU453
 1958               		.loc 2 110 5 is_stmt 0 view .LVU454
 1959               	/* #NOAPP */
 1960               	.LBE72:
 1961               	.LBE73:
 426:quantum/rgblight.c **** }
 1962               		.loc 1 426 5 is_stmt 1 view .LVU455
 1963 000e 282F      		mov r18,r24
 1964 0010 4381      		ldd r20,Z+3
 1965 0012 8181      		ldd r24,Z+1
 1966               	.LVL123:
 426:quantum/rgblight.c **** }
 1967               		.loc 1 426 5 is_stmt 0 view .LVU456
 1968 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1969               	.LVL124:
 426:quantum/rgblight.c **** }
 1970               		.loc 1 426 5 view .LVU457
 1971               		.cfi_endproc
 1972               	.LFE128:
 1974               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1975               	.global	rgblight_decrease_sat_noeeprom
 1977               	rgblight_decrease_sat_noeeprom:
 1978               	.LFB129:
 428:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1979               		.loc 1 428 43 is_stmt 1 view -0
 1980               		.cfi_startproc
 1981               	/* prologue: function */
 1982               	/* frame size = 0 */
 1983               	/* stack size = 0 */
 1984               	.L__stack_usage = 0
 428:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1985               		.loc 1 428 45 view .LVU459
 1986 0000 80E0      		ldi r24,0
 1987 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1988               	.LVL125:
 1989               		.cfi_endproc
 1990               	.LFE129:
 1992               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1993               	.global	rgblight_decrease_sat
 1995               	rgblight_decrease_sat:
 1996               	.LFB130:
 429:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1997               		.loc 1 429 34 view -0
 1998               		.cfi_startproc
 1999               	/* prologue: function */
 2000               	/* frame size = 0 */
 2001               	/* stack size = 0 */
 2002               	.L__stack_usage = 0
 429:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 2003               		.loc 1 429 36 view .LVU461
 2004 0000 81E0      		ldi r24,lo8(1)
 2005 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 2006               	.LVL126:
 2007               		.cfi_endproc
 2008               	.LFE130:
 2010               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 2011               	.global	rgblight_increase_val_helper
 2013               	rgblight_increase_val_helper:
 2014               	.LVL127:
 2015               	.LFB131:
 430:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2016               		.loc 1 430 57 view -0
 2017               		.cfi_startproc
 2018               	/* prologue: function */
 2019               	/* frame size = 0 */
 2020               	/* stack size = 0 */
 2021               	.L__stack_usage = 0
 431:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2022               		.loc 1 431 5 view .LVU463
 2023               	.LBB74:
 2024               	.LBI74:
  23:./lib/lib8tion/math8.h **** {
 2025               		.loc 2 23 34 view .LVU464
 2026               	.LBB75:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2027               		.loc 2 30 5 view .LVU465
 2028               	.LBE75:
 2029               	.LBE74:
 431:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2030               		.loc 1 431 19 is_stmt 0 view .LVU466
 2031 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2032 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2033               	.LBB77:
 2034               	.LBB76:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2035               		.loc 2 30 5 view .LVU467
 2036 0004 4381      		ldd r20,Z+3
 2037 0006 28E0      		ldi r18,lo8(8)
 2038               	/* #APP */
 2039               	 ;  30 "./lib/lib8tion/math8.h" 1
 2040 0008 420F      		add r20, r18    
 2041 000a 00F4      		brcc L_1559     
 2042 000c 4FEF      		ldi r20, 0xFF  
 2043               		L_1559: 
 2044               	 ;  0 "" 2
 2045               	.LVL128:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2046               		.loc 2 43 5 is_stmt 1 view .LVU468
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2047               		.loc 2 43 5 is_stmt 0 view .LVU469
 2048               	/* #NOAPP */
 2049               	.LBE76:
 2050               	.LBE77:
 432:quantum/rgblight.c **** }
 2051               		.loc 1 432 5 is_stmt 1 view .LVU470
 2052 000e 282F      		mov r18,r24
 2053 0010 6281      		ldd r22,Z+2
 2054 0012 8181      		ldd r24,Z+1
 2055               	.LVL129:
 432:quantum/rgblight.c **** }
 2056               		.loc 1 432 5 is_stmt 0 view .LVU471
 2057 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2058               	.LVL130:
 432:quantum/rgblight.c **** }
 2059               		.loc 1 432 5 view .LVU472
 2060               		.cfi_endproc
 2061               	.LFE131:
 2063               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 2064               	.global	rgblight_increase_val_noeeprom
 2066               	rgblight_increase_val_noeeprom:
 2067               	.LFB132:
 434:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2068               		.loc 1 434 43 is_stmt 1 view -0
 2069               		.cfi_startproc
 2070               	/* prologue: function */
 2071               	/* frame size = 0 */
 2072               	/* stack size = 0 */
 2073               	.L__stack_usage = 0
 434:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2074               		.loc 1 434 45 view .LVU474
 2075 0000 80E0      		ldi r24,0
 2076 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2077               	.LVL131:
 2078               		.cfi_endproc
 2079               	.LFE132:
 2081               		.section	.text.rgblight_increase_val,"ax",@progbits
 2082               	.global	rgblight_increase_val
 2084               	rgblight_increase_val:
 2085               	.LFB133:
 435:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2086               		.loc 1 435 34 view -0
 2087               		.cfi_startproc
 2088               	/* prologue: function */
 2089               	/* frame size = 0 */
 2090               	/* stack size = 0 */
 2091               	.L__stack_usage = 0
 435:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2092               		.loc 1 435 36 view .LVU476
 2093 0000 81E0      		ldi r24,lo8(1)
 2094 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2095               	.LVL132:
 2096               		.cfi_endproc
 2097               	.LFE133:
 2099               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 2100               	.global	rgblight_decrease_val_helper
 2102               	rgblight_decrease_val_helper:
 2103               	.LVL133:
 2104               	.LFB134:
 436:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2105               		.loc 1 436 57 view -0
 2106               		.cfi_startproc
 2107               	/* prologue: function */
 2108               	/* frame size = 0 */
 2109               	/* stack size = 0 */
 2110               	.L__stack_usage = 0
 437:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2111               		.loc 1 437 5 view .LVU478
 2112               	.LBB78:
 2113               	.LBI78:
  88:./lib/lib8tion/math8.h **** {
 2114               		.loc 2 88 34 view .LVU479
 2115               	.LBB79:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2116               		.loc 2 96 5 view .LVU480
 2117               	.LBE79:
 2118               	.LBE78:
 437:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2119               		.loc 1 437 19 is_stmt 0 view .LVU481
 2120 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2121 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2122               	.LBB81:
 2123               	.LBB80:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2124               		.loc 2 96 5 view .LVU482
 2125 0004 4381      		ldd r20,Z+3
 2126 0006 28E0      		ldi r18,lo8(8)
 2127               	/* #APP */
 2128               	 ;  96 "./lib/lib8tion/math8.h" 1
 2129 0008 421B      		sub r20, r18    
 2130 000a 00F4      		brcc L_1615     
 2131 000c 40E0      		ldi r20, 0x00  
 2132               		L_1615: 
 2133               	 ;  0 "" 2
 2134               	.LVL134:
 2135               		.loc 2 110 5 is_stmt 1 view .LVU483
 2136               		.loc 2 110 5 is_stmt 0 view .LVU484
 2137               	/* #NOAPP */
 2138               	.LBE80:
 2139               	.LBE81:
 438:quantum/rgblight.c **** }
 2140               		.loc 1 438 5 is_stmt 1 view .LVU485
 2141 000e 282F      		mov r18,r24
 2142 0010 6281      		ldd r22,Z+2
 2143 0012 8181      		ldd r24,Z+1
 2144               	.LVL135:
 438:quantum/rgblight.c **** }
 2145               		.loc 1 438 5 is_stmt 0 view .LVU486
 2146 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2147               	.LVL136:
 438:quantum/rgblight.c **** }
 2148               		.loc 1 438 5 view .LVU487
 2149               		.cfi_endproc
 2150               	.LFE134:
 2152               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 2153               	.global	rgblight_decrease_val_noeeprom
 2155               	rgblight_decrease_val_noeeprom:
 2156               	.LFB135:
 440:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2157               		.loc 1 440 43 is_stmt 1 view -0
 2158               		.cfi_startproc
 2159               	/* prologue: function */
 2160               	/* frame size = 0 */
 2161               	/* stack size = 0 */
 2162               	.L__stack_usage = 0
 440:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2163               		.loc 1 440 45 view .LVU489
 2164 0000 80E0      		ldi r24,0
 2165 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2166               	.LVL137:
 2167               		.cfi_endproc
 2168               	.LFE135:
 2170               		.section	.text.rgblight_decrease_val,"ax",@progbits
 2171               	.global	rgblight_decrease_val
 2173               	rgblight_decrease_val:
 2174               	.LFB136:
 441:quantum/rgblight.c **** 
 2175               		.loc 1 441 34 view -0
 2176               		.cfi_startproc
 2177               	/* prologue: function */
 2178               	/* frame size = 0 */
 2179               	/* stack size = 0 */
 2180               	.L__stack_usage = 0
 441:quantum/rgblight.c **** 
 2181               		.loc 1 441 36 view .LVU491
 2182 0000 81E0      		ldi r24,lo8(1)
 2183 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2184               	.LVL138:
 2185               		.cfi_endproc
 2186               	.LFE136:
 2188               		.section	.text.rgblight_sethsv,"ax",@progbits
 2189               	.global	rgblight_sethsv
 2191               	rgblight_sethsv:
 2192               	.LVL139:
 2193               	.LFB145:
 543:quantum/rgblight.c **** 
 2194               		.loc 1 543 61 view -0
 2195               		.cfi_startproc
 2196               	/* prologue: function */
 2197               	/* frame size = 0 */
 2198               	/* stack size = 0 */
 2199               	.L__stack_usage = 0
 543:quantum/rgblight.c **** 
 2200               		.loc 1 543 63 view .LVU493
 2201 0000 21E0      		ldi r18,lo8(1)
 2202 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2203               	.LVL140:
 543:quantum/rgblight.c **** 
 2204               		.loc 1 543 63 is_stmt 0 view .LVU494
 2205               		.cfi_endproc
 2206               	.LFE145:
 2208               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2209               	.global	rgblight_sethsv_noeeprom
 2211               	rgblight_sethsv_noeeprom:
 2212               	.LVL141:
 2213               	.LFB146:
 545:quantum/rgblight.c **** 
 2214               		.loc 1 545 70 is_stmt 1 view -0
 2215               		.cfi_startproc
 2216               	/* prologue: function */
 2217               	/* frame size = 0 */
 2218               	/* stack size = 0 */
 2219               	.L__stack_usage = 0
 545:quantum/rgblight.c **** 
 2220               		.loc 1 545 72 view .LVU496
 2221 0000 20E0      		ldi r18,0
 2222 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2223               	.LVL142:
 545:quantum/rgblight.c **** 
 2224               		.loc 1 545 72 is_stmt 0 view .LVU497
 2225               		.cfi_endproc
 2226               	.LFE146:
 2228               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2229               	.global	rgblight_setrgb_at
 2231               	rgblight_setrgb_at:
 2232               	.LVL143:
 2233               	.LFB156:
 587:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2234               		.loc 1 587 73 is_stmt 1 view -0
 2235               		.cfi_startproc
 2236               	/* prologue: function */
 2237               	/* frame size = 0 */
 2238               	/* stack size = 0 */
 2239               	.L__stack_usage = 0
 588:quantum/rgblight.c ****         return;
 2240               		.loc 1 588 5 view .LVU499
 588:quantum/rgblight.c ****         return;
 2241               		.loc 1 588 25 is_stmt 0 view .LVU500
 2242 0000 9091 0000 		lds r25,rgblight_config
 588:quantum/rgblight.c ****         return;
 2243               		.loc 1 588 8 view .LVU501
 2244 0004 90FF      		sbrs r25,0
 2245 0006 00C0      		rjmp .L108
 588:quantum/rgblight.c ****         return;
 2246               		.loc 1 588 33 discriminator 1 view .LVU502
 2247 0008 2830      		cpi r18,lo8(8)
 2248 000a 00F4      		brsh .L108
 592:quantum/rgblight.c ****     led[index].g = g;
 2249               		.loc 1 592 5 is_stmt 1 view .LVU503
 592:quantum/rgblight.c ****     led[index].g = g;
 2250               		.loc 1 592 15 is_stmt 0 view .LVU504
 2251 000c 30E0      		ldi r19,0
 592:quantum/rgblight.c ****     led[index].g = g;
 2252               		.loc 1 592 18 view .LVU505
 2253 000e F901      		movw r30,r18
 2254 0010 EE0F      		lsl r30
 2255 0012 FF1F      		rol r31
 2256 0014 E20F      		add r30,r18
 2257 0016 F31F      		adc r31,r19
 2258 0018 E050      		subi r30,lo8(-(led))
 2259 001a F040      		sbci r31,hi8(-(led))
 2260 001c 8183      		std Z+1,r24
 593:quantum/rgblight.c ****     led[index].b = b;
 2261               		.loc 1 593 5 is_stmt 1 view .LVU506
 593:quantum/rgblight.c ****     led[index].b = b;
 2262               		.loc 1 593 18 is_stmt 0 view .LVU507
 2263 001e 6083      		st Z,r22
 594:quantum/rgblight.c **** #ifdef RGBW
 2264               		.loc 1 594 5 is_stmt 1 view .LVU508
 594:quantum/rgblight.c **** #ifdef RGBW
 2265               		.loc 1 594 18 is_stmt 0 view .LVU509
 2266 0020 4283      		std Z+2,r20
 598:quantum/rgblight.c **** }
 2267               		.loc 1 598 5 is_stmt 1 view .LVU510
 2268 0022 0C94 0000 		jmp rgblight_set
 2269               	.LVL144:
 2270               	.L108:
 2271               	/* epilogue start */
 599:quantum/rgblight.c **** 
 2272               		.loc 1 599 1 is_stmt 0 view .LVU511
 2273 0026 0895      		ret
 2274               		.cfi_endproc
 2275               	.LFE156:
 2277               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2278               	.global	rgblight_sethsv_at
 2280               	rgblight_sethsv_at:
 2281               	.LVL145:
 2282               	.LFB157:
 601:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2283               		.loc 1 601 79 is_stmt 1 view -0
 2284               		.cfi_startproc
 601:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2285               		.loc 1 601 79 is_stmt 0 view .LVU513
 2286 0000 1F93      		push r17
 2287               	.LCFI32:
 2288               		.cfi_def_cfa_offset 3
 2289               		.cfi_offset 17, -2
 2290 0002 CF93      		push r28
 2291               	.LCFI33:
 2292               		.cfi_def_cfa_offset 4
 2293               		.cfi_offset 28, -3
 2294 0004 DF93      		push r29
 2295               	.LCFI34:
 2296               		.cfi_def_cfa_offset 5
 2297               		.cfi_offset 29, -4
 2298 0006 00D0      		rcall .
 2299 0008 0F92      		push __tmp_reg__
 2300               	.LCFI35:
 2301               		.cfi_def_cfa_offset 8
 2302 000a CDB7      		in r28,__SP_L__
 2303 000c DEB7      		in r29,__SP_H__
 2304               	.LCFI36:
 2305               		.cfi_def_cfa_register 28
 2306               	/* prologue: function */
 2307               	/* frame size = 3 */
 2308               	/* stack size = 6 */
 2309               	.L__stack_usage = 6
 2310 000e 122F      		mov r17,r18
 602:quantum/rgblight.c ****         return;
 2311               		.loc 1 602 5 is_stmt 1 view .LVU514
 602:quantum/rgblight.c ****         return;
 2312               		.loc 1 602 25 is_stmt 0 view .LVU515
 2313 0010 9091 0000 		lds r25,rgblight_config
 602:quantum/rgblight.c ****         return;
 2314               		.loc 1 602 8 view .LVU516
 2315 0014 90FF      		sbrs r25,0
 2316 0016 00C0      		rjmp .L113
 606:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2317               		.loc 1 606 5 is_stmt 1 view .LVU517
 607:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2318               		.loc 1 607 5 view .LVU518
 2319               	.LVL146:
 2320               	.LBB84:
 2321               	.LBI84:
 154:quantum/rgblight.c **** 
 2322               		.loc 1 154 6 view .LVU519
 2323               	.LBB85:
 154:quantum/rgblight.c **** 
 2324               		.loc 1 154 70 view .LVU520
 2325 0018 9E01      		movw r18,r28
 2326               	.LVL147:
 154:quantum/rgblight.c **** 
 2327               		.loc 1 154 70 is_stmt 0 view .LVU521
 2328 001a 2F5F      		subi r18,-1
 2329 001c 3F4F      		sbci r19,-1
 2330 001e 0E94 0000 		call sethsv_raw
 2331               	.LVL148:
 154:quantum/rgblight.c **** 
 2332               		.loc 1 154 70 view .LVU522
 2333               	.LBE85:
 2334               	.LBE84:
 608:quantum/rgblight.c **** }
 2335               		.loc 1 608 5 is_stmt 1 view .LVU523
 2336 0022 212F      		mov r18,r17
 2337 0024 4B81      		ldd r20,Y+3
 2338 0026 6981      		ldd r22,Y+1
 2339 0028 8A81      		ldd r24,Y+2
 2340 002a 0E94 0000 		call rgblight_setrgb_at
 2341               	.LVL149:
 2342               	.L113:
 2343               	/* epilogue start */
 609:quantum/rgblight.c **** 
 2344               		.loc 1 609 1 is_stmt 0 view .LVU524
 2345 002e 0F90      		pop __tmp_reg__
 2346 0030 0F90      		pop __tmp_reg__
 2347 0032 0F90      		pop __tmp_reg__
 2348 0034 DF91      		pop r29
 2349 0036 CF91      		pop r28
 2350 0038 1F91      		pop r17
 2351               	.LVL150:
 609:quantum/rgblight.c **** 
 2352               		.loc 1 609 1 view .LVU525
 2353 003a 0895      		ret
 2354               		.cfi_endproc
 2355               	.LFE157:
 2357               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2358               	.global	rgblight_setrgb_range
 2360               	rgblight_setrgb_range:
 2361               	.LVL151:
 2362               	.LFB159:
 623:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2363               		.loc 1 623 89 is_stmt 1 view -0
 2364               		.cfi_startproc
 623:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2365               		.loc 1 623 89 is_stmt 0 view .LVU527
 2366 0000 0F93      		push r16
 2367               	.LCFI37:
 2368               		.cfi_def_cfa_offset 3
 2369               		.cfi_offset 16, -2
 2370               	/* prologue: function */
 2371               	/* frame size = 0 */
 2372               	/* stack size = 1 */
 2373               	.L__stack_usage = 1
 624:quantum/rgblight.c ****         return;
 2374               		.loc 1 624 5 is_stmt 1 view .LVU528
 624:quantum/rgblight.c ****         return;
 2375               		.loc 1 624 25 is_stmt 0 view .LVU529
 2376 0002 9091 0000 		lds r25,rgblight_config
 624:quantum/rgblight.c ****         return;
 2377               		.loc 1 624 8 view .LVU530
 2378 0006 90FF      		sbrs r25,0
 2379 0008 00C0      		rjmp .L116
 624:quantum/rgblight.c ****         return;
 2380               		.loc 1 624 46 discriminator 1 view .LVU531
 2381 000a 2017      		cp r18,r16
 2382 000c 00F4      		brsh .L116
 624:quantum/rgblight.c ****         return;
 2383               		.loc 1 624 62 discriminator 2 view .LVU532
 2384 000e 0930      		cpi r16,lo8(9)
 2385 0010 00F4      		brsh .L116
 2386 0012 93E0      		ldi r25,lo8(3)
 2387 0014 299F      		mul r18,r25
 2388 0016 F001      		movw r30,r0
 2389 0018 1124      		clr __zero_reg__
 2390 001a E050      		subi r30,lo8(-(led))
 2391 001c F040      		sbci r31,hi8(-(led))
 2392               	.LVL152:
 2393               	.L118:
 2394               	.LBB86:
 629:quantum/rgblight.c ****         led[i].g = g;
 2395               		.loc 1 629 9 is_stmt 1 discriminator 3 view .LVU533
 629:quantum/rgblight.c ****         led[i].g = g;
 2396               		.loc 1 629 18 is_stmt 0 discriminator 3 view .LVU534
 2397 001e 8183      		std Z+1,r24
 630:quantum/rgblight.c ****         led[i].b = b;
 2398               		.loc 1 630 9 is_stmt 1 discriminator 3 view .LVU535
 630:quantum/rgblight.c ****         led[i].b = b;
 2399               		.loc 1 630 18 is_stmt 0 discriminator 3 view .LVU536
 2400 0020 6083      		st Z,r22
 631:quantum/rgblight.c **** #ifdef RGBW
 2401               		.loc 1 631 9 is_stmt 1 discriminator 3 view .LVU537
 631:quantum/rgblight.c **** #ifdef RGBW
 2402               		.loc 1 631 18 is_stmt 0 discriminator 3 view .LVU538
 2403 0022 4283      		std Z+2,r20
 628:quantum/rgblight.c ****         led[i].r = r;
 2404               		.loc 1 628 38 is_stmt 1 discriminator 3 view .LVU539
 628:quantum/rgblight.c ****         led[i].r = r;
 2405               		.loc 1 628 39 is_stmt 0 discriminator 3 view .LVU540
 2406 0024 2F5F      		subi r18,lo8(-(1))
 2407               	.LVL153:
 628:quantum/rgblight.c ****         led[i].r = r;
 2408               		.loc 1 628 29 is_stmt 1 discriminator 3 view .LVU541
 2409 0026 3396      		adiw r30,3
 628:quantum/rgblight.c ****         led[i].r = r;
 2410               		.loc 1 628 5 is_stmt 0 discriminator 3 view .LVU542
 2411 0028 0213      		cpse r16,r18
 2412 002a 00C0      		rjmp .L118
 628:quantum/rgblight.c ****         led[i].r = r;
 2413               		.loc 1 628 5 discriminator 3 view .LVU543
 2414               	.LBE86:
 636:quantum/rgblight.c ****     wait_ms(1);
 2415               		.loc 1 636 5 is_stmt 1 view .LVU544
 2416 002c 0E94 0000 		call rgblight_set
 2417               	.LVL154:
 637:quantum/rgblight.c **** }
 2418               		.loc 1 637 5 view .LVU545
 2419               	.LBB87:
 2420               	.LBI87:
 2421               		.file 3 "e:\\game\\msys2\\mingw64\\avr\\include\\util\\delay.h"
   1:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:e:\game\msys2\mingw64\avr\include\util\delay.h ****    All rights reserved.
   5:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
   6:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:e:\game\msys2\mingw64\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
   9:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:e:\game\msys2\mingw64\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  12:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:e:\game\msys2\mingw64\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:e:\game\msys2\mingw64\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:e:\game\msys2\mingw64\avr\include\util\delay.h ****      distribution.
  16:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  17:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:e:\game\msys2\mingw64\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:e:\game\msys2\mingw64\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  21:e:\game\msys2\mingw64\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:e:\game\msys2\mingw64\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:e:\game\msys2\mingw64\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:e:\game\msys2\mingw64\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:e:\game\msys2\mingw64\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:e:\game\msys2\mingw64\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:e:\game\msys2\mingw64\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:e:\game\msys2\mingw64\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:e:\game\msys2\mingw64\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:e:\game\msys2\mingw64\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:e:\game\msys2\mingw64\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  33:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  35:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:e:\game\msys2\mingw64\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  38:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:e:\game\msys2\mingw64\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  endif
  42:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  44:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <inttypes.h>
  45:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <math.h>
  47:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  48:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \file */
  49:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \code
  51:e:\game\msys2\mingw64\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:e:\game\msys2\mingw64\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:e:\game\msys2\mingw64\avr\include\util\delay.h ****     #include <util/delay.h>
  54:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \endcode
  55:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  56:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:e:\game\msys2\mingw64\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:e:\game\msys2\mingw64\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:e:\game\msys2\mingw64\avr\include\util\delay.h ****     used.
  60:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  61:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:e:\game\msys2\mingw64\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:e:\game\msys2\mingw64\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:e:\game\msys2\mingw64\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:e:\game\msys2\mingw64\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:e:\game\msys2\mingw64\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:e:\game\msys2\mingw64\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:e:\game\msys2\mingw64\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  70:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:e:\game\msys2\mingw64\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:e:\game\msys2\mingw64\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:e:\game\msys2\mingw64\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:e:\game\msys2\mingw64\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:e:\game\msys2\mingw64\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:e:\game\msys2\mingw64\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:e:\game\msys2\mingw64\avr\include\util\delay.h ****     routines linked into the application.
  78:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  79:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:e:\game\msys2\mingw64\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:e:\game\msys2\mingw64\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  83:e:\game\msys2\mingw64\avr\include\util\delay.h **** */
  84:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  85:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:e:\game\msys2\mingw64\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:e:\game\msys2\mingw64\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
  89:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  90:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef F_CPU
  91:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:e:\game\msys2\mingw64\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \ingroup util_delay
  94:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \def F_CPU
  95:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  97:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:e:\game\msys2\mingw64\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:e:\game\msys2\mingw64\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:e:\game\msys2\mingw64\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:e:\game\msys2\mingw64\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 103:e:\game\msys2\mingw64\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:e:\game\msys2\mingw64\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:e:\game\msys2\mingw64\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:e:\game\msys2\mingw64\avr\include\util\delay.h ****     integer value.
 107:e:\game\msys2\mingw64\avr\include\util\delay.h ****  */
 108:e:\game\msys2\mingw64\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 110:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 111:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:e:\game\msys2\mingw64\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 114:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 115:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:e:\game\msys2\mingw64\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:e:\game\msys2\mingw64\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  include <math.h>
 119:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 120:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 121:e:\game\msys2\mingw64\avr\include\util\delay.h **** /**
 122:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \ingroup util_delay
 123:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 124:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 126:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:e:\game\msys2\mingw64\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 129:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 131:e:\game\msys2\mingw64\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:e:\game\msys2\mingw64\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:e:\game\msys2\mingw64\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:e:\game\msys2\mingw64\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:e:\game\msys2\mingw64\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 137:e:\game\msys2\mingw64\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:e:\game\msys2\mingw64\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:e:\game\msys2\mingw64\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:e:\game\msys2\mingw64\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 142:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:e:\game\msys2\mingw64\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:e:\game\msys2\mingw64\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:e:\game\msys2\mingw64\avr\include\util\delay.h ****    microseconds of delay.
 146:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 147:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:e:\game\msys2\mingw64\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:e:\game\msys2\mingw64\avr\include\util\delay.h ****    respectively.
 151:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 152:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \note
 153:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 154:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:e:\game\msys2\mingw64\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:e:\game\msys2\mingw64\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:e:\game\msys2\mingw64\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:e:\game\msys2\mingw64\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:e:\game\msys2\mingw64\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:e:\game\msys2\mingw64\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:e:\game\msys2\mingw64\avr\include\util\delay.h ****    not available to the compiler then.
 163:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 164:e:\game\msys2\mingw64\avr\include\util\delay.h ****  */
 165:e:\game\msys2\mingw64\avr\include\util\delay.h **** void
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** _delay_ms(double __ms)
 2422               		.loc 3 166 1 view .LVU546
 2423               	.LBB88:
 167:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	double __tmp ;
 2424               		.loc 3 168 2 view .LVU547
 169:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:e:\game\msys2\mingw64\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:e:\game\msys2\mingw64\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 2425               		.loc 3 172 2 view .LVU548
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2426               		.loc 3 173 2 view .LVU549
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2427               		.loc 3 174 2 view .LVU550
 175:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 176:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 179:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 182:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#else
 183:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		//round up by default
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2428               		.loc 3 184 3 view .LVU551
 185:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 186:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 187:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2429               		.loc 3 187 2 view .LVU552
 2430 0030 8FE9      		ldi r24,lo8(3999)
 2431 0032 9FE0      		ldi r25,hi8(3999)
 2432 0034 0197      	1:	sbiw r24,1
 2433 0036 01F4      		brne 1b
 2434 0038 00C0      		rjmp .
 2435 003a 0000      		nop
 2436               	.LVL155:
 2437               	.L116:
 2438               	/* epilogue start */
 2439               		.loc 3 187 2 is_stmt 0 view .LVU553
 2440               	.LBE88:
 2441               	.LBE87:
 638:quantum/rgblight.c **** 
 2442               		.loc 1 638 1 view .LVU554
 2443 003c 0F91      		pop r16
 2444               	.LVL156:
 638:quantum/rgblight.c **** 
 2445               		.loc 1 638 1 view .LVU555
 2446 003e 0895      		ret
 2447               		.cfi_endproc
 2448               	.LFE159:
 2450               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2451               	.global	rgblight_sethsv_range
 2453               	rgblight_sethsv_range:
 2454               	.LVL157:
 2455               	.LFB160:
 640:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2456               		.loc 1 640 95 is_stmt 1 view -0
 2457               		.cfi_startproc
 640:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2458               		.loc 1 640 95 is_stmt 0 view .LVU557
 2459 0000 0F93      		push r16
 2460               	.LCFI38:
 2461               		.cfi_def_cfa_offset 3
 2462               		.cfi_offset 16, -2
 2463 0002 1F93      		push r17
 2464               	.LCFI39:
 2465               		.cfi_def_cfa_offset 4
 2466               		.cfi_offset 17, -3
 2467 0004 CF93      		push r28
 2468               	.LCFI40:
 2469               		.cfi_def_cfa_offset 5
 2470               		.cfi_offset 28, -4
 2471 0006 DF93      		push r29
 2472               	.LCFI41:
 2473               		.cfi_def_cfa_offset 6
 2474               		.cfi_offset 29, -5
 2475 0008 00D0      		rcall .
 2476 000a 0F92      		push __tmp_reg__
 2477               	.LCFI42:
 2478               		.cfi_def_cfa_offset 9
 2479 000c CDB7      		in r28,__SP_L__
 2480 000e DEB7      		in r29,__SP_H__
 2481               	.LCFI43:
 2482               		.cfi_def_cfa_register 28
 2483               	/* prologue: function */
 2484               	/* frame size = 3 */
 2485               	/* stack size = 7 */
 2486               	.L__stack_usage = 7
 2487 0010 122F      		mov r17,r18
 641:quantum/rgblight.c ****         return;
 2488               		.loc 1 641 5 is_stmt 1 view .LVU558
 641:quantum/rgblight.c ****         return;
 2489               		.loc 1 641 25 is_stmt 0 view .LVU559
 2490 0012 9091 0000 		lds r25,rgblight_config
 641:quantum/rgblight.c ****         return;
 2491               		.loc 1 641 8 view .LVU560
 2492 0016 90FF      		sbrs r25,0
 2493 0018 00C0      		rjmp .L123
 645:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2494               		.loc 1 645 5 is_stmt 1 view .LVU561
 646:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2495               		.loc 1 646 5 view .LVU562
 2496               	.LVL158:
 2497               	.LBB91:
 2498               	.LBI91:
 154:quantum/rgblight.c **** 
 2499               		.loc 1 154 6 view .LVU563
 2500               	.LBB92:
 154:quantum/rgblight.c **** 
 2501               		.loc 1 154 70 view .LVU564
 2502 001a 9E01      		movw r18,r28
 2503               	.LVL159:
 154:quantum/rgblight.c **** 
 2504               		.loc 1 154 70 is_stmt 0 view .LVU565
 2505 001c 2F5F      		subi r18,-1
 2506 001e 3F4F      		sbci r19,-1
 2507 0020 0E94 0000 		call sethsv_raw
 2508               	.LVL160:
 154:quantum/rgblight.c **** 
 2509               		.loc 1 154 70 view .LVU566
 2510               	.LBE92:
 2511               	.LBE91:
 647:quantum/rgblight.c **** }
 2512               		.loc 1 647 5 is_stmt 1 view .LVU567
 2513 0024 212F      		mov r18,r17
 2514 0026 4B81      		ldd r20,Y+3
 2515 0028 6981      		ldd r22,Y+1
 2516 002a 8A81      		ldd r24,Y+2
 2517 002c 0E94 0000 		call rgblight_setrgb_range
 2518               	.LVL161:
 2519               	.L123:
 2520               	/* epilogue start */
 648:quantum/rgblight.c **** 
 2521               		.loc 1 648 1 is_stmt 0 view .LVU568
 2522 0030 0F90      		pop __tmp_reg__
 2523 0032 0F90      		pop __tmp_reg__
 2524 0034 0F90      		pop __tmp_reg__
 2525 0036 DF91      		pop r29
 2526 0038 CF91      		pop r28
 2527 003a 1F91      		pop r17
 2528               	.LVL162:
 648:quantum/rgblight.c **** 
 2529               		.loc 1 648 1 view .LVU569
 2530 003c 0F91      		pop r16
 2531               	.LVL163:
 648:quantum/rgblight.c **** 
 2532               		.loc 1 648 1 view .LVU570
 2533 003e 0895      		ret
 2534               		.cfi_endproc
 2535               	.LFE160:
 2537               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2538               	.global	rgblight_sethsv_master
 2540               	rgblight_sethsv_master:
 2541               	.LVL164:
 2542               	.LFB163:
 655:quantum/rgblight.c **** 
 2543               		.loc 1 655 68 is_stmt 1 view -0
 2544               		.cfi_startproc
 655:quantum/rgblight.c **** 
 2545               		.loc 1 655 68 is_stmt 0 view .LVU572
 2546 0000 0F93      		push r16
 2547               	.LCFI44:
 2548               		.cfi_def_cfa_offset 3
 2549               		.cfi_offset 16, -2
 2550               	/* prologue: function */
 2551               	/* frame size = 0 */
 2552               	/* stack size = 1 */
 2553               	.L__stack_usage = 1
 655:quantum/rgblight.c **** 
 2554               		.loc 1 655 70 is_stmt 1 view .LVU573
 2555 0002 04E0      		ldi r16,lo8(4)
 2556 0004 20E0      		ldi r18,0
 2557 0006 0E94 0000 		call rgblight_sethsv_range
 2558               	.LVL165:
 2559               	/* epilogue start */
 655:quantum/rgblight.c **** 
 2560               		.loc 1 655 1 is_stmt 0 view .LVU574
 2561 000a 0F91      		pop r16
 2562 000c 0895      		ret
 2563               		.cfi_endproc
 2564               	.LFE163:
 2566               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2567               	.global	rgblight_sethsv_slave
 2569               	rgblight_sethsv_slave:
 2570               	.LVL166:
 2571               	.LFB164:
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2572               		.loc 1 657 67 is_stmt 1 view -0
 2573               		.cfi_startproc
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2574               		.loc 1 657 67 is_stmt 0 view .LVU576
 2575 0000 0F93      		push r16
 2576               	.LCFI45:
 2577               		.cfi_def_cfa_offset 3
 2578               		.cfi_offset 16, -2
 2579               	/* prologue: function */
 2580               	/* frame size = 0 */
 2581               	/* stack size = 1 */
 2582               	.L__stack_usage = 1
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2583               		.loc 1 657 69 is_stmt 1 view .LVU577
 2584 0002 08E0      		ldi r16,lo8(8)
 2585 0004 24E0      		ldi r18,lo8(4)
 2586 0006 0E94 0000 		call rgblight_sethsv_range
 2587               	.LVL167:
 2588               	/* epilogue start */
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2589               		.loc 1 657 1 is_stmt 0 view .LVU578
 2590 000a 0F91      		pop r16
 2591 000c 0895      		ret
 2592               		.cfi_endproc
 2593               	.LFE164:
 2595               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2596               	.global	rgblight_setrgb_master
 2598               	rgblight_setrgb_master:
 2599               	.LVL168:
 2600               	.LFB161:
 651:quantum/rgblight.c **** 
 2601               		.loc 1 651 62 is_stmt 1 view -0
 2602               		.cfi_startproc
 651:quantum/rgblight.c **** 
 2603               		.loc 1 651 62 is_stmt 0 view .LVU580
 2604 0000 0F93      		push r16
 2605               	.LCFI46:
 2606               		.cfi_def_cfa_offset 3
 2607               		.cfi_offset 16, -2
 2608               	/* prologue: function */
 2609               	/* frame size = 0 */
 2610               	/* stack size = 1 */
 2611               	.L__stack_usage = 1
 651:quantum/rgblight.c **** 
 2612               		.loc 1 651 64 is_stmt 1 view .LVU581
 2613 0002 04E0      		ldi r16,lo8(4)
 2614 0004 20E0      		ldi r18,0
 2615 0006 0E94 0000 		call rgblight_setrgb_range
 2616               	.LVL169:
 2617               	/* epilogue start */
 651:quantum/rgblight.c **** 
 2618               		.loc 1 651 1 is_stmt 0 view .LVU582
 2619 000a 0F91      		pop r16
 2620 000c 0895      		ret
 2621               		.cfi_endproc
 2622               	.LFE161:
 2624               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2625               	.global	rgblight_setrgb_slave
 2627               	rgblight_setrgb_slave:
 2628               	.LVL170:
 2629               	.LFB162:
 653:quantum/rgblight.c **** 
 2630               		.loc 1 653 61 is_stmt 1 view -0
 2631               		.cfi_startproc
 653:quantum/rgblight.c **** 
 2632               		.loc 1 653 61 is_stmt 0 view .LVU584
 2633 0000 0F93      		push r16
 2634               	.LCFI47:
 2635               		.cfi_def_cfa_offset 3
 2636               		.cfi_offset 16, -2
 2637               	/* prologue: function */
 2638               	/* frame size = 0 */
 2639               	/* stack size = 1 */
 2640               	.L__stack_usage = 1
 653:quantum/rgblight.c **** 
 2641               		.loc 1 653 63 is_stmt 1 view .LVU585
 2642 0002 08E0      		ldi r16,lo8(8)
 2643 0004 24E0      		ldi r18,lo8(4)
 2644 0006 0E94 0000 		call rgblight_setrgb_range
 2645               	.LVL171:
 2646               	/* epilogue start */
 653:quantum/rgblight.c **** 
 2647               		.loc 1 653 1 is_stmt 0 view .LVU586
 2648 000a 0F91      		pop r16
 2649 000c 0895      		ret
 2650               		.cfi_endproc
 2651               	.LFE162:
 2653               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2654               	.global	rgblight_effect_rainbow_swirl
 2656               	rgblight_effect_rainbow_swirl:
 2657               	.LVL172:
 2658               	.LFB177:
1095:quantum/rgblight.c ****     uint8_t hue;
 2659               		.loc 1 1095 62 is_stmt 1 view -0
 2660               		.cfi_startproc
1095:quantum/rgblight.c ****     uint8_t hue;
 2661               		.loc 1 1095 62 is_stmt 0 view .LVU588
 2662 0000 EF92      		push r14
 2663               	.LCFI48:
 2664               		.cfi_def_cfa_offset 3
 2665               		.cfi_offset 14, -2
 2666 0002 FF92      		push r15
 2667               	.LCFI49:
 2668               		.cfi_def_cfa_offset 4
 2669               		.cfi_offset 15, -3
 2670 0004 1F93      		push r17
 2671               	.LCFI50:
 2672               		.cfi_def_cfa_offset 5
 2673               		.cfi_offset 17, -4
 2674 0006 CF93      		push r28
 2675               	.LCFI51:
 2676               		.cfi_def_cfa_offset 6
 2677               		.cfi_offset 28, -5
 2678 0008 DF93      		push r29
 2679               	.LCFI52:
 2680               		.cfi_def_cfa_offset 7
 2681               		.cfi_offset 29, -6
 2682               	/* prologue: function */
 2683               	/* frame size = 0 */
 2684               	/* stack size = 5 */
 2685               	.L__stack_usage = 5
 2686 000a EC01      		movw r28,r24
1096:quantum/rgblight.c ****     uint8_t i;
 2687               		.loc 1 1096 5 is_stmt 1 view .LVU589
1097:quantum/rgblight.c **** 
 2688               		.loc 1 1097 5 view .LVU590
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2689               		.loc 1 1099 5 view .LVU591
 2690               	.LVL173:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2691               		.loc 1 1099 12 is_stmt 0 view .LVU592
 2692 000c 10E0      		ldi r17,0
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2693               		.loc 1 1100 45 view .LVU593
 2694 000e EE24      		clr r14
 2695 0010 EA94      		dec r14
 2696 0012 F12C      		mov r15,__zero_reg__
 2697               	.LVL174:
 2698               	.L131:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2699               		.loc 1 1099 17 is_stmt 1 discriminator 1 view .LVU594
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2700               		.loc 1 1099 36 is_stmt 0 discriminator 1 view .LVU595
 2701 0014 6091 0000 		lds r22,rgblight_ranges+4
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2702               		.loc 1 1099 5 discriminator 1 view .LVU596
 2703 0018 1617      		cp r17,r22
 2704 001a 00F0      		brlo .L132
1103:quantum/rgblight.c **** 
 2705               		.loc 1 1103 5 is_stmt 1 view .LVU597
 2706 001c 0E94 0000 		call rgblight_set
 2707               	.LVL175:
1105:quantum/rgblight.c ****         anim->current_hue++;
 2708               		.loc 1 1105 5 view .LVU598
1105:quantum/rgblight.c ****         anim->current_hue++;
 2709               		.loc 1 1105 9 is_stmt 0 view .LVU599
 2710 0020 9A81      		ldd r25,Y+2
 2711 0022 8C81      		ldd r24,Y+4
1105:quantum/rgblight.c ****         anim->current_hue++;
 2712               		.loc 1 1105 8 view .LVU600
 2713 0024 90FF      		sbrs r25,0
 2714 0026 00C0      		rjmp .L133
1106:quantum/rgblight.c ****     } else {
 2715               		.loc 1 1106 9 is_stmt 1 view .LVU601
1106:quantum/rgblight.c ****     } else {
 2716               		.loc 1 1106 26 is_stmt 0 view .LVU602
 2717 0028 8F5F      		subi r24,lo8(-(1))
 2718               	.L135:
1108:quantum/rgblight.c ****     }
 2719               		.loc 1 1108 26 view .LVU603
 2720 002a 8C83      		std Y+4,r24
 2721               	/* epilogue start */
1110:quantum/rgblight.c **** #endif
 2722               		.loc 1 1110 1 view .LVU604
 2723 002c DF91      		pop r29
 2724 002e CF91      		pop r28
 2725               	.LVL176:
1110:quantum/rgblight.c **** #endif
 2726               		.loc 1 1110 1 view .LVU605
 2727 0030 1F91      		pop r17
 2728               	.LVL177:
1110:quantum/rgblight.c **** #endif
 2729               		.loc 1 1110 1 view .LVU606
 2730 0032 FF90      		pop r15
 2731 0034 EF90      		pop r14
 2732 0036 0895      		ret
 2733               	.LVL178:
 2734               	.L132:
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2735               		.loc 1 1100 9 is_stmt 1 discriminator 3 view .LVU607
1101:quantum/rgblight.c ****     }
 2736               		.loc 1 1101 9 discriminator 3 view .LVU608
 2737               	.LBB95:
 2738               	.LBI95:
 154:quantum/rgblight.c **** 
 2739               		.loc 1 154 6 discriminator 3 view .LVU609
 2740               	.LBB96:
 154:quantum/rgblight.c **** 
 2741               		.loc 1 154 70 discriminator 3 view .LVU610
 2742               	.LBE96:
 2743               	.LBE95:
1101:quantum/rgblight.c ****     }
 2744               		.loc 1 1101 99 is_stmt 0 discriminator 3 view .LVU611
 2745 0038 2091 0000 		lds r18,rgblight_ranges+2
1101:quantum/rgblight.c ****     }
 2746               		.loc 1 1101 82 discriminator 3 view .LVU612
 2747 003c 422F      		mov r20,r18
 2748 003e 410F      		add r20,r17
 2749 0040 5527      		clr r21
 2750 0042 551F      		rol r21
 2751 0044 CA01      		movw r24,r20
1101:quantum/rgblight.c ****     }
 2752               		.loc 1 1101 9 discriminator 3 view .LVU613
 2753 0046 9A01      		movw r18,r20
 2754 0048 220F      		lsl r18
 2755 004a 331F      		rol r19
 2756 004c 280F      		add r18,r24
 2757 004e 391F      		adc r19,r25
 2758 0050 2050      		subi r18,lo8(-(led))
 2759 0052 3040      		sbci r19,hi8(-(led))
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2760               		.loc 1 1100 62 discriminator 3 view .LVU614
 2761 0054 70E0      		ldi r23,0
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2762               		.loc 1 1100 45 discriminator 3 view .LVU615
 2763 0056 C701      		movw r24,r14
 2764 0058 0E94 0000 		call __divmodhi4
 2765               	.LVL179:
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2766               		.loc 1 1100 45 discriminator 3 view .LVU616
 2767 005c 962F      		mov r25,r22
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2768               		.loc 1 1100 13 discriminator 3 view .LVU617
 2769 005e 8C81      		ldd r24,Y+4
 2770               	.LBB98:
 2771               	.LBB97:
 154:quantum/rgblight.c **** 
 2772               		.loc 1 154 70 discriminator 3 view .LVU618
 2773 0060 4091 0000 		lds r20,rgblight_config+3
 2774 0064 6091 0000 		lds r22,rgblight_config+2
 2775 0068 199F      		mul r17,r25
 2776 006a 800D      		add r24,r0
 2777 006c 1124      		clr __zero_reg__
 2778 006e 0E94 0000 		call sethsv_raw
 2779               	.LVL180:
 154:quantum/rgblight.c **** 
 2780               		.loc 1 154 70 discriminator 3 view .LVU619
 2781               	.LBE97:
 2782               	.LBE98:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2783               		.loc 1 1099 54 is_stmt 1 discriminator 3 view .LVU620
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2784               		.loc 1 1099 55 is_stmt 0 discriminator 3 view .LVU621
 2785 0072 1F5F      		subi r17,lo8(-(1))
 2786               	.LVL181:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2787               		.loc 1 1099 55 discriminator 3 view .LVU622
 2788 0074 00C0      		rjmp .L131
 2789               	.L133:
1108:quantum/rgblight.c ****     }
 2790               		.loc 1 1108 9 is_stmt 1 view .LVU623
1108:quantum/rgblight.c ****     }
 2791               		.loc 1 1108 26 is_stmt 0 view .LVU624
 2792 0076 8150      		subi r24,lo8(-(-1))
 2793 0078 00C0      		rjmp .L135
 2794               		.cfi_endproc
 2795               	.LFE177:
 2797               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2798               	.global	rgblight_effect_snake
 2800               	rgblight_effect_snake:
 2801               	.LVL182:
 2802               	.LFB178:
1116:quantum/rgblight.c ****     static uint8_t pos = 0;
 2803               		.loc 1 1116 54 is_stmt 1 view -0
 2804               		.cfi_startproc
1116:quantum/rgblight.c ****     static uint8_t pos = 0;
 2805               		.loc 1 1116 54 is_stmt 0 view .LVU626
 2806 0000 BF92      		push r11
 2807               	.LCFI53:
 2808               		.cfi_def_cfa_offset 3
 2809               		.cfi_offset 11, -2
 2810 0002 CF92      		push r12
 2811               	.LCFI54:
 2812               		.cfi_def_cfa_offset 4
 2813               		.cfi_offset 12, -3
 2814 0004 DF92      		push r13
 2815               	.LCFI55:
 2816               		.cfi_def_cfa_offset 5
 2817               		.cfi_offset 13, -4
 2818 0006 EF92      		push r14
 2819               	.LCFI56:
 2820               		.cfi_def_cfa_offset 6
 2821               		.cfi_offset 14, -5
 2822 0008 FF92      		push r15
 2823               	.LCFI57:
 2824               		.cfi_def_cfa_offset 7
 2825               		.cfi_offset 15, -6
 2826 000a 0F93      		push r16
 2827               	.LCFI58:
 2828               		.cfi_def_cfa_offset 8
 2829               		.cfi_offset 16, -7
 2830 000c 1F93      		push r17
 2831               	.LCFI59:
 2832               		.cfi_def_cfa_offset 9
 2833               		.cfi_offset 17, -8
 2834 000e CF93      		push r28
 2835               	.LCFI60:
 2836               		.cfi_def_cfa_offset 10
 2837               		.cfi_offset 28, -9
 2838 0010 DF93      		push r29
 2839               	.LCFI61:
 2840               		.cfi_def_cfa_offset 11
 2841               		.cfi_offset 29, -10
 2842               	/* prologue: function */
 2843               	/* frame size = 0 */
 2844               	/* stack size = 9 */
 2845               	.L__stack_usage = 9
1117:quantum/rgblight.c ****     uint8_t        i, j;
 2846               		.loc 1 1117 5 is_stmt 1 view .LVU627
1118:quantum/rgblight.c ****     int8_t         k;
 2847               		.loc 1 1118 5 view .LVU628
1119:quantum/rgblight.c ****     int8_t         increment = 1;
 2848               		.loc 1 1119 5 view .LVU629
1120:quantum/rgblight.c **** 
 2849               		.loc 1 1120 5 view .LVU630
 2850               	.LVL183:
1122:quantum/rgblight.c ****         increment = -1;
 2851               		.loc 1 1122 5 view .LVU631
1122:quantum/rgblight.c ****         increment = -1;
 2852               		.loc 1 1122 9 is_stmt 0 view .LVU632
 2853 0012 FC01      		movw r30,r24
 2854 0014 8281      		ldd r24,Z+2
 2855               	.LVL184:
1123:quantum/rgblight.c ****     }
 2856               		.loc 1 1123 19 view .LVU633
 2857 0016 0FEF      		ldi r16,lo8(-1)
1122:quantum/rgblight.c ****         increment = -1;
 2858               		.loc 1 1122 8 view .LVU634
 2859 0018 80FF      		sbrs r24,0
1120:quantum/rgblight.c **** 
 2860               		.loc 1 1120 20 view .LVU635
 2861 001a 01E0      		ldi r16,lo8(1)
 2862               	.L137:
 2863               	.LVL185:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2864               		.loc 1 1137 5 is_stmt 1 view .LVU636
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2865               		.loc 1 1137 12 is_stmt 0 view .LVU637
 2866 001c 10E0      		ldi r17,0
 2867               	.LVL186:
 2868               	.L138:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2869               		.loc 1 1137 17 is_stmt 1 discriminator 1 view .LVU638
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2870               		.loc 1 1137 5 is_stmt 0 discriminator 1 view .LVU639
 2871 001e 8091 0000 		lds r24,rgblight_ranges+4
 2872 0022 1817      		cp r17,r24
 2873 0024 00F0      		brlo .L143
1158:quantum/rgblight.c ****     if (increment == 1) {
 2874               		.loc 1 1158 5 is_stmt 1 view .LVU640
 2875 0026 0E94 0000 		call rgblight_set
 2876               	.LVL187:
1159:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2877               		.loc 1 1159 5 view .LVU641
 2878 002a 8091 0000 		lds r24,pos.3424
1159:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2879               		.loc 1 1159 8 is_stmt 0 view .LVU642
 2880 002e 0130      		cpi r16,lo8(1)
 2881 0030 01F0      		breq .+2
 2882 0032 00C0      		rjmp .L144
1160:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2883               		.loc 1 1160 9 is_stmt 1 view .LVU643
1160:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2884               		.loc 1 1160 12 is_stmt 0 view .LVU644
 2885 0034 8111      		cpse r24,__zero_reg__
 2886 0036 00C0      		rjmp .L145
1161:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2887               		.loc 1 1161 13 is_stmt 1 view .LVU645
1161:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2888               		.loc 1 1161 51 is_stmt 0 view .LVU646
 2889 0038 8091 0000 		lds r24,rgblight_ranges+4
 2890               	.L145:
1166:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2891               		.loc 1 1166 13 is_stmt 1 view .LVU647
1166:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2892               		.loc 1 1166 17 is_stmt 0 view .LVU648
 2893 003c 8150      		subi r24,lo8(-(-1))
 2894               	.L149:
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2895               		.loc 1 1172 13 view .LVU649
 2896 003e 8093 0000 		sts pos.3424,r24
 2897               	/* epilogue start */
1177:quantum/rgblight.c **** #endif
 2898               		.loc 1 1177 1 view .LVU650
 2899 0042 DF91      		pop r29
 2900 0044 CF91      		pop r28
 2901 0046 1F91      		pop r17
 2902               	.LVL188:
1177:quantum/rgblight.c **** #endif
 2903               		.loc 1 1177 1 view .LVU651
 2904 0048 0F91      		pop r16
 2905               	.LVL189:
1177:quantum/rgblight.c **** #endif
 2906               		.loc 1 1177 1 view .LVU652
 2907 004a FF90      		pop r15
 2908 004c EF90      		pop r14
 2909 004e DF90      		pop r13
 2910 0050 CF90      		pop r12
 2911 0052 BF90      		pop r11
 2912 0054 0895      		ret
 2913               	.LVL190:
 2914               	.L143:
 2915               	.LBB102:
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2916               		.loc 1 1138 9 is_stmt 1 view .LVU653
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2917               		.loc 1 1138 34 is_stmt 0 view .LVU654
 2918 0056 C091 0000 		lds r28,rgblight_ranges+2
 2919 005a C12E      		mov r12,r17
 2920 005c D12C      		mov r13,__zero_reg__
 2921 005e CC0D      		add r28,r12
 2922 0060 DD2D      		mov r29,r13
 2923 0062 D11D      		adc r29,__zero_reg__
 2924 0064 CE01      		movw r24,r28
 2925 0066 880F      		lsl r24
 2926 0068 991F      		rol r25
 2927 006a C80F      		add r28,r24
 2928 006c D91F      		adc r29,r25
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2929               		.loc 1 1138 19 view .LVU655
 2930 006e C050      		subi r28,lo8(-(led))
 2931 0070 D040      		sbci r29,hi8(-(led))
 2932               	.LVL191:
1139:quantum/rgblight.c ****         ledp->g        = 0;
 2933               		.loc 1 1139 9 is_stmt 1 view .LVU656
1139:quantum/rgblight.c ****         ledp->g        = 0;
 2934               		.loc 1 1139 24 is_stmt 0 view .LVU657
 2935 0072 1982      		std Y+1,__zero_reg__
1140:quantum/rgblight.c ****         ledp->b        = 0;
 2936               		.loc 1 1140 9 is_stmt 1 view .LVU658
1140:quantum/rgblight.c ****         ledp->b        = 0;
 2937               		.loc 1 1140 24 is_stmt 0 view .LVU659
 2938 0074 1882      		st Y,__zero_reg__
1141:quantum/rgblight.c **** #    ifdef RGBW
 2939               		.loc 1 1141 9 is_stmt 1 view .LVU660
1141:quantum/rgblight.c **** #    ifdef RGBW
 2940               		.loc 1 1141 24 is_stmt 0 view .LVU661
 2941 0076 1A82      		std Y+2,__zero_reg__
1145:quantum/rgblight.c ****             k = pos + j * increment;
 2942               		.loc 1 1145 9 is_stmt 1 view .LVU662
 2943               	.LVL192:
1145:quantum/rgblight.c ****             k = pos + j * increment;
 2944               		.loc 1 1145 21 view .LVU663
1141:quantum/rgblight.c **** #    ifdef RGBW
 2945               		.loc 1 1141 24 is_stmt 0 view .LVU664
 2946 0078 34E0      		ldi r19,lo8(4)
 2947 007a E32E      		mov r14,r19
 2948 007c F12C      		mov r15,__zero_reg__
 2949 007e B12C      		mov r11,__zero_reg__
 2950               	.LVL193:
 2951               	.L142:
1146:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2952               		.loc 1 1146 13 is_stmt 1 view .LVU665
1146:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2953               		.loc 1 1146 21 is_stmt 0 view .LVU666
 2954 0080 8091 0000 		lds r24,pos.3424
 2955 0084 8B0D      		add r24,r11
 2956               	.LVL194:
1147:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2957               		.loc 1 1147 13 is_stmt 1 view .LVU667
1147:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2958               		.loc 1 1147 16 is_stmt 0 view .LVU668
 2959 0086 8930      		cpi r24,lo8(9)
 2960 0088 04F0      		brlt .L139
1148:quantum/rgblight.c ****             }
 2961               		.loc 1 1148 17 is_stmt 1 view .LVU669
1148:quantum/rgblight.c ****             }
 2962               		.loc 1 1148 19 is_stmt 0 view .LVU670
 2963 008a 8770      		andi r24,lo8(7)
 2964               	.LVL195:
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 2965               		.loc 1 1150 13 is_stmt 1 view .LVU671
 2966               	.L140:
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2967               		.loc 1 1153 13 view .LVU672
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2968               		.loc 1 1153 19 is_stmt 0 view .LVU673
 2969 008c 082E      		mov __tmp_reg__,r24
 2970 008e 000C      		lsl r0
 2971 0090 990B      		sbc r25,r25
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2972               		.loc 1 1153 16 view .LVU674
 2973 0092 C816      		cp r12,r24
 2974 0094 D906      		cpc r13,r25
 2975 0096 01F4      		brne .L141
1154:quantum/rgblight.c ****             }
 2976               		.loc 1 1154 17 is_stmt 1 view .LVU675
 2977               	.LVL196:
 2978               	.LBB103:
 2979               	.LBI103:
 154:quantum/rgblight.c **** 
 2980               		.loc 1 154 6 view .LVU676
 2981               	.LBB104:
 154:quantum/rgblight.c **** 
 2982               		.loc 1 154 70 view .LVU677
 2983               	.LBE104:
 2984               	.LBE103:
1154:quantum/rgblight.c ****             }
 2985               		.loc 1 1154 91 is_stmt 0 view .LVU678
 2986 0098 8091 0000 		lds r24,rgblight_config+3
 2987               	.LVL197:
1154:quantum/rgblight.c ****             }
 2988               		.loc 1 1154 96 view .LVU679
 2989 009c 8E9D      		mul r24,r14
 2990 009e A001      		movw r20,r0
 2991 00a0 8F9D      		mul r24,r15
 2992 00a2 500D      		add r21,r0
 2993 00a4 1124      		clr __zero_reg__
1154:quantum/rgblight.c ****             }
 2994               		.loc 1 1154 133 view .LVU680
 2995 00a6 5595      		asr r21
 2996 00a8 4795      		ror r20
 2997 00aa 5595      		asr r21
 2998 00ac 4795      		ror r20
 2999               	.LBB106:
 3000               	.LBB105:
 154:quantum/rgblight.c **** 
 3001               		.loc 1 154 70 view .LVU681
 3002 00ae 9E01      		movw r18,r28
 3003 00b0 6091 0000 		lds r22,rgblight_config+2
 3004 00b4 8091 0000 		lds r24,rgblight_config+1
 3005 00b8 0E94 0000 		call sethsv_raw
 3006               	.LVL198:
 3007               	.L141:
 154:quantum/rgblight.c **** 
 3008               		.loc 1 154 70 view .LVU682
 3009               	.LBE105:
 3010               	.LBE106:
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3011               		.loc 1 1145 55 is_stmt 1 discriminator 2 view .LVU683
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3012               		.loc 1 1145 21 discriminator 2 view .LVU684
 3013 00bc B00E      		add r11,r16
 3014 00be F1E0      		ldi r31,1
 3015 00c0 EF1A      		sub r14,r31
 3016 00c2 F108      		sbc r15,__zero_reg__
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3017               		.loc 1 1145 9 is_stmt 0 discriminator 2 view .LVU685
 3018 00c4 01F4      		brne .L142
 3019               	.LBE102:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3020               		.loc 1 1137 54 is_stmt 1 discriminator 2 view .LVU686
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3021               		.loc 1 1137 55 is_stmt 0 discriminator 2 view .LVU687
 3022 00c6 1F5F      		subi r17,lo8(-(1))
 3023               	.LVL199:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3024               		.loc 1 1137 55 discriminator 2 view .LVU688
 3025 00c8 00C0      		rjmp .L138
 3026               	.LVL200:
 3027               	.L139:
 3028               	.LBB107:
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3029               		.loc 1 1150 13 is_stmt 1 view .LVU689
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3030               		.loc 1 1150 16 is_stmt 0 view .LVU690
 3031 00ca 87FF      		sbrs r24,7
 3032 00cc 00C0      		rjmp .L140
1151:quantum/rgblight.c ****             }
 3033               		.loc 1 1151 17 is_stmt 1 view .LVU691
1151:quantum/rgblight.c ****             }
 3034               		.loc 1 1151 23 is_stmt 0 view .LVU692
 3035 00ce 9091 0000 		lds r25,rgblight_ranges+4
 3036 00d2 890F      		add r24,r25
 3037               	.LVL201:
1151:quantum/rgblight.c ****             }
 3038               		.loc 1 1151 23 view .LVU693
 3039 00d4 00C0      		rjmp .L140
 3040               	.LVL202:
 3041               	.L144:
1151:quantum/rgblight.c ****             }
 3042               		.loc 1 1151 23 view .LVU694
 3043               	.LBE107:
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3044               		.loc 1 1172 9 is_stmt 1 view .LVU695
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3045               		.loc 1 1172 20 is_stmt 0 view .LVU696
 3046 00d6 90E0      		ldi r25,0
 3047 00d8 0196      		adiw r24,1
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3048               		.loc 1 1172 42 view .LVU697
 3049 00da 6091 0000 		lds r22,rgblight_ranges+4
 3050 00de 70E0      		ldi r23,0
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3051               		.loc 1 1172 25 view .LVU698
 3052 00e0 0E94 0000 		call __divmodhi4
 3053 00e4 00C0      		rjmp .L149
 3054               		.cfi_endproc
 3055               	.LFE178:
 3057               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3058               	.global	rgblight_effect_knight
 3060               	rgblight_effect_knight:
 3061               	.LVL203:
 3062               	.LFB179:
1183:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3063               		.loc 1 1183 55 is_stmt 1 view -0
 3064               		.cfi_startproc
1183:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3065               		.loc 1 1183 55 is_stmt 0 view .LVU700
 3066 0000 0F93      		push r16
 3067               	.LCFI62:
 3068               		.cfi_def_cfa_offset 3
 3069               		.cfi_offset 16, -2
 3070 0002 1F93      		push r17
 3071               	.LCFI63:
 3072               		.cfi_def_cfa_offset 4
 3073               		.cfi_offset 17, -3
 3074 0004 CF93      		push r28
 3075               	.LCFI64:
 3076               		.cfi_def_cfa_offset 5
 3077               		.cfi_offset 28, -4
 3078 0006 DF93      		push r29
 3079               	.LCFI65:
 3080               		.cfi_def_cfa_offset 6
 3081               		.cfi_offset 29, -5
 3082               	/* prologue: function */
 3083               	/* frame size = 0 */
 3084               	/* stack size = 4 */
 3085               	.L__stack_usage = 4
1184:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3086               		.loc 1 1184 5 is_stmt 1 view .LVU701
1185:quantum/rgblight.c ****     static int8_t increment  = 1;
 3087               		.loc 1 1185 5 view .LVU702
1186:quantum/rgblight.c ****     uint8_t       i, cur;
 3088               		.loc 1 1186 5 view .LVU703
1187:quantum/rgblight.c **** 
 3089               		.loc 1 1187 5 view .LVU704
1198:quantum/rgblight.c ****         led[i].r = 0;
 3090               		.loc 1 1198 5 view .LVU705
1198:quantum/rgblight.c ****         led[i].r = 0;
 3091               		.loc 1 1198 12 is_stmt 0 view .LVU706
 3092 0008 8091 0000 		lds r24,rgblight_ranges+2
 3093               	.LVL204:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3094               		.loc 1 1198 67 view .LVU707
 3095 000c 9091 0000 		lds r25,rgblight_ranges+3
 3096 0010 23E0      		ldi r18,lo8(3)
 3097 0012 829F      		mul r24,r18
 3098 0014 F001      		movw r30,r0
 3099 0016 1124      		clr __zero_reg__
 3100 0018 E050      		subi r30,lo8(-(led))
 3101 001a F040      		sbci r31,hi8(-(led))
 3102               	.L151:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3103               		.loc 1 1198 48 is_stmt 1 discriminator 1 view .LVU708
1198:quantum/rgblight.c ****         led[i].r = 0;
 3104               		.loc 1 1198 5 is_stmt 0 discriminator 1 view .LVU709
 3105 001c 8917      		cp r24,r25
 3106 001e 00F0      		brlo .L152
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3107               		.loc 1 1207 12 view .LVU710
 3108 0020 C0E0      		ldi r28,0
1211:quantum/rgblight.c ****         } else {
 3109               		.loc 1 1211 13 view .LVU711
 3110 0022 D3E0      		ldi r29,lo8(3)
 3111               	.LVL205:
 3112               	.L153:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3113               		.loc 1 1207 17 is_stmt 1 discriminator 1 view .LVU712
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3114               		.loc 1 1207 21 is_stmt 0 discriminator 1 view .LVU713
 3115 0024 6091 0000 		lds r22,rgblight_ranges+4
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3116               		.loc 1 1207 5 discriminator 1 view .LVU714
 3117 0028 C617      		cp r28,r22
 3118 002a 00F0      		brlo .L156
1221:quantum/rgblight.c **** 
 3119               		.loc 1 1221 5 is_stmt 1 view .LVU715
 3120 002c 0E94 0000 		call rgblight_set
 3121               	.LVL206:
1225:quantum/rgblight.c ****     high_bound += increment;
 3122               		.loc 1 1225 5 view .LVU716
1225:quantum/rgblight.c ****     high_bound += increment;
 3123               		.loc 1 1225 15 is_stmt 0 view .LVU717
 3124 0030 2091 0000 		lds r18,increment.3442
 3125 0034 8091 0000 		lds r24,low_bound.3440
 3126 0038 820F      		add r24,r18
 3127 003a 8093 0000 		sts low_bound.3440,r24
1226:quantum/rgblight.c **** 
 3128               		.loc 1 1226 5 is_stmt 1 view .LVU718
1226:quantum/rgblight.c **** 
 3129               		.loc 1 1226 16 is_stmt 0 view .LVU719
 3130 003e 9091 0000 		lds r25,high_bound.3441
 3131 0042 920F      		add r25,r18
 3132 0044 9093 0000 		sts high_bound.3441,r25
1228:quantum/rgblight.c ****         increment = -increment;
 3133               		.loc 1 1228 5 is_stmt 1 view .LVU720
1228:quantum/rgblight.c ****         increment = -increment;
 3134               		.loc 1 1228 8 is_stmt 0 view .LVU721
 3135 0048 1916      		cp __zero_reg__,r25
 3136 004a 04F4      		brge .L157
1228:quantum/rgblight.c ****         increment = -increment;
 3137               		.loc 1 1228 38 discriminator 1 view .LVU722
 3138 004c 082E      		mov __tmp_reg__,r24
 3139 004e 000C      		lsl r0
 3140 0050 990B      		sbc r25,r25
1228:quantum/rgblight.c ****         increment = -increment;
 3141               		.loc 1 1228 41 discriminator 1 view .LVU723
 3142 0052 4091 0000 		lds r20,rgblight_ranges+4
1228:quantum/rgblight.c ****         increment = -increment;
 3143               		.loc 1 1228 72 discriminator 1 view .LVU724
 3144 0056 4150      		subi r20,1
 3145 0058 550B      		sbc r21,r21
1228:quantum/rgblight.c ****         increment = -increment;
 3146               		.loc 1 1228 25 discriminator 1 view .LVU725
 3147 005a 8417      		cp r24,r20
 3148 005c 9507      		cpc r25,r21
 3149 005e 04F0      		brlt .L150
 3150               	.L157:
1229:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3151               		.loc 1 1229 9 is_stmt 1 view .LVU726
1229:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3152               		.loc 1 1229 19 is_stmt 0 view .LVU727
 3153 0060 2195      		neg r18
 3154 0062 2093 0000 		sts increment.3442,r18
 3155               	.L150:
 3156               	/* epilogue start */
1236:quantum/rgblight.c **** #endif
 3157               		.loc 1 1236 1 view .LVU728
 3158 0066 DF91      		pop r29
 3159 0068 CF91      		pop r28
 3160               	.LVL207:
1236:quantum/rgblight.c **** #endif
 3161               		.loc 1 1236 1 view .LVU729
 3162 006a 1F91      		pop r17
 3163 006c 0F91      		pop r16
 3164 006e 0895      		ret
 3165               	.LVL208:
 3166               	.L152:
1199:quantum/rgblight.c ****         led[i].g = 0;
 3167               		.loc 1 1199 9 is_stmt 1 discriminator 3 view .LVU730
1199:quantum/rgblight.c ****         led[i].g = 0;
 3168               		.loc 1 1199 18 is_stmt 0 discriminator 3 view .LVU731
 3169 0070 1182      		std Z+1,__zero_reg__
1200:quantum/rgblight.c ****         led[i].b = 0;
 3170               		.loc 1 1200 9 is_stmt 1 discriminator 3 view .LVU732
1200:quantum/rgblight.c ****         led[i].b = 0;
 3171               		.loc 1 1200 18 is_stmt 0 discriminator 3 view .LVU733
 3172 0072 1082      		st Z,__zero_reg__
1201:quantum/rgblight.c **** #    ifdef RGBW
 3173               		.loc 1 1201 9 is_stmt 1 discriminator 3 view .LVU734
1201:quantum/rgblight.c **** #    ifdef RGBW
 3174               		.loc 1 1201 18 is_stmt 0 discriminator 3 view .LVU735
 3175 0074 1282      		std Z+2,__zero_reg__
1198:quantum/rgblight.c ****         led[i].r = 0;
 3176               		.loc 1 1198 84 is_stmt 1 discriminator 3 view .LVU736
1198:quantum/rgblight.c ****         led[i].r = 0;
 3177               		.loc 1 1198 85 is_stmt 0 discriminator 3 view .LVU737
 3178 0076 8F5F      		subi r24,lo8(-(1))
 3179               	.LVL209:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3180               		.loc 1 1198 85 discriminator 3 view .LVU738
 3181 0078 3396      		adiw r30,3
 3182 007a 00C0      		rjmp .L151
 3183               	.LVL210:
 3184               	.L156:
1208:quantum/rgblight.c **** 
 3185               		.loc 1 1208 9 is_stmt 1 view .LVU739
1208:quantum/rgblight.c **** 
 3186               		.loc 1 1208 18 is_stmt 0 view .LVU740
 3187 007c 0C2F      		mov r16,r28
 3188 007e 10E0      		ldi r17,0
1208:quantum/rgblight.c **** 
 3189               		.loc 1 1208 68 view .LVU741
 3190 0080 70E0      		ldi r23,0
1208:quantum/rgblight.c **** 
 3191               		.loc 1 1208 51 view .LVU742
 3192 0082 C801      		movw r24,r16
 3193 0084 0E94 0000 		call __divmodhi4
1208:quantum/rgblight.c **** 
 3194               		.loc 1 1208 13 view .LVU743
 3195 0088 2091 0000 		lds r18,rgblight_ranges+2
 3196 008c 820F      		add r24,r18
 3197               	.LVL211:
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3198               		.loc 1 1210 9 is_stmt 1 view .LVU744
 3199 008e 482F      		mov r20,r24
 3200 0090 50E0      		ldi r21,0
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3201               		.loc 1 1210 15 is_stmt 0 view .LVU745
 3202 0092 2091 0000 		lds r18,low_bound.3440
 3203 0096 022E      		mov __tmp_reg__,r18
 3204 0098 000C      		lsl r0
 3205 009a 330B      		sbc r19,r19
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3206               		.loc 1 1210 12 view .LVU746
 3207 009c 0217      		cp r16,r18
 3208 009e 1307      		cpc r17,r19
 3209 00a0 04F0      		brlt .L154
 3210               	.LVL212:
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3211               		.loc 1 1210 33 discriminator 1 view .LVU747
 3212 00a2 2091 0000 		lds r18,high_bound.3441
 3213 00a6 022E      		mov __tmp_reg__,r18
 3214 00a8 000C      		lsl r0
 3215 00aa 330B      		sbc r19,r19
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3216               		.loc 1 1210 28 discriminator 1 view .LVU748
 3217 00ac 2017      		cp r18,r16
 3218 00ae 3107      		cpc r19,r17
 3219 00b0 04F0      		brlt .L154
1211:quantum/rgblight.c ****         } else {
 3220               		.loc 1 1211 13 is_stmt 1 view .LVU749
 3221               	.LVL213:
 3222               	.LBB110:
 3223               	.LBI110:
 154:quantum/rgblight.c **** 
 3224               		.loc 1 154 6 view .LVU750
 3225               	.LBB111:
 154:quantum/rgblight.c **** 
 3226               		.loc 1 154 70 view .LVU751
 3227               	.LBE111:
 3228               	.LBE110:
1211:quantum/rgblight.c ****         } else {
 3229               		.loc 1 1211 13 is_stmt 0 view .LVU752
 3230 00b2 8D9F      		mul r24,r29
 3231 00b4 9001      		movw r18,r0
 3232 00b6 1124      		clr __zero_reg__
 3233 00b8 2050      		subi r18,lo8(-(led))
 3234 00ba 3040      		sbci r19,hi8(-(led))
 3235               	.LBB113:
 3236               	.LBB112:
 154:quantum/rgblight.c **** 
 3237               		.loc 1 154 70 view .LVU753
 3238 00bc 4091 0000 		lds r20,rgblight_config+3
 3239 00c0 6091 0000 		lds r22,rgblight_config+2
 3240 00c4 8091 0000 		lds r24,rgblight_config+1
 3241               	.LVL214:
 154:quantum/rgblight.c **** 
 3242               		.loc 1 154 70 view .LVU754
 3243 00c8 0E94 0000 		call sethsv_raw
 3244               	.LVL215:
 3245               	.L155:
 154:quantum/rgblight.c **** 
 3246               		.loc 1 154 70 view .LVU755
 3247               	.LBE112:
 3248               	.LBE113:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3249               		.loc 1 1207 53 is_stmt 1 discriminator 2 view .LVU756
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3250               		.loc 1 1207 54 is_stmt 0 discriminator 2 view .LVU757
 3251 00cc CF5F      		subi r28,lo8(-(1))
 3252               	.LVL216:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3253               		.loc 1 1207 54 discriminator 2 view .LVU758
 3254 00ce 00C0      		rjmp .L153
 3255               	.LVL217:
 3256               	.L154:
1213:quantum/rgblight.c ****             led[cur].g = 0;
 3257               		.loc 1 1213 13 is_stmt 1 view .LVU759
1213:quantum/rgblight.c ****             led[cur].g = 0;
 3258               		.loc 1 1213 24 is_stmt 0 view .LVU760
 3259 00d0 FA01      		movw r30,r20
 3260 00d2 EE0F      		lsl r30
 3261 00d4 FF1F      		rol r31
 3262 00d6 E40F      		add r30,r20
 3263 00d8 F51F      		adc r31,r21
 3264 00da E050      		subi r30,lo8(-(led))
 3265 00dc F040      		sbci r31,hi8(-(led))
 3266 00de 1182      		std Z+1,__zero_reg__
1214:quantum/rgblight.c ****             led[cur].b = 0;
 3267               		.loc 1 1214 13 is_stmt 1 view .LVU761
1214:quantum/rgblight.c ****             led[cur].b = 0;
 3268               		.loc 1 1214 24 is_stmt 0 view .LVU762
 3269 00e0 1082      		st Z,__zero_reg__
1215:quantum/rgblight.c **** #    ifdef RGBW
 3270               		.loc 1 1215 13 is_stmt 1 view .LVU763
1215:quantum/rgblight.c **** #    ifdef RGBW
 3271               		.loc 1 1215 24 is_stmt 0 view .LVU764
 3272 00e2 1282      		std Z+2,__zero_reg__
 3273 00e4 00C0      		rjmp .L155
 3274               		.cfi_endproc
 3275               	.LFE179:
 3277               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3278               	.global	rgblight_effect_christmas
 3280               	rgblight_effect_christmas:
 3281               	.LVL218:
 3282               	.LFB180:
1245:quantum/rgblight.c ****     static int8_t increment = 1;
 3283               		.loc 1 1245 58 is_stmt 1 view -0
 3284               		.cfi_startproc
1245:quantum/rgblight.c ****     static int8_t increment = 1;
 3285               		.loc 1 1245 58 is_stmt 0 view .LVU766
 3286 0000 8F92      		push r8
 3287               	.LCFI66:
 3288               		.cfi_def_cfa_offset 3
 3289               		.cfi_offset 8, -2
 3290 0002 9F92      		push r9
 3291               	.LCFI67:
 3292               		.cfi_def_cfa_offset 4
 3293               		.cfi_offset 9, -3
 3294 0004 AF92      		push r10
 3295               	.LCFI68:
 3296               		.cfi_def_cfa_offset 5
 3297               		.cfi_offset 10, -4
 3298 0006 BF92      		push r11
 3299               	.LCFI69:
 3300               		.cfi_def_cfa_offset 6
 3301               		.cfi_offset 11, -5
 3302 0008 CF92      		push r12
 3303               	.LCFI70:
 3304               		.cfi_def_cfa_offset 7
 3305               		.cfi_offset 12, -6
 3306 000a DF92      		push r13
 3307               	.LCFI71:
 3308               		.cfi_def_cfa_offset 8
 3309               		.cfi_offset 13, -7
 3310 000c EF92      		push r14
 3311               	.LCFI72:
 3312               		.cfi_def_cfa_offset 9
 3313               		.cfi_offset 14, -8
 3314 000e FF92      		push r15
 3315               	.LCFI73:
 3316               		.cfi_def_cfa_offset 10
 3317               		.cfi_offset 15, -9
 3318 0010 0F93      		push r16
 3319               	.LCFI74:
 3320               		.cfi_def_cfa_offset 11
 3321               		.cfi_offset 16, -10
 3322 0012 1F93      		push r17
 3323               	.LCFI75:
 3324               		.cfi_def_cfa_offset 12
 3325               		.cfi_offset 17, -11
 3326 0014 CF93      		push r28
 3327               	.LCFI76:
 3328               		.cfi_def_cfa_offset 13
 3329               		.cfi_offset 28, -12
 3330 0016 DF93      		push r29
 3331               	.LCFI77:
 3332               		.cfi_def_cfa_offset 14
 3333               		.cfi_offset 29, -13
 3334               	/* prologue: function */
 3335               	/* frame size = 0 */
 3336               	/* stack size = 12 */
 3337               	.L__stack_usage = 12
 3338 0018 EC01      		movw r28,r24
1246:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
 3339               		.loc 1 1246 5 is_stmt 1 view .LVU767
1247:quantum/rgblight.c ****     const uint8_t hue_green = 85;
 3340               		.loc 1 1247 5 view .LVU768
 3341               	.LVL219:
1248:quantum/rgblight.c **** 
 3342               		.loc 1 1248 5 view .LVU769
1250:quantum/rgblight.c ****     uint8_t  hue, val;
 3343               		.loc 1 1250 5 view .LVU770
1251:quantum/rgblight.c ****     uint8_t  i;
 3344               		.loc 1 1251 5 view .LVU771
1252:quantum/rgblight.c **** 
 3345               		.loc 1 1252 5 view .LVU772
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3346               		.loc 1 1256 5 view .LVU773
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3347               		.loc 1 1256 11 is_stmt 0 view .LVU774
 3348 001a 4C81      		ldd r20,Y+4
 3349 001c 042F      		mov r16,r20
 3350 001e 10E0      		ldi r17,0
 3351 0020 9801      		movw r18,r16
 3352 0022 D801      		movw r26,r16
 3353 0024 0E94 0000 		call __umulhisi3
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3354               		.loc 1 1256 9 view .LVU775
 3355 0028 9B01      		movw r18,r22
 3356 002a AC01      		movw r20,r24
 3357 002c 0E94 0000 		call __muluhisi3
 3358 0030 4B01      		movw r8,r22
 3359 0032 5C01      		movw r10,r24
 3360               	.LVL220:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3361               		.loc 1 1257 5 is_stmt 1 view .LVU776
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3362               		.loc 1 1257 46 is_stmt 0 view .LVU777
 3363 0034 E0E2      		ldi r30,lo8(32)
 3364 0036 F0E0      		ldi r31,0
 3365 0038 E01B      		sub r30,r16
 3366 003a F10B      		sbc r31,r17
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3367               		.loc 1 1257 33 view .LVU778
 3368 003c A5E5      		ldi r26,lo8(85)
 3369 003e B0E0      		ldi r27,0
 3370 0040 AC01      		movw r20,r24
 3371 0042 9B01      		movw r18,r22
 3372 0044 0E94 0000 		call __muluhisi3
 3373 0048 6B01      		movw r12,r22
 3374 004a 7C01      		movw r14,r24
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3375               		.loc 1 1257 46 view .LVU779
 3376 004c 9F01      		movw r18,r30
 3377 004e DF01      		movw r26,r30
 3378 0050 0E94 0000 		call __mulhisi3
 3379 0054 9B01      		movw r18,r22
 3380 0056 AC01      		movw r20,r24
 3381 0058 0E94 0000 		call __mulshisi3
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3382               		.loc 1 1257 44 view .LVU780
 3383 005c 9B01      		movw r18,r22
 3384 005e AC01      		movw r20,r24
 3385 0060 280D      		add r18,r8
 3386 0062 391D      		adc r19,r9
 3387 0064 4A1D      		adc r20,r10
 3388 0066 5B1D      		adc r21,r11
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3389               		.loc 1 1257 38 view .LVU781
 3390 0068 C701      		movw r24,r14
 3391               	.LVL221:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3392               		.loc 1 1257 38 view .LVU782
 3393 006a B601      		movw r22,r12
 3394 006c 0E94 0000 		call __udivmodsi4
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3395               		.loc 1 1257 9 view .LVU783
 3396 0070 F22E      		mov r15,r18
 3397               	.LVL222:
1259:quantum/rgblight.c **** 
 3398               		.loc 1 1259 5 is_stmt 1 view .LVU784
 3399 0072 822F      		mov r24,r18
 3400 0074 90E0      		ldi r25,0
1259:quantum/rgblight.c **** 
 3401               		.loc 1 1259 9 is_stmt 0 view .LVU785
 3402 0076 39E2      		ldi r19,lo8(41)
 3403 0078 3F15      		cp r19,r15
 3404 007a 00F0      		brlo .L160
 3405               	.LVL223:
1259:quantum/rgblight.c **** 
 3406               		.loc 1 1259 20 discriminator 1 view .LVU786
 3407 007c 43E0      		ldi r20,lo8(3)
 3408 007e 249F      		mul r18,r20
 3409 0080 9001      		movw r18,r0
 3410 0082 1124      		clr __zero_reg__
 3411               	.L163:
1259:quantum/rgblight.c **** 
 3412               		.loc 1 1259 68 discriminator 2 view .LVU787
 3413 0084 3595      		asr r19
 3414 0086 2795      		ror r18
1259:quantum/rgblight.c **** 
 3415               		.loc 1 1259 9 discriminator 2 view .LVU788
 3416 0088 122F      		mov r17,r18
 3417 008a 1095      		com r17
 3418               	.LVL224:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3419               		.loc 1 1261 5 is_stmt 1 discriminator 2 view .LVU789
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3420               		.loc 1 1261 12 is_stmt 0 discriminator 2 view .LVU790
 3421 008c 00E0      		ldi r16,0
 3422               	.LBB117:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3423               		.loc 1 1262 17 discriminator 2 view .LVU791
 3424 008e 85E5      		ldi r24,lo8(85)
 3425 0090 E82E      		mov r14,r24
 3426 0092 EF18      		sub r14,r15
 3427               	.LVL225:
 3428               	.L164:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3429               		.loc 1 1262 17 discriminator 2 view .LVU792
 3430               	.LBE117:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3431               		.loc 1 1261 17 is_stmt 1 discriminator 2 view .LVU793
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3432               		.loc 1 1261 5 is_stmt 0 discriminator 2 view .LVU794
 3433 0094 8091 0000 		lds r24,rgblight_ranges+4
 3434 0098 0817      		cp r16,r24
 3435 009a 00F0      		brlo .L166
1265:quantum/rgblight.c **** 
 3436               		.loc 1 1265 5 is_stmt 1 view .LVU795
 3437 009c 0E94 0000 		call rgblight_set
 3438               	.LVL226:
1267:quantum/rgblight.c ****         increment = 1;
 3439               		.loc 1 1267 5 view .LVU796
1267:quantum/rgblight.c ****         increment = 1;
 3440               		.loc 1 1267 13 is_stmt 0 view .LVU797
 3441 00a0 9C81      		ldd r25,Y+4
1268:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
 3442               		.loc 1 1268 19 view .LVU798
 3443 00a2 81E0      		ldi r24,lo8(1)
1267:quantum/rgblight.c ****         increment = 1;
 3444               		.loc 1 1267 8 view .LVU799
 3445 00a4 9923      		tst r25
 3446 00a6 01F0      		breq .L170
1269:quantum/rgblight.c ****         increment = -1;
 3447               		.loc 1 1269 12 is_stmt 1 view .LVU800
1269:quantum/rgblight.c ****         increment = -1;
 3448               		.loc 1 1269 15 is_stmt 0 view .LVU801
 3449 00a8 9032      		cpi r25,lo8(32)
 3450 00aa 01F4      		brne .L168
1270:quantum/rgblight.c ****     }
 3451               		.loc 1 1270 9 is_stmt 1 view .LVU802
1270:quantum/rgblight.c ****     }
 3452               		.loc 1 1270 19 is_stmt 0 view .LVU803
 3453 00ac 8FEF      		ldi r24,lo8(-1)
 3454               	.L170:
 3455 00ae 8093 0000 		sts increment.3454,r24
 3456               	.L168:
1272:quantum/rgblight.c **** }
 3457               		.loc 1 1272 5 is_stmt 1 view .LVU804
1272:quantum/rgblight.c **** }
 3458               		.loc 1 1272 15 is_stmt 0 view .LVU805
 3459 00b2 8091 0000 		lds r24,increment.3454
 3460 00b6 890F      		add r24,r25
 3461 00b8 8C83      		std Y+4,r24
 3462               	/* epilogue start */
1273:quantum/rgblight.c **** #endif
 3463               		.loc 1 1273 1 view .LVU806
 3464 00ba DF91      		pop r29
 3465 00bc CF91      		pop r28
 3466 00be 1F91      		pop r17
 3467               	.LVL227:
1273:quantum/rgblight.c **** #endif
 3468               		.loc 1 1273 1 view .LVU807
 3469 00c0 0F91      		pop r16
 3470               	.LVL228:
1273:quantum/rgblight.c **** #endif
 3471               		.loc 1 1273 1 view .LVU808
 3472 00c2 FF90      		pop r15
 3473               	.LVL229:
1273:quantum/rgblight.c **** #endif
 3474               		.loc 1 1273 1 view .LVU809
 3475 00c4 EF90      		pop r14
 3476 00c6 DF90      		pop r13
 3477 00c8 CF90      		pop r12
 3478 00ca BF90      		pop r11
 3479 00cc AF90      		pop r10
 3480               	.LVL230:
1273:quantum/rgblight.c **** #endif
 3481               		.loc 1 1273 1 view .LVU810
 3482 00ce 9F90      		pop r9
 3483 00d0 8F90      		pop r8
 3484               	.LVL231:
1273:quantum/rgblight.c **** #endif
 3485               		.loc 1 1273 1 view .LVU811
 3486 00d2 0895      		ret
 3487               	.LVL232:
 3488               	.L160:
1259:quantum/rgblight.c **** 
 3489               		.loc 1 1259 61 discriminator 2 view .LVU812
 3490 00d4 25E5      		ldi r18,lo8(85)
 3491 00d6 30E0      		ldi r19,0
 3492 00d8 B901      		movw r22,r18
 3493 00da 681B      		sub r22,r24
 3494 00dc 790B      		sbc r23,r25
1259:quantum/rgblight.c **** 
 3495               		.loc 1 1259 20 discriminator 2 view .LVU813
 3496 00de 9B01      		movw r18,r22
 3497 00e0 220F      		lsl r18
 3498 00e2 331F      		rol r19
 3499 00e4 260F      		add r18,r22
 3500 00e6 371F      		adc r19,r23
1259:quantum/rgblight.c **** 
 3501               		.loc 1 1259 68 discriminator 2 view .LVU814
 3502 00e8 37FF      		sbrs r19,7
 3503 00ea 00C0      		rjmp .L163
 3504 00ec 2F5F      		subi r18,-1
 3505 00ee 3F4F      		sbci r19,-1
 3506 00f0 00C0      		rjmp .L163
 3507               	.LVL233:
 3508               	.L166:
 3509               	.LBB122:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3510               		.loc 1 1262 9 is_stmt 1 view .LVU815
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3511               		.loc 1 1262 17 is_stmt 0 view .LVU816
 3512 00f2 8E2D      		mov r24,r14
 3513 00f4 01FD      		sbrc r16,1
 3514               	.LBE122:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3515               		.loc 1 1257 9 view .LVU817
 3516 00f6 8F2D      		mov r24,r15
 3517               	.L165:
 3518               	.LVL234:
 3519               	.LBB123:
1263:quantum/rgblight.c ****     }
 3520               		.loc 1 1263 9 is_stmt 1 discriminator 4 view .LVU818
 3521               	.LBB118:
 3522               	.LBI118:
 154:quantum/rgblight.c **** 
 3523               		.loc 1 154 6 discriminator 4 view .LVU819
 3524               	.LBB119:
 154:quantum/rgblight.c **** 
 3525               		.loc 1 154 70 discriminator 4 view .LVU820
 3526               	.LBE119:
 3527               	.LBE118:
1263:quantum/rgblight.c ****     }
 3528               		.loc 1 1263 89 is_stmt 0 discriminator 4 view .LVU821
 3529 00f8 2091 0000 		lds r18,rgblight_ranges+2
1263:quantum/rgblight.c ****     }
 3530               		.loc 1 1263 72 discriminator 4 view .LVU822
 3531 00fc 622F      		mov r22,r18
 3532 00fe 600F      		add r22,r16
 3533 0100 7727      		clr r23
 3534 0102 771F      		rol r23
1263:quantum/rgblight.c ****     }
 3535               		.loc 1 1263 9 discriminator 4 view .LVU823
 3536 0104 9B01      		movw r18,r22
 3537 0106 220F      		lsl r18
 3538 0108 331F      		rol r19
 3539 010a 260F      		add r18,r22
 3540 010c 371F      		adc r19,r23
 3541 010e 2050      		subi r18,lo8(-(led))
 3542 0110 3040      		sbci r19,hi8(-(led))
 3543               	.LBB121:
 3544               	.LBB120:
 154:quantum/rgblight.c **** 
 3545               		.loc 1 154 70 discriminator 4 view .LVU824
 3546 0112 412F      		mov r20,r17
 3547 0114 6091 0000 		lds r22,rgblight_config+2
 3548 0118 0E94 0000 		call sethsv_raw
 3549               	.LVL235:
 154:quantum/rgblight.c **** 
 3550               		.loc 1 154 70 discriminator 4 view .LVU825
 3551               	.LBE120:
 3552               	.LBE121:
 3553               	.LBE123:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3554               		.loc 1 1261 54 is_stmt 1 discriminator 4 view .LVU826
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3555               		.loc 1 1261 55 is_stmt 0 discriminator 4 view .LVU827
 3556 011c 0F5F      		subi r16,lo8(-(1))
 3557               	.LVL236:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3558               		.loc 1 1261 55 discriminator 4 view .LVU828
 3559 011e 00C0      		rjmp .L164
 3560               		.cfi_endproc
 3561               	.LFE180:
 3563               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3564               	.global	rgblight_effect_alternating
 3566               	rgblight_effect_alternating:
 3567               	.LVL237:
 3568               	.LFB182:
1305:quantum/rgblight.c **** #endif
1306:quantum/rgblight.c **** 
1307:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1308:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3569               		.loc 1 1308 60 is_stmt 1 view -0
 3570               		.cfi_startproc
 3571               		.loc 1 1308 60 is_stmt 0 view .LVU830
 3572 0000 0F93      		push r16
 3573               	.LCFI78:
 3574               		.cfi_def_cfa_offset 3
 3575               		.cfi_offset 16, -2
 3576 0002 1F93      		push r17
 3577               	.LCFI79:
 3578               		.cfi_def_cfa_offset 4
 3579               		.cfi_offset 17, -3
 3580 0004 CF93      		push r28
 3581               	.LCFI80:
 3582               		.cfi_def_cfa_offset 5
 3583               		.cfi_offset 28, -4
 3584 0006 DF93      		push r29
 3585               	.LCFI81:
 3586               		.cfi_def_cfa_offset 6
 3587               		.cfi_offset 29, -5
 3588               	/* prologue: function */
 3589               	/* frame size = 0 */
 3590               	/* stack size = 4 */
 3591               	.L__stack_usage = 4
 3592 0008 EC01      		movw r28,r24
1309:quantum/rgblight.c ****     for (int i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3593               		.loc 1 1309 5 is_stmt 1 view .LVU831
 3594               	.LBB132:
 3595               		.loc 1 1309 10 view .LVU832
 3596               	.LVL238:
 3597               		.loc 1 1309 14 is_stmt 0 view .LVU833
 3598 000a 10E0      		ldi r17,0
 3599 000c 00E0      		ldi r16,0
 3600               	.LVL239:
 3601               	.L172:
 3602               		.loc 1 1309 21 is_stmt 1 discriminator 1 view .LVU834
 3603               		.loc 1 1309 40 is_stmt 0 discriminator 1 view .LVU835
 3604 000e 9091 0000 		lds r25,rgblight_ranges+4
 3605               		.loc 1 1309 5 discriminator 1 view .LVU836
 3606 0012 9017      		cp r25,r16
 3607 0014 1106      		cpc __zero_reg__,r17
 3608 0016 01F0      		breq .+2
 3609 0018 04F4      		brge .L176
 3610               	.LBE132:
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1311:quantum/rgblight.c ****         if (i < rgblight_ranges.effect_num_leds / 2 && anim->pos) {
1312:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1313:quantum/rgblight.c ****         } else if (i >= rgblight_ranges.effect_num_leds / 2 && !anim->pos) {
1314:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1315:quantum/rgblight.c ****         } else {
1316:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1317:quantum/rgblight.c ****         }
1318:quantum/rgblight.c ****     }
1319:quantum/rgblight.c ****     rgblight_set();
 3611               		.loc 1 1319 5 is_stmt 1 view .LVU837
 3612 001a 0E94 0000 		call rgblight_set
 3613               	.LVL240:
1320:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3614               		.loc 1 1320 5 view .LVU838
 3615               		.loc 1 1320 22 is_stmt 0 view .LVU839
 3616 001e 8C81      		ldd r24,Y+4
 3617 0020 90E0      		ldi r25,0
 3618               		.loc 1 1320 28 view .LVU840
 3619 0022 0196      		adiw r24,1
 3620               		.loc 1 1320 33 view .LVU841
 3621 0024 8170      		andi r24,1
 3622 0026 9927      		clr r25
 3623               		.loc 1 1320 15 view .LVU842
 3624 0028 8C83      		std Y+4,r24
 3625               	/* epilogue start */
1321:quantum/rgblight.c **** }
 3626               		.loc 1 1321 1 view .LVU843
 3627 002a DF91      		pop r29
 3628 002c CF91      		pop r28
 3629               	.LVL241:
 3630               		.loc 1 1321 1 view .LVU844
 3631 002e 1F91      		pop r17
 3632 0030 0F91      		pop r16
 3633               	.LVL242:
 3634               		.loc 1 1321 1 view .LVU845
 3635 0032 0895      		ret
 3636               	.LVL243:
 3637               	.L176:
 3638               	.LBB141:
 3639               	.LBB133:
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3640               		.loc 1 1310 9 is_stmt 1 view .LVU846
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3641               		.loc 1 1310 34 is_stmt 0 view .LVU847
 3642 0034 2091 0000 		lds r18,rgblight_ranges+2
 3643 0038 A801      		movw r20,r16
 3644 003a 420F      		add r20,r18
 3645 003c 511D      		adc r21,__zero_reg__
 3646 003e 9A01      		movw r18,r20
 3647 0040 220F      		lsl r18
 3648 0042 331F      		rol r19
 3649 0044 240F      		add r18,r20
 3650 0046 351F      		adc r19,r21
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3651               		.loc 1 1310 19 view .LVU848
 3652 0048 2050      		subi r18,lo8(-(led))
 3653 004a 3040      		sbci r19,hi8(-(led))
 3654               	.LVL244:
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3655               		.loc 1 1311 9 is_stmt 1 view .LVU849
 3656 004c 4C81      		ldd r20,Y+4
 3657 004e 6091 0000 		lds r22,rgblight_config+2
 3658 0052 8091 0000 		lds r24,rgblight_config+1
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3659               		.loc 1 1311 49 is_stmt 0 view .LVU850
 3660 0056 9695      		lsr r25
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3661               		.loc 1 1311 12 view .LVU851
 3662 0058 9017      		cp r25,r16
 3663 005a 1106      		cpc __zero_reg__,r17
 3664 005c 01F0      		breq .L173
 3665 005e 04F0      		brlt .L173
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3666               		.loc 1 1311 53 discriminator 1 view .LVU852
 3667 0060 4423      		tst r20
 3668 0062 01F0      		breq .L174
 3669               	.L181:
1314:quantum/rgblight.c ****         } else {
 3670               		.loc 1 1314 13 is_stmt 1 view .LVU853
 3671               	.LVL245:
 3672               	.LBB134:
 3673               	.LBI134:
 154:quantum/rgblight.c **** 
 3674               		.loc 1 154 6 view .LVU854
 3675               	.LBB135:
 154:quantum/rgblight.c **** 
 3676               		.loc 1 154 70 view .LVU855
 3677 0064 4091 0000 		lds r20,rgblight_config+3
 3678               	.LVL246:
 3679               	.L180:
 154:quantum/rgblight.c **** 
 3680               		.loc 1 154 70 is_stmt 0 view .LVU856
 3681               	.LBE135:
 3682               	.LBE134:
 3683               	.LBB136:
 3684               	.LBB137:
 3685 0068 0E94 0000 		call sethsv_raw
 3686               	.LVL247:
 154:quantum/rgblight.c **** 
 3687               		.loc 1 154 70 view .LVU857
 3688               	.LBE137:
 3689               	.LBE136:
 3690               	.LBE133:
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3691               		.loc 1 1309 58 is_stmt 1 view .LVU858
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3692               		.loc 1 1309 59 is_stmt 0 view .LVU859
 3693 006c 0F5F      		subi r16,-1
 3694 006e 1F4F      		sbci r17,-1
 3695               	.LVL248:
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3696               		.loc 1 1309 59 view .LVU860
 3697 0070 00C0      		rjmp .L172
 3698               	.LVL249:
 3699               	.L173:
 3700               	.LBB140:
1313:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3701               		.loc 1 1313 16 is_stmt 1 discriminator 1 view .LVU861
1313:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3702               		.loc 1 1313 61 is_stmt 0 discriminator 1 view .LVU862
 3703 0072 4423      		tst r20
 3704 0074 01F0      		breq .L181
 3705               	.L174:
1316:quantum/rgblight.c ****         }
 3706               		.loc 1 1316 13 is_stmt 1 view .LVU863
 3707               	.LVL250:
 3708               	.LBB139:
 3709               	.LBI136:
 154:quantum/rgblight.c **** 
 3710               		.loc 1 154 6 view .LVU864
 3711               	.LBB138:
 154:quantum/rgblight.c **** 
 3712               		.loc 1 154 70 view .LVU865
 3713 0076 40E0      		ldi r20,0
 3714 0078 00C0      		rjmp .L180
 3715               	.LBE138:
 3716               	.LBE139:
 3717               	.LBE140:
 3718               	.LBE141:
 3719               		.cfi_endproc
 3720               	.LFE182:
 3722               		.section	.text.rgblight_effect_twinkle,"ax",@progbits
 3723               	.global	rgblight_effect_twinkle
 3725               	rgblight_effect_twinkle:
 3726               	.LVL251:
 3727               	.LFB183:
1322:quantum/rgblight.c **** #endif
1323:quantum/rgblight.c **** 
1324:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_TWINKLE
1325:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_TWINKLE_INTERVALS[] PROGMEM = {30, 15, 5};
1326:quantum/rgblight.c **** 
1327:quantum/rgblight.c **** typedef struct PACKED {
1328:quantum/rgblight.c ****     HSV     hsv;
1329:quantum/rgblight.c ****     uint8_t life;
1330:quantum/rgblight.c ****     uint8_t max_life;
1331:quantum/rgblight.c **** } TwinkleState;
1332:quantum/rgblight.c **** 
1333:quantum/rgblight.c **** static TwinkleState led_twinkle_state[RGBLED_NUM];
1334:quantum/rgblight.c **** 
1335:quantum/rgblight.c **** void rgblight_effect_twinkle(animation_status_t *anim) {
 3728               		.loc 1 1335 56 view -0
 3729               		.cfi_startproc
 3730               		.loc 1 1335 56 is_stmt 0 view .LVU867
 3731 0000 4F92      		push r4
 3732               	.LCFI82:
 3733               		.cfi_def_cfa_offset 3
 3734               		.cfi_offset 4, -2
 3735 0002 5F92      		push r5
 3736               	.LCFI83:
 3737               		.cfi_def_cfa_offset 4
 3738               		.cfi_offset 5, -3
 3739 0004 6F92      		push r6
 3740               	.LCFI84:
 3741               		.cfi_def_cfa_offset 5
 3742               		.cfi_offset 6, -4
 3743 0006 7F92      		push r7
 3744               	.LCFI85:
 3745               		.cfi_def_cfa_offset 6
 3746               		.cfi_offset 7, -5
 3747 0008 8F92      		push r8
 3748               	.LCFI86:
 3749               		.cfi_def_cfa_offset 7
 3750               		.cfi_offset 8, -6
 3751 000a 9F92      		push r9
 3752               	.LCFI87:
 3753               		.cfi_def_cfa_offset 8
 3754               		.cfi_offset 9, -7
 3755 000c AF92      		push r10
 3756               	.LCFI88:
 3757               		.cfi_def_cfa_offset 9
 3758               		.cfi_offset 10, -8
 3759 000e BF92      		push r11
 3760               	.LCFI89:
 3761               		.cfi_def_cfa_offset 10
 3762               		.cfi_offset 11, -9
 3763 0010 CF92      		push r12
 3764               	.LCFI90:
 3765               		.cfi_def_cfa_offset 11
 3766               		.cfi_offset 12, -10
 3767 0012 DF92      		push r13
 3768               	.LCFI91:
 3769               		.cfi_def_cfa_offset 12
 3770               		.cfi_offset 13, -11
 3771 0014 EF92      		push r14
 3772               	.LCFI92:
 3773               		.cfi_def_cfa_offset 13
 3774               		.cfi_offset 14, -12
 3775 0016 FF92      		push r15
 3776               	.LCFI93:
 3777               		.cfi_def_cfa_offset 14
 3778               		.cfi_offset 15, -13
 3779 0018 0F93      		push r16
 3780               	.LCFI94:
 3781               		.cfi_def_cfa_offset 15
 3782               		.cfi_offset 16, -14
 3783 001a 1F93      		push r17
 3784               	.LCFI95:
 3785               		.cfi_def_cfa_offset 16
 3786               		.cfi_offset 17, -15
 3787 001c CF93      		push r28
 3788               	.LCFI96:
 3789               		.cfi_def_cfa_offset 17
 3790               		.cfi_offset 28, -16
 3791 001e DF93      		push r29
 3792               	.LCFI97:
 3793               		.cfi_def_cfa_offset 18
 3794               		.cfi_offset 29, -17
 3795               	/* prologue: function */
 3796               	/* frame size = 0 */
 3797               	/* stack size = 16 */
 3798               	.L__stack_usage = 16
 3799 0020 FC01      		movw r30,r24
1336:quantum/rgblight.c ****     const bool random_color = anim->delta / 3;
 3800               		.loc 1 1336 5 is_stmt 1 view .LVU868
 3801               		.loc 1 1336 35 is_stmt 0 view .LVU869
 3802 0022 6280      		ldd r6,Z+2
 3803               	.LVL252:
1337:quantum/rgblight.c ****     const bool restart      = anim->pos == 0;
 3804               		.loc 1 1337 5 is_stmt 1 view .LVU870
 3805               		.loc 1 1337 35 is_stmt 0 view .LVU871
 3806 0024 4480      		ldd r4,Z+4
 3807               	.LVL253:
1338:quantum/rgblight.c ****     anim->pos               = 1;
 3808               		.loc 1 1338 5 is_stmt 1 view .LVU872
 3809               		.loc 1 1338 29 is_stmt 0 view .LVU873
 3810 0026 81E0      		ldi r24,lo8(1)
 3811               	.LVL254:
 3812               		.loc 1 1338 29 view .LVU874
 3813 0028 8483      		std Z+4,r24
1339:quantum/rgblight.c **** 
1340:quantum/rgblight.c ****     const uint8_t bottom = breathe_calc(0);
 3814               		.loc 1 1340 5 is_stmt 1 view .LVU875
 3815               	.LVL255:
 3816               	.LBB164:
 3817               	.LBI164:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3818               		.loc 1 1056 16 view .LVU876
 3819               	.LBE164:
1059:quantum/rgblight.c **** #    else
 3820               		.loc 1 1059 5 view .LVU877
 3821               	.LBB166:
 3822               	.LBB165:
1059:quantum/rgblight.c **** #    else
 3823               		.loc 1 1059 12 view .LVU878
1059:quantum/rgblight.c **** #    else
 3824               		.loc 1 1059 12 view .LVU879
1059:quantum/rgblight.c **** #    else
 3825               		.loc 1 1059 12 view .LVU880
 3826 002a E0E0      		ldi r30,lo8(rgblight_effect_breathe_table)
 3827 002c F0E0      		ldi r31,hi8(rgblight_effect_breathe_table)
 3828               	.LVL256:
1059:quantum/rgblight.c **** #    else
 3829               		.loc 1 1059 12 is_stmt 0 view .LVU881
 3830               	/* #APP */
 3831               	 ;  1059 "quantum/rgblight.c" 1
 3832 002e 7490      		lpm r7, Z
 3833               		
 3834               	 ;  0 "" 2
 3835               	.LVL257:
1059:quantum/rgblight.c **** #    else
 3836               		.loc 1 1059 12 is_stmt 1 view .LVU882
1059:quantum/rgblight.c **** #    else
 3837               		.loc 1 1059 12 is_stmt 0 view .LVU883
 3838               	/* #NOAPP */
 3839               	.LBE165:
 3840               	.LBE166:
1341:quantum/rgblight.c ****     const uint8_t top    = breathe_calc(127);
 3841               		.loc 1 1341 5 is_stmt 1 view .LVU884
 3842               	.LBB167:
 3843               	.LBI167:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3844               		.loc 1 1056 16 view .LVU885
 3845               	.LBE167:
1059:quantum/rgblight.c **** #    else
 3846               		.loc 1 1059 5 view .LVU886
 3847               	.LBB169:
 3848               	.LBB168:
1059:quantum/rgblight.c **** #    else
 3849               		.loc 1 1059 12 view .LVU887
1059:quantum/rgblight.c **** #    else
 3850               		.loc 1 1059 12 view .LVU888
1059:quantum/rgblight.c **** #    else
 3851               		.loc 1 1059 12 view .LVU889
 3852 0030 E0E0      		ldi r30,lo8(rgblight_effect_breathe_table+127)
 3853 0032 F0E0      		ldi r31,hi8(rgblight_effect_breathe_table+127)
 3854               	.LVL258:
1059:quantum/rgblight.c **** #    else
 3855               		.loc 1 1059 12 is_stmt 0 view .LVU890
 3856               	/* #APP */
 3857               	 ;  1059 "quantum/rgblight.c" 1
 3858 0034 E491      		lpm r30, Z
 3859               		
 3860               	 ;  0 "" 2
 3861               	.LVL259:
1059:quantum/rgblight.c **** #    else
 3862               		.loc 1 1059 12 is_stmt 1 view .LVU891
1059:quantum/rgblight.c **** #    else
 3863               		.loc 1 1059 12 is_stmt 0 view .LVU892
 3864               	/* #NOAPP */
 3865               	.LBE168:
 3866               	.LBE169:
1342:quantum/rgblight.c **** 
1343:quantum/rgblight.c ****     uint8_t frac(uint8_t n, uint8_t d) { return (uint16_t)255 * n / d; }
 3867               		.loc 1 1343 5 is_stmt 1 view .LVU893
1344:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3868               		.loc 1 1344 5 view .LVU894
1345:quantum/rgblight.c **** 
1346:quantum/rgblight.c ****     for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3869               		.loc 1 1346 5 view .LVU895
 3870               	.LBB170:
 3871               		.loc 1 1346 10 view .LVU896
 3872               		.loc 1 1346 18 is_stmt 0 view .LVU897
 3873 0036 812C      		mov r8,__zero_reg__
 3874               	.LBB171:
1347:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
1348:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
1349:quantum/rgblight.c **** 
1350:quantum/rgblight.c ****         if (!random_color) {
1351:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3875               		.loc 1 1351 18 view .LVU898
 3876 0038 75E0      		ldi r23,lo8(5)
 3877 003a 972E      		mov r9,r23
 3878               	.LBB172:
 3879               	.LBB173:
1344:quantum/rgblight.c **** 
 3880               		.loc 1 1344 58 view .LVU899
 3881 003c F2E0      		ldi r31,lo8(2)
 3882 003e CF2E      		mov r12,r31
 3883 0040 DD24      		clr r13
 3884 0042 D394      		inc r13
 3885               	.LBE173:
 3886               	.LBE172:
1352:quantum/rgblight.c ****             c->s = rgblight_config.sat;
1353:quantum/rgblight.c ****         }
1354:quantum/rgblight.c **** 
1355:quantum/rgblight.c ****         if (restart) {
1356:quantum/rgblight.c ****             // Restart
1357:quantum/rgblight.c ****             t->life = 0;
1358:quantum/rgblight.c ****             c->v    = 0;
1359:quantum/rgblight.c ****         } else if (t->life) {
1360:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
1361:quantum/rgblight.c ****             t->life--;
1362:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
1363:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
1364:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
1365:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
1366:quantum/rgblight.c ****             if (random_color) {
1367:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 3887               		.loc 1 1367 31 view .LVU900
 3888 0044 AA24      		clr r10
 3889 0046 AA94      		dec r10
 3890 0048 B12C      		mov r11,__zero_reg__
 3891               	.LBB176:
 3892               	.LBB177:
 3893               	.LBB178:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3894               		.loc 1 1343 63 view .LVU901
 3895 004a 5524      		clr r5
 3896 004c 5A94      		dec r5
 3897               	.LBE178:
 3898               	.LBE177:
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 3899               		.loc 1 1362 32 view .LVU902
 3900 004e E719      		sub r30,r7
 3901               	.LBB181:
 3902               	.LBB182:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3903               		.loc 1 1343 67 view .LVU903
 3904 0050 0E2F      		mov r16,r30
 3905 0052 10E0      		ldi r17,0
 3906               	.LVL260:
 3907               	.L183:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3908               		.loc 1 1343 67 view .LVU904
 3909               	.LBE182:
 3910               	.LBE181:
 3911               	.LBE176:
 3912               	.LBE171:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3913               		.loc 1 1346 25 is_stmt 1 discriminator 1 view .LVU905
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3914               		.loc 1 1346 5 is_stmt 0 discriminator 1 view .LVU906
 3915 0054 8091 0000 		lds r24,rgblight_ranges+4
 3916 0058 8816      		cp r8,r24
 3917 005a 00F0      		brlo .L191
 3918               	.LBE170:
1368:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
1369:quantum/rgblight.c ****             }
1370:quantum/rgblight.c ****             c->v        = 0;
1371:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
1372:quantum/rgblight.c ****             t->life     = t->max_life;
1373:quantum/rgblight.c ****         } else {
1374:quantum/rgblight.c ****             // This LED is off, and was NOT selected to start brightening
1375:quantum/rgblight.c ****         }
1376:quantum/rgblight.c **** 
1377:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1378:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
1379:quantum/rgblight.c ****     }
1380:quantum/rgblight.c **** 
1381:quantum/rgblight.c ****     rgblight_set();
 3919               		.loc 1 1381 5 is_stmt 1 view .LVU907
 3920               	/* epilogue start */
1382:quantum/rgblight.c **** }
 3921               		.loc 1 1382 1 is_stmt 0 view .LVU908
 3922 005c DF91      		pop r29
 3923 005e CF91      		pop r28
 3924 0060 1F91      		pop r17
 3925 0062 0F91      		pop r16
 3926 0064 FF90      		pop r15
 3927 0066 EF90      		pop r14
 3928 0068 DF90      		pop r13
 3929 006a CF90      		pop r12
 3930 006c BF90      		pop r11
 3931 006e AF90      		pop r10
 3932 0070 9F90      		pop r9
 3933 0072 8F90      		pop r8
 3934               	.LVL261:
 3935               		.loc 1 1382 1 view .LVU909
 3936 0074 7F90      		pop r7
 3937               	.LVL262:
 3938               		.loc 1 1382 1 view .LVU910
 3939 0076 6F90      		pop r6
 3940               	.LVL263:
 3941               		.loc 1 1382 1 view .LVU911
 3942 0078 5F90      		pop r5
 3943 007a 4F90      		pop r4
 3944               	.LVL264:
1381:quantum/rgblight.c **** }
 3945               		.loc 1 1381 5 view .LVU912
 3946 007c 0C94 0000 		jmp rgblight_set
 3947               	.LVL265:
 3948               	.L191:
 3949               	.LBB209:
 3950               	.LBB206:
1347:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3951               		.loc 1 1347 9 is_stmt 1 view .LVU913
1347:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3952               		.loc 1 1347 46 is_stmt 0 view .LVU914
 3953 0080 E82C      		mov r14,r8
 3954 0082 F12C      		mov r15,__zero_reg__
 3955               	.LVL266:
1348:quantum/rgblight.c **** 
 3956               		.loc 1 1348 9 is_stmt 1 view .LVU915
1350:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3957               		.loc 1 1350 9 view .LVU916
1350:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3958               		.loc 1 1350 12 is_stmt 0 view .LVU917
 3959 0084 82E0      		ldi r24,lo8(2)
 3960 0086 8615      		cp r24,r6
 3961 0088 00F0      		brlo .L184
1351:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3962               		.loc 1 1351 13 is_stmt 1 view .LVU918
1351:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3963               		.loc 1 1351 18 is_stmt 0 view .LVU919
 3964 008a 9E9C      		mul r9,r14
 3965 008c F001      		movw r30,r0
 3966 008e 9F9C      		mul r9,r15
 3967 0090 F00D      		add r31,r0
 3968 0092 1124      		clr __zero_reg__
 3969 0094 E050      		subi r30,lo8(-(led_twinkle_state))
 3970 0096 F040      		sbci r31,hi8(-(led_twinkle_state))
 3971 0098 8091 0000 		lds r24,rgblight_config+1
 3972 009c 8083      		st Z,r24
1352:quantum/rgblight.c ****         }
 3973               		.loc 1 1352 13 is_stmt 1 view .LVU920
1352:quantum/rgblight.c ****         }
 3974               		.loc 1 1352 18 is_stmt 0 view .LVU921
 3975 009e 8091 0000 		lds r24,rgblight_config+2
 3976 00a2 8183      		std Z+1,r24
 3977               	.L184:
1355:quantum/rgblight.c ****             // Restart
 3978               		.loc 1 1355 9 is_stmt 1 view .LVU922
1355:quantum/rgblight.c ****             // Restart
 3979               		.loc 1 1355 12 is_stmt 0 view .LVU923
 3980 00a4 4110      		cpse r4,__zero_reg__
 3981 00a6 00C0      		rjmp .L185
1357:quantum/rgblight.c ****             c->v    = 0;
 3982               		.loc 1 1357 13 is_stmt 1 view .LVU924
1357:quantum/rgblight.c ****             c->v    = 0;
 3983               		.loc 1 1357 21 is_stmt 0 view .LVU925
 3984 00a8 9E9C      		mul r9,r14
 3985 00aa F001      		movw r30,r0
 3986 00ac 9F9C      		mul r9,r15
 3987 00ae F00D      		add r31,r0
 3988 00b0 1124      		clr __zero_reg__
 3989 00b2 E050      		subi r30,lo8(-(led_twinkle_state))
 3990 00b4 F040      		sbci r31,hi8(-(led_twinkle_state))
 3991 00b6 1382      		std Z+3,__zero_reg__
1358:quantum/rgblight.c ****         } else if (t->life) {
 3992               		.loc 1 1358 13 is_stmt 1 view .LVU926
1358:quantum/rgblight.c ****         } else if (t->life) {
 3993               		.loc 1 1358 21 is_stmt 0 view .LVU927
 3994 00b8 1282      		std Z+2,__zero_reg__
 3995               	.L186:
1375:quantum/rgblight.c **** 
 3996               		.loc 1 1375 9 is_stmt 1 discriminator 2 view .LVU928
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 3997               		.loc 1 1377 9 discriminator 2 view .LVU929
 3998               	.LVL267:
1378:quantum/rgblight.c ****     }
 3999               		.loc 1 1378 9 discriminator 2 view .LVU930
 4000               	.LBB198:
 4001               	.LBI198:
 154:quantum/rgblight.c **** 
 4002               		.loc 1 154 6 discriminator 2 view .LVU931
 4003               	.LBB199:
 154:quantum/rgblight.c **** 
 4004               		.loc 1 154 70 discriminator 2 view .LVU932
 4005               	.LBE199:
 4006               	.LBE198:
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4007               		.loc 1 1377 34 is_stmt 0 discriminator 2 view .LVU933
 4008 00ba 2091 0000 		lds r18,rgblight_ranges+2
 4009 00be C701      		movw r24,r14
 4010 00c0 820F      		add r24,r18
 4011 00c2 911D      		adc r25,__zero_reg__
 4012 00c4 9C01      		movw r18,r24
 4013 00c6 220F      		lsl r18
 4014 00c8 331F      		rol r19
 4015 00ca 280F      		add r18,r24
 4016 00cc 391F      		adc r19,r25
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4017               		.loc 1 1377 19 discriminator 2 view .LVU934
 4018 00ce 2050      		subi r18,lo8(-(led))
 4019 00d0 3040      		sbci r19,hi8(-(led))
1378:quantum/rgblight.c ****     }
 4020               		.loc 1 1378 9 discriminator 2 view .LVU935
 4021 00d2 9E9C      		mul r9,r14
 4022 00d4 F001      		movw r30,r0
 4023 00d6 9F9C      		mul r9,r15
 4024 00d8 F00D      		add r31,r0
 4025 00da 1124      		clr __zero_reg__
 4026 00dc E050      		subi r30,lo8(-(led_twinkle_state))
 4027 00de F040      		sbci r31,hi8(-(led_twinkle_state))
 4028               	.LBB201:
 4029               	.LBB200:
 154:quantum/rgblight.c **** 
 4030               		.loc 1 154 70 discriminator 2 view .LVU936
 4031 00e0 4281      		ldd r20,Z+2
 4032 00e2 6181      		ldd r22,Z+1
 4033 00e4 8081      		ld r24,Z
 4034 00e6 0E94 0000 		call sethsv_raw
 4035               	.LVL268:
 154:quantum/rgblight.c **** 
 4036               		.loc 1 154 70 discriminator 2 view .LVU937
 4037               	.LBE200:
 4038               	.LBE201:
 4039               	.LBE206:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4040               		.loc 1 1346 62 is_stmt 1 discriminator 2 view .LVU938
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4041               		.loc 1 1346 63 is_stmt 0 discriminator 2 view .LVU939
 4042 00ea 8394      		inc r8
 4043               	.LVL269:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4044               		.loc 1 1346 63 discriminator 2 view .LVU940
 4045 00ec 00C0      		rjmp .L183
 4046               	.L185:
 4047               	.LBB207:
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4048               		.loc 1 1359 16 is_stmt 1 view .LVU941
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4049               		.loc 1 1359 21 is_stmt 0 view .LVU942
 4050 00ee 9E9C      		mul r9,r14
 4051 00f0 E001      		movw r28,r0
 4052 00f2 9F9C      		mul r9,r15
 4053 00f4 D00D      		add r29,r0
 4054 00f6 1124      		clr __zero_reg__
 4055 00f8 C050      		subi r28,lo8(-(led_twinkle_state))
 4056 00fa D040      		sbci r29,hi8(-(led_twinkle_state))
 4057 00fc 8B81      		ldd r24,Y+3
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4058               		.loc 1 1359 19 view .LVU943
 4059 00fe 8823      		tst r24
 4060 0100 01F0      		breq .L187
 4061               	.LBB202:
1361:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4062               		.loc 1 1361 13 is_stmt 1 view .LVU944
1361:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4063               		.loc 1 1361 20 is_stmt 0 view .LVU945
 4064 0102 8150      		subi r24,lo8(-(-1))
 4065 0104 8B83      		std Y+3,r24
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4066               		.loc 1 1362 13 is_stmt 1 view .LVU946
 4067               	.LVL270:
 4068               	.LBB185:
 4069               	.LBI177:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4070               		.loc 1 1343 13 view .LVU947
 4071               	.LBB179:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4072               		.loc 1 1343 42 view .LVU948
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4073               		.loc 1 1343 42 is_stmt 0 view .LVU949
 4074               	.LBE179:
 4075               	.LBE185:
 4076               	.LBB186:
 4077               	.LBI186:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 4078               		.loc 1 1056 16 is_stmt 1 view .LVU950
 4079               	.LBE186:
 4080               	.LBE202:
 4081               	.LBE207:
 4082               	.LBE209:
1059:quantum/rgblight.c **** #    else
 4083               		.loc 1 1059 5 view .LVU951
 4084               	.LBB210:
 4085               	.LBB208:
 4086               	.LBB203:
 4087               	.LBB189:
 4088               	.LBB187:
1059:quantum/rgblight.c **** #    else
 4089               		.loc 1 1059 12 view .LVU952
1059:quantum/rgblight.c **** #    else
 4090               		.loc 1 1059 12 view .LVU953
1059:quantum/rgblight.c **** #    else
 4091               		.loc 1 1059 12 view .LVU954
 4092               	.LBE187:
 4093               	.LBE189:
 4094               	.LBB190:
 4095               	.LBB180:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4096               		.loc 1 1343 63 is_stmt 0 view .LVU955
 4097 0106 859D      		mul r24,r5
 4098 0108 C001      		movw r24,r0
 4099 010a 1124      		clr __zero_reg__
 4100               	.LVL271:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4101               		.loc 1 1343 67 view .LVU956
 4102 010c 6C81      		ldd r22,Y+4
 4103 010e 70E0      		ldi r23,0
 4104 0110 0E94 0000 		call __udivmodhi4
 4105               	.LBE180:
 4106               	.LBE190:
 4107               	.LBB191:
 4108               	.LBB188:
1059:quantum/rgblight.c **** #    else
 4109               		.loc 1 1059 12 view .LVU957
 4110 0114 FB01      		movw r30,r22
 4111 0116 FF27      		clr r31
 4112 0118 E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 4113 011a F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 4114               	/* #APP */
 4115               	 ;  1059 "quantum/rgblight.c" 1
 4116 011c 8491      		lpm r24, Z
 4117               		
 4118               	 ;  0 "" 2
 4119               	.LVL272:
1059:quantum/rgblight.c **** #    else
 4120               		.loc 1 1059 12 is_stmt 1 view .LVU958
1059:quantum/rgblight.c **** #    else
 4121               		.loc 1 1059 12 is_stmt 0 view .LVU959
 4122               	/* #NOAPP */
 4123               	.LBE188:
 4124               	.LBE191:
 4125               	.LBB192:
 4126               	.LBI181:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4127               		.loc 1 1343 13 is_stmt 1 view .LVU960
 4128               	.LBB183:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4129               		.loc 1 1343 42 view .LVU961
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4130               		.loc 1 1343 42 is_stmt 0 view .LVU962
 4131               	.LBE183:
 4132               	.LBE192:
1363:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4133               		.loc 1 1363 13 is_stmt 1 view .LVU963
 4134               	.LBB193:
 4135               	.LBI193:
1344:quantum/rgblight.c **** 
 4136               		.loc 1 1344 13 view .LVU964
 4137               	.LBB194:
1344:quantum/rgblight.c **** 
 4138               		.loc 1 1344 48 view .LVU965
1344:quantum/rgblight.c **** 
 4139               		.loc 1 1344 48 is_stmt 0 view .LVU966
 4140               	.LBE194:
 4141               	.LBE193:
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4142               		.loc 1 1362 32 view .LVU967
 4143 011e E82F      		mov r30,r24
 4144 0120 E719      		sub r30,r7
 4145               	.LBB196:
 4146               	.LBB184:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4147               		.loc 1 1343 63 view .LVU968
 4148 0122 E59D      		mul r30,r5
 4149 0124 C001      		movw r24,r0
 4150 0126 1124      		clr __zero_reg__
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4151               		.loc 1 1343 67 view .LVU969
 4152 0128 B801      		movw r22,r16
 4153 012a 0E94 0000 		call __udivmodhi4
 4154               	.LBE184:
 4155               	.LBE196:
1363:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4156               		.loc 1 1363 32 view .LVU970
 4157 012e 8091 0000 		lds r24,rgblight_config+3
 4158               	.LBB197:
 4159               	.LBB195:
1344:quantum/rgblight.c **** 
 4160               		.loc 1 1344 58 view .LVU971
 4161 0132 689F      		mul r22,r24
 4162 0134 B001      		movw r22,r0
 4163 0136 1124      		clr __zero_reg__
1344:quantum/rgblight.c **** 
 4164               		.loc 1 1344 67 view .LVU972
 4165 0138 7A83      		std Y+2,r23
 4166               	.LBE195:
 4167               	.LBE197:
 4168               	.LBE203:
 4169 013a 00C0      		rjmp .L186
 4170               	.L187:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4171               		.loc 1 1364 16 is_stmt 1 view .LVU973
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4172               		.loc 1 1364 20 is_stmt 0 view .LVU974
 4173 013c 0E94 0000 		call rand
 4174               	.LVL273:
 4175               	.LBB204:
 4176               	.LBI172:
1344:quantum/rgblight.c **** 
 4177               		.loc 1 1344 13 is_stmt 1 view .LVU975
 4178               	.LBB174:
1344:quantum/rgblight.c **** 
 4179               		.loc 1 1344 48 view .LVU976
1344:quantum/rgblight.c **** 
 4180               		.loc 1 1344 48 is_stmt 0 view .LVU977
 4181               	.LBE174:
 4182               	.LBE204:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4183               		.loc 1 1364 29 view .LVU978
 4184 0140 2091 0000 		lds r18,rgblight_config+3
 4185 0144 2695      		lsr r18
 4186 0146 2158      		subi r18,lo8(-(127))
 4187               	.LBB205:
 4188               	.LBB175:
1344:quantum/rgblight.c **** 
 4189               		.loc 1 1344 58 view .LVU979
 4190 0148 2C9D      		mul r18,r12
 4191 014a A001      		movw r20,r0
 4192 014c 2D9D      		mul r18,r13
 4193 014e 500D      		add r21,r0
 4194 0150 1124      		clr __zero_reg__
1344:quantum/rgblight.c **** 
 4195               		.loc 1 1344 67 view .LVU980
 4196 0152 452F      		mov r20,r21
 4197 0154 5527      		clr r21
 4198               	.LBE175:
 4199               	.LBE205:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4200               		.loc 1 1364 19 view .LVU981
 4201 0156 8417      		cp r24,r20
 4202 0158 9507      		cpc r25,r21
 4203 015a 04F0      		brlt .+2
 4204 015c 00C0      		rjmp .L186
1366:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4205               		.loc 1 1366 13 is_stmt 1 view .LVU982
1366:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4206               		.loc 1 1366 16 is_stmt 0 view .LVU983
 4207 015e 82E0      		ldi r24,lo8(2)
 4208 0160 8615      		cp r24,r6
 4209 0162 00F4      		brsh .L188
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4210               		.loc 1 1367 17 is_stmt 1 view .LVU984
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4211               		.loc 1 1367 24 is_stmt 0 view .LVU985
 4212 0164 0E94 0000 		call rand
 4213               	.LVL274:
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4214               		.loc 1 1367 31 view .LVU986
 4215 0168 B501      		movw r22,r10
 4216 016a 0E94 0000 		call __divmodhi4
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4217               		.loc 1 1367 22 view .LVU987
 4218 016e 8883      		st Y,r24
1368:quantum/rgblight.c ****             }
 4219               		.loc 1 1368 17 is_stmt 1 view .LVU988
1368:quantum/rgblight.c ****             }
 4220               		.loc 1 1368 25 is_stmt 0 view .LVU989
 4221 0170 0E94 0000 		call rand
 4222               	.LVL275:
1368:quantum/rgblight.c ****             }
 4223               		.loc 1 1368 55 view .LVU990
 4224 0174 2091 0000 		lds r18,rgblight_config+2
 4225 0178 2695      		lsr r18
 4226 017a 622F      		mov r22,r18
 4227 017c 70E0      		ldi r23,0
1368:quantum/rgblight.c ****             }
 4228               		.loc 1 1368 32 view .LVU991
 4229 017e 0E94 0000 		call __divmodhi4
1368:quantum/rgblight.c ****             }
 4230               		.loc 1 1368 61 view .LVU992
 4231 0182 280F      		add r18,r24
1368:quantum/rgblight.c ****             }
 4232               		.loc 1 1368 22 view .LVU993
 4233 0184 2983      		std Y+1,r18
 4234               	.L188:
1370:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4235               		.loc 1 1370 13 is_stmt 1 view .LVU994
1370:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4236               		.loc 1 1370 25 is_stmt 0 view .LVU995
 4237 0186 9E9C      		mul r9,r14
 4238 0188 F001      		movw r30,r0
 4239 018a 9F9C      		mul r9,r15
 4240 018c F00D      		add r31,r0
 4241 018e 1124      		clr __zero_reg__
 4242 0190 E050      		subi r30,lo8(-(led_twinkle_state))
 4243 0192 F040      		sbci r31,hi8(-(led_twinkle_state))
 4244 0194 1282      		std Z+2,__zero_reg__
1371:quantum/rgblight.c ****             t->life     = t->max_life;
 4245               		.loc 1 1371 13 is_stmt 1 view .LVU996
1371:quantum/rgblight.c ****             t->life     = t->max_life;
 4246               		.loc 1 1371 25 is_stmt 0 view .LVU997
 4247 0196 8091 0000 		lds r24,rgblight_config+3
 4248 019a 893C      		cpi r24,lo8(-55)
 4249 019c 00F0      		brlo .L189
 4250 019e 88EC      		ldi r24,lo8(-56)
 4251               	.L190:
 4252 01a0 9E9C      		mul r9,r14
 4253 01a2 F001      		movw r30,r0
 4254 01a4 9F9C      		mul r9,r15
 4255 01a6 F00D      		add r31,r0
 4256 01a8 1124      		clr __zero_reg__
 4257 01aa E050      		subi r30,lo8(-(led_twinkle_state))
 4258 01ac F040      		sbci r31,hi8(-(led_twinkle_state))
 4259 01ae 8483      		std Z+4,r24
1372:quantum/rgblight.c ****         } else {
 4260               		.loc 1 1372 13 is_stmt 1 view .LVU998
1372:quantum/rgblight.c ****         } else {
 4261               		.loc 1 1372 25 is_stmt 0 view .LVU999
 4262 01b0 8383      		std Z+3,r24
 4263 01b2 00C0      		rjmp .L186
 4264               	.L189:
1372:quantum/rgblight.c ****         } else {
 4265               		.loc 1 1372 25 view .LVU1000
 4266 01b4 8431      		cpi r24,lo8(20)
 4267 01b6 00F4      		brsh .L190
 4268 01b8 84E1      		ldi r24,lo8(20)
 4269 01ba 00C0      		rjmp .L190
 4270               	.LBE208:
 4271               	.LBE210:
 4272               		.cfi_endproc
 4273               	.LFE183:
 4275               		.section	.text.rgblight_disable,"ax",@progbits
 4276               	.global	rgblight_disable
 4278               	rgblight_disable:
 4279               	.LFB116:
 385:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4280               		.loc 1 385 29 is_stmt 1 view -0
 4281               		.cfi_startproc
 4282               	/* prologue: function */
 4283               	/* frame size = 0 */
 4284               	/* stack size = 0 */
 4285               	.L__stack_usage = 0
 386:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4286               		.loc 1 386 5 view .LVU1002
 386:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4287               		.loc 1 386 28 is_stmt 0 view .LVU1003
 4288 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4289 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4290 0004 8081      		ld r24,Z
 4291 0006 8E7F      		andi r24,lo8(~(1<<0))
 4292 0008 8083      		st Z,r24
 387:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4293               		.loc 1 387 5 is_stmt 1 view .LVU1004
 4294 000a 6081      		ld r22,Z
 4295 000c 7181      		ldd r23,Z+1
 4296 000e 8281      		ldd r24,Z+2
 4297 0010 9381      		ldd r25,Z+3
 4298 0012 0E94 0000 		call eeconfig_update_rgblight
 4299               	.LVL276:
 388:quantum/rgblight.c ****     rgblight_timer_disable();
 4300               		.loc 1 388 96 view .LVU1005
 389:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4301               		.loc 1 389 5 view .LVU1006
 4302               	.LBB215:
 4303               	.LBI215:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4304               		.loc 1 894 6 view .LVU1007
 4305               	.LBB216:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4306               		.loc 1 895 5 view .LVU1008
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4307               		.loc 1 895 35 is_stmt 0 view .LVU1009
 4308 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4309               		.loc 1 896 43 is_stmt 1 view .LVU1010
 4310               	.LBE216:
 4311               	.LBE215:
 390:quantum/rgblight.c ****     wait_ms(50);
 4312               		.loc 1 390 35 view .LVU1011
 391:quantum/rgblight.c ****     rgblight_set();
 4313               		.loc 1 391 5 view .LVU1012
 4314               	.LVL277:
 4315               	.LBB217:
 4316               	.LBI217:
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 4317               		.loc 3 166 1 view .LVU1013
 4318               	.LBB218:
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4319               		.loc 3 168 2 view .LVU1014
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4320               		.loc 3 172 2 view .LVU1015
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4321               		.loc 3 173 2 view .LVU1016
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 4322               		.loc 3 174 2 view .LVU1017
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 4323               		.loc 3 184 3 view .LVU1018
 4324               		.loc 3 187 2 view .LVU1019
 4325 001a 2FEF      		ldi r18,lo8(159999)
 4326 001c 80E7      		ldi r24,hi8(159999)
 4327 001e 92E0      		ldi r25,hlo8(159999)
 4328 0020 2150      	1:	subi r18,1
 4329 0022 8040      		sbci r24,0
 4330 0024 9040      		sbci r25,0
 4331 0026 01F4      		brne 1b
 4332 0028 00C0      		rjmp .
 4333 002a 0000      		nop
 4334               	.LVL278:
 4335               		.loc 3 187 2 is_stmt 0 view .LVU1020
 4336               	.LBE218:
 4337               	.LBE217:
 392:quantum/rgblight.c **** }
 4338               		.loc 1 392 5 is_stmt 1 view .LVU1021
 4339 002c 0C94 0000 		jmp rgblight_set
 4340               	.LVL279:
 4341               		.cfi_endproc
 4342               	.LFE116:
 4344               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 4345               	.global	rgblight_disable_noeeprom
 4347               	rgblight_disable_noeeprom:
 4348               	.LFB117:
 395:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4349               		.loc 1 395 38 view -0
 4350               		.cfi_startproc
 4351               	/* prologue: function */
 4352               	/* frame size = 0 */
 4353               	/* stack size = 0 */
 4354               	.L__stack_usage = 0
 396:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4355               		.loc 1 396 5 view .LVU1023
 396:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4356               		.loc 1 396 28 is_stmt 0 view .LVU1024
 4357 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4358 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4359 0004 8081      		ld r24,Z
 4360 0006 8E7F      		andi r24,lo8(~(1<<0))
 4361 0008 8083      		st Z,r24
 397:quantum/rgblight.c ****     rgblight_timer_disable();
 4362               		.loc 1 397 98 is_stmt 1 view .LVU1025
 398:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4363               		.loc 1 398 5 view .LVU1026
 4364               	.LBB223:
 4365               	.LBI223:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4366               		.loc 1 894 6 view .LVU1027
 4367               	.LBB224:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4368               		.loc 1 895 5 view .LVU1028
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4369               		.loc 1 895 35 is_stmt 0 view .LVU1029
 4370 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4371               		.loc 1 896 43 is_stmt 1 view .LVU1030
 4372               	.LBE224:
 4373               	.LBE223:
 399:quantum/rgblight.c ****     wait_ms(50);
 4374               		.loc 1 399 35 view .LVU1031
 400:quantum/rgblight.c ****     rgblight_set();
 4375               		.loc 1 400 5 view .LVU1032
 4376               	.LVL280:
 4377               	.LBB225:
 4378               	.LBI225:
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 4379               		.loc 3 166 1 view .LVU1033
 4380               	.LBB226:
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4381               		.loc 3 168 2 view .LVU1034
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4382               		.loc 3 172 2 view .LVU1035
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4383               		.loc 3 173 2 view .LVU1036
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 4384               		.loc 3 174 2 view .LVU1037
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 4385               		.loc 3 184 3 view .LVU1038
 4386               		.loc 3 187 2 view .LVU1039
 4387 000e 2FEF      		ldi r18,lo8(159999)
 4388 0010 80E7      		ldi r24,hi8(159999)
 4389 0012 92E0      		ldi r25,hlo8(159999)
 4390 0014 2150      	1:	subi r18,1
 4391 0016 8040      		sbci r24,0
 4392 0018 9040      		sbci r25,0
 4393 001a 01F4      		brne 1b
 4394 001c 00C0      		rjmp .
 4395 001e 0000      		nop
 4396               	.LVL281:
 4397               		.loc 3 187 2 is_stmt 0 view .LVU1040
 4398               	.LBE226:
 4399               	.LBE225:
 401:quantum/rgblight.c **** }
 4400               		.loc 1 401 5 is_stmt 1 view .LVU1041
 4401 0020 0C94 0000 		jmp rgblight_set
 4402               	.LVL282:
 4403               		.cfi_endproc
 4404               	.LFE117:
 4406               		.section	.text.rgblight_timer_init,"ax",@progbits
 4407               	.global	rgblight_timer_init
 4409               	rgblight_timer_init:
 4410               	.LFB167:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4411               		.loc 1 894 32 view -0
 4412               		.cfi_startproc
 4413               	/* prologue: function */
 4414               	/* frame size = 0 */
 4415               	/* stack size = 0 */
 4416               	.L__stack_usage = 0
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4417               		.loc 1 895 5 view .LVU1043
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4418               		.loc 1 895 35 is_stmt 0 view .LVU1044
 4419 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4420               		.loc 1 896 43 is_stmt 1 view .LVU1045
 4421               	/* epilogue start */
 897:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 4422               		.loc 1 897 1 is_stmt 0 view .LVU1046
 4423 0004 0895      		ret
 4424               		.cfi_endproc
 4425               	.LFE167:
 4427               		.section	.text.rgblight_timer_enable,"ax",@progbits
 4428               	.global	rgblight_timer_enable
 4430               	rgblight_timer_enable:
 4431               	.LFB168:
 898:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 4432               		.loc 1 898 34 is_stmt 1 view -0
 4433               		.cfi_startproc
 4434               	/* prologue: function */
 4435               	/* frame size = 0 */
 4436               	/* stack size = 0 */
 4437               	.L__stack_usage = 0
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4438               		.loc 1 899 5 view .LVU1048
 4439               	.LVL283:
 4440               	.LBB229:
 4441               	.LBI229:
  99:quantum/rgblight.c **** 
 4442               		.loc 1 99 19 view .LVU1049
 4443               	.LBB230:
  99:quantum/rgblight.c **** 
 4444               		.loc 1 99 52 view .LVU1050
 4445               	.LBE230:
 4446               	.LBE229:
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4447               		.loc 1 899 42 is_stmt 0 view .LVU1051
 4448 0000 6091 0000 		lds r22,rgblight_config
 4449 0004 6695      		lsr r22
 4450               	.LBB232:
 4451               	.LBB231:
  99:quantum/rgblight.c **** 
 4452               		.loc 1 99 59 view .LVU1052
 4453 0006 70E0      		ldi r23,0
 4454 0008 4BE0      		ldi r20,lo8(11)
 4455 000a 50E0      		ldi r21,0
 4456 000c 80E0      		ldi r24,lo8(static_effect_table)
 4457 000e 90E0      		ldi r25,hi8(static_effect_table)
 4458 0010 0E94 0000 		call memchr
 4459               	.LVL284:
  99:quantum/rgblight.c **** 
 4460               		.loc 1 99 59 view .LVU1053
 4461               	.LBE231:
 4462               	.LBE232:
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4463               		.loc 1 899 8 view .LVU1054
 4464 0014 892B      		or r24,r25
 4465 0016 01F4      		brne .L196
 900:quantum/rgblight.c ****     }
 4466               		.loc 1 900 9 is_stmt 1 view .LVU1055
 900:quantum/rgblight.c ****     }
 4467               		.loc 1 900 39 is_stmt 0 view .LVU1056
 4468 0018 81E0      		ldi r24,lo8(1)
 4469 001a 8093 0000 		sts rgblight_status+1,r24
 4470               	.L196:
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4471               		.loc 1 902 5 is_stmt 1 view .LVU1057
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4472               		.loc 1 902 35 is_stmt 0 view .LVU1058
 4473 001e 0E94 0000 		call timer_read
 4474               	.LVL285:
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4475               		.loc 1 902 33 view .LVU1059
 4476 0022 9093 0000 		sts animation_status+1,r25
 4477 0026 8093 0000 		sts animation_status,r24
 903:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 4478               		.loc 1 903 43 is_stmt 1 view .LVU1060
 904:quantum/rgblight.c **** }
 4479               		.loc 1 904 41 view .LVU1061
 4480               	/* epilogue start */
 905:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 4481               		.loc 1 905 1 is_stmt 0 view .LVU1062
 4482 002a 0895      		ret
 4483               		.cfi_endproc
 4484               	.LFE168:
 4486               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 4487               	.global	rgblight_mode_eeprom_helper
 4489               	rgblight_mode_eeprom_helper:
 4490               	.LVL286:
 4491               	.LFB109:
 320:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 4492               		.loc 1 320 70 is_stmt 1 view -0
 4493               		.cfi_startproc
 4494               	/* prologue: function */
 4495               	/* frame size = 0 */
 4496               	/* stack size = 0 */
 4497               	.L__stack_usage = 0
 321:quantum/rgblight.c ****         return;
 4498               		.loc 1 321 5 view .LVU1064
 321:quantum/rgblight.c ****         return;
 4499               		.loc 1 321 25 is_stmt 0 view .LVU1065
 4500 0000 9091 0000 		lds r25,rgblight_config
 321:quantum/rgblight.c ****         return;
 4501               		.loc 1 321 8 view .LVU1066
 4502 0004 90FF      		sbrs r25,0
 4503 0006 00C0      		rjmp .L197
 324:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4504               		.loc 1 324 5 is_stmt 1 view .LVU1067
 4505 0008 9170      		andi r25,lo8(1)
 324:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4506               		.loc 1 324 8 is_stmt 0 view .LVU1068
 4507 000a 8111      		cpse r24,__zero_reg__
 4508 000c 00C0      		rjmp .L199
 325:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4509               		.loc 1 325 9 is_stmt 1 view .LVU1069
 325:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4510               		.loc 1 325 30 is_stmt 0 view .LVU1070
 4511 000e 9260      		ori r25,lo8(2)
 4512               	.LVL287:
 4513               	.L208:
 329:quantum/rgblight.c ****     }
 4514               		.loc 1 329 30 view .LVU1071
 4515 0010 9093 0000 		sts rgblight_config,r25
 331:quantum/rgblight.c ****     if (write_to_eeprom) {
 4516               		.loc 1 331 35 is_stmt 1 view .LVU1072
 332:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4517               		.loc 1 332 5 view .LVU1073
 332:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4518               		.loc 1 332 8 is_stmt 0 view .LVU1074
 4519 0014 6623      		tst r22
 4520 0016 01F0      		breq .L202
 333:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4521               		.loc 1 333 9 is_stmt 1 view .LVU1075
 4522 0018 6091 0000 		lds r22,rgblight_config
 4523 001c 7091 0000 		lds r23,rgblight_config+1
 4524 0020 8091 0000 		lds r24,rgblight_config+2
 4525 0024 9091 0000 		lds r25,rgblight_config+3
 4526               	.LVL288:
 333:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4527               		.loc 1 333 9 is_stmt 0 view .LVU1076
 4528 0028 0E94 0000 		call eeconfig_update_rgblight
 4529               	.LVL289:
 334:quantum/rgblight.c ****     } else {
 4530               		.loc 1 334 70 is_stmt 1 view .LVU1077
 4531               	.L202:
 336:quantum/rgblight.c ****     }
 4532               		.loc 1 336 72 view .LVU1078
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4533               		.loc 1 338 5 view .LVU1079
 4534               	.LBB237:
 4535               	.LBI237:
  99:quantum/rgblight.c **** 
 4536               		.loc 1 99 19 view .LVU1080
 4537               	.LBB238:
  99:quantum/rgblight.c **** 
 4538               		.loc 1 99 52 view .LVU1081
 4539               	.LBE238:
 4540               	.LBE237:
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4541               		.loc 1 338 41 is_stmt 0 view .LVU1082
 4542 002c 6091 0000 		lds r22,rgblight_config
 4543 0030 6695      		lsr r22
 4544               	.LBB240:
 4545               	.LBB239:
  99:quantum/rgblight.c **** 
 4546               		.loc 1 99 59 view .LVU1083
 4547 0032 70E0      		ldi r23,0
 4548 0034 4BE0      		ldi r20,lo8(11)
 4549 0036 50E0      		ldi r21,0
 4550 0038 80E0      		ldi r24,lo8(static_effect_table)
 4551 003a 90E0      		ldi r25,hi8(static_effect_table)
 4552 003c 0E94 0000 		call memchr
 4553               	.LVL290:
  99:quantum/rgblight.c **** 
 4554               		.loc 1 99 59 view .LVU1084
 4555               	.LBE239:
 4556               	.LBE240:
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4557               		.loc 1 338 8 view .LVU1085
 4558 0040 892B      		or r24,r25
 4559 0042 01F0      		breq .L203
 339:quantum/rgblight.c ****     } else {
 4560               		.loc 1 339 9 is_stmt 1 view .LVU1086
 4561               	.LBB241:
 4562               	.LBI241:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4563               		.loc 1 894 6 view .LVU1087
 4564               	.LBB242:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4565               		.loc 1 895 5 view .LVU1088
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4566               		.loc 1 895 35 is_stmt 0 view .LVU1089
 4567 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4568               		.loc 1 896 43 is_stmt 1 view .LVU1090
 4569               	.L204:
 4570               	.LBE242:
 4571               	.LBE241:
 344:quantum/rgblight.c **** #endif
 4572               		.loc 1 344 5 view .LVU1091
 344:quantum/rgblight.c **** #endif
 4573               		.loc 1 344 30 is_stmt 0 view .LVU1092
 4574 0048 81E0      		ldi r24,lo8(1)
 4575 004a 8093 0000 		sts animation_status+3,r24
 346:quantum/rgblight.c **** }
 4576               		.loc 1 346 5 is_stmt 1 view .LVU1093
 4577 004e 4091 0000 		lds r20,rgblight_config+3
 4578 0052 6091 0000 		lds r22,rgblight_config+2
 4579 0056 8091 0000 		lds r24,rgblight_config+1
 4580 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 4581               	.LVL291:
 4582               	.L199:
 326:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4583               		.loc 1 326 12 view .LVU1094
 326:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4584               		.loc 1 326 15 is_stmt 0 view .LVU1095
 4585 005e 8B32      		cpi r24,lo8(43)
 4586 0060 00F0      		brlo .L201
 327:quantum/rgblight.c ****     } else {
 4587               		.loc 1 327 9 is_stmt 1 view .LVU1096
 327:quantum/rgblight.c ****     } else {
 4588               		.loc 1 327 30 is_stmt 0 view .LVU1097
 4589 0062 9465      		ori r25,lo8(84)
 4590 0064 00C0      		rjmp .L208
 4591               	.L201:
 329:quantum/rgblight.c ****     }
 4592               		.loc 1 329 9 is_stmt 1 view .LVU1098
 329:quantum/rgblight.c ****     }
 4593               		.loc 1 329 30 is_stmt 0 view .LVU1099
 4594 0066 880F      		lsl r24
 4595               	.LVL292:
 329:quantum/rgblight.c ****     }
 4596               		.loc 1 329 30 view .LVU1100
 4597 0068 982B      		or r25,r24
 4598 006a 00C0      		rjmp .L208
 4599               	.LVL293:
 4600               	.L203:
 341:quantum/rgblight.c ****     }
 4601               		.loc 1 341 9 is_stmt 1 view .LVU1101
 4602 006c 0E94 0000 		call rgblight_timer_enable
 4603               	.LVL294:
 4604 0070 00C0      		rjmp .L204
 4605               	.LVL295:
 4606               	.L197:
 4607               	/* epilogue start */
 347:quantum/rgblight.c **** 
 4608               		.loc 1 347 1 is_stmt 0 view .LVU1102
 4609 0072 0895      		ret
 4610               		.cfi_endproc
 4611               	.LFE109:
 4613               		.section	.text.rgblight_step_helper,"ax",@progbits
 4614               	.global	rgblight_step_helper
 4616               	rgblight_step_helper:
 4617               	.LVL296:
 4618               	.LFB102:
 291:quantum/rgblight.c ****     uint8_t mode = 0;
 4619               		.loc 1 291 49 is_stmt 1 view -0
 4620               		.cfi_startproc
 4621               	/* prologue: function */
 4622               	/* frame size = 0 */
 4623               	/* stack size = 0 */
 4624               	.L__stack_usage = 0
 291:quantum/rgblight.c ****     uint8_t mode = 0;
 4625               		.loc 1 291 49 is_stmt 0 view .LVU1104
 4626 0000 682F      		mov r22,r24
 292:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 4627               		.loc 1 292 5 is_stmt 1 view .LVU1105
 4628               	.LVL297:
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4629               		.loc 1 293 5 view .LVU1106
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4630               		.loc 1 293 35 is_stmt 0 view .LVU1107
 4631 0002 9091 0000 		lds r25,rgblight_config
 4632 0006 9695      		lsr r25
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4633               		.loc 1 293 18 view .LVU1108
 4634 0008 81E0      		ldi r24,lo8(1)
 4635               	.LVL298:
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4636               		.loc 1 293 18 view .LVU1109
 4637 000a 890F      		add r24,r25
 4638               	.LVL299:
 294:quantum/rgblight.c ****         mode = 1;
 4639               		.loc 1 294 5 is_stmt 1 view .LVU1110
 294:quantum/rgblight.c ****         mode = 1;
 4640               		.loc 1 294 8 is_stmt 0 view .LVU1111
 4641 000c 8B32      		cpi r24,lo8(43)
 4642 000e 00F0      		brlo .L210
 295:quantum/rgblight.c ****     }
 4643               		.loc 1 295 14 view .LVU1112
 4644 0010 81E0      		ldi r24,lo8(1)
 4645               	.LVL300:
 4646               	.L210:
 297:quantum/rgblight.c **** }
 4647               		.loc 1 297 5 is_stmt 1 view .LVU1113
 4648 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4649               	.LVL301:
 297:quantum/rgblight.c **** }
 4650               		.loc 1 297 5 is_stmt 0 view .LVU1114
 4651               		.cfi_endproc
 4652               	.LFE102:
 4654               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 4655               	.global	rgblight_step_noeeprom
 4657               	rgblight_step_noeeprom:
 4658               	.LFB103:
 299:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4659               		.loc 1 299 35 is_stmt 1 view -0
 4660               		.cfi_startproc
 4661               	/* prologue: function */
 4662               	/* frame size = 0 */
 4663               	/* stack size = 0 */
 4664               	.L__stack_usage = 0
 299:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4665               		.loc 1 299 37 view .LVU1116
 4666 0000 80E0      		ldi r24,0
 4667 0002 0C94 0000 		jmp rgblight_step_helper
 4668               	.LVL302:
 4669               		.cfi_endproc
 4670               	.LFE103:
 4672               		.section	.text.rgblight_step,"ax",@progbits
 4673               	.global	rgblight_step
 4675               	rgblight_step:
 4676               	.LFB104:
 300:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4677               		.loc 1 300 26 view -0
 4678               		.cfi_startproc
 4679               	/* prologue: function */
 4680               	/* frame size = 0 */
 4681               	/* stack size = 0 */
 4682               	.L__stack_usage = 0
 300:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4683               		.loc 1 300 28 view .LVU1118
 4684 0000 81E0      		ldi r24,lo8(1)
 4685 0002 0C94 0000 		jmp rgblight_step_helper
 4686               	.LVL303:
 4687               		.cfi_endproc
 4688               	.LFE104:
 4690               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 4691               	.global	rgblight_step_reverse_helper
 4693               	rgblight_step_reverse_helper:
 4694               	.LVL304:
 4695               	.LFB105:
 301:quantum/rgblight.c ****     uint8_t mode = 0;
 4696               		.loc 1 301 57 view -0
 4697               		.cfi_startproc
 4698               	/* prologue: function */
 4699               	/* frame size = 0 */
 4700               	/* stack size = 0 */
 4701               	.L__stack_usage = 0
 301:quantum/rgblight.c ****     uint8_t mode = 0;
 4702               		.loc 1 301 57 is_stmt 0 view .LVU1120
 4703 0000 682F      		mov r22,r24
 302:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 4704               		.loc 1 302 5 is_stmt 1 view .LVU1121
 4705               	.LVL305:
 303:quantum/rgblight.c ****     if (mode < 1) {
 4706               		.loc 1 303 5 view .LVU1122
 303:quantum/rgblight.c ****     if (mode < 1) {
 4707               		.loc 1 303 35 is_stmt 0 view .LVU1123
 4708 0002 9091 0000 		lds r25,rgblight_config
 4709 0006 9695      		lsr r25
 303:quantum/rgblight.c ****     if (mode < 1) {
 4710               		.loc 1 303 18 view .LVU1124
 4711 0008 8FEF      		ldi r24,lo8(-1)
 4712               	.LVL306:
 303:quantum/rgblight.c ****     if (mode < 1) {
 4713               		.loc 1 303 18 view .LVU1125
 4714 000a 890F      		add r24,r25
 4715               	.LVL307:
 304:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4716               		.loc 1 304 5 is_stmt 1 view .LVU1126
 304:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4717               		.loc 1 304 8 is_stmt 0 view .LVU1127
 4718 000c 01F4      		brne .L214
 305:quantum/rgblight.c ****     }
 4719               		.loc 1 305 14 view .LVU1128
 4720 000e 8AE2      		ldi r24,lo8(42)
 4721               	.LVL308:
 4722               	.L214:
 307:quantum/rgblight.c **** }
 4723               		.loc 1 307 5 is_stmt 1 view .LVU1129
 4724 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4725               	.LVL309:
 307:quantum/rgblight.c **** }
 4726               		.loc 1 307 5 is_stmt 0 view .LVU1130
 4727               		.cfi_endproc
 4728               	.LFE105:
 4730               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 4731               	.global	rgblight_step_reverse_noeeprom
 4733               	rgblight_step_reverse_noeeprom:
 4734               	.LFB106:
 309:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4735               		.loc 1 309 43 is_stmt 1 view -0
 4736               		.cfi_startproc
 4737               	/* prologue: function */
 4738               	/* frame size = 0 */
 4739               	/* stack size = 0 */
 4740               	.L__stack_usage = 0
 309:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4741               		.loc 1 309 45 view .LVU1132
 4742 0000 80E0      		ldi r24,0
 4743 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4744               	.LVL310:
 4745               		.cfi_endproc
 4746               	.LFE106:
 4748               		.section	.text.rgblight_step_reverse,"ax",@progbits
 4749               	.global	rgblight_step_reverse
 4751               	rgblight_step_reverse:
 4752               	.LFB107:
 310:quantum/rgblight.c **** 
 4753               		.loc 1 310 34 view -0
 4754               		.cfi_startproc
 4755               	/* prologue: function */
 4756               	/* frame size = 0 */
 4757               	/* stack size = 0 */
 4758               	.L__stack_usage = 0
 310:quantum/rgblight.c **** 
 4759               		.loc 1 310 36 view .LVU1134
 4760 0000 81E0      		ldi r24,lo8(1)
 4761 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4762               	.LVL311:
 4763               		.cfi_endproc
 4764               	.LFE107:
 4766               		.section	.text.rgblight_mode,"ax",@progbits
 4767               	.global	rgblight_mode
 4769               	rgblight_mode:
 4770               	.LVL312:
 4771               	.LFB110:
 349:quantum/rgblight.c **** 
 4772               		.loc 1 349 34 view -0
 4773               		.cfi_startproc
 4774               	/* prologue: function */
 4775               	/* frame size = 0 */
 4776               	/* stack size = 0 */
 4777               	.L__stack_usage = 0
 349:quantum/rgblight.c **** 
 4778               		.loc 1 349 36 view .LVU1136
 4779 0000 61E0      		ldi r22,lo8(1)
 4780 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4781               	.LVL313:
 349:quantum/rgblight.c **** 
 4782               		.loc 1 349 36 is_stmt 0 view .LVU1137
 4783               		.cfi_endproc
 4784               	.LFE110:
 4786               		.section	.text.rgblight_increase,"ax",@progbits
 4787               	.global	rgblight_increase
 4789               	rgblight_increase:
 4790               	.LFB100:
 276:quantum/rgblight.c ****     uint8_t mode = 0;
 4791               		.loc 1 276 30 is_stmt 1 view -0
 4792               		.cfi_startproc
 4793               	/* prologue: function */
 4794               	/* frame size = 0 */
 4795               	/* stack size = 0 */
 4796               	.L__stack_usage = 0
 277:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4797               		.loc 1 277 5 view .LVU1139
 4798               	.LVL314:
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4799               		.loc 1 278 5 view .LVU1140
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4800               		.loc 1 278 24 is_stmt 0 view .LVU1141
 4801 0000 8091 0000 		lds r24,rgblight_config
 4802 0004 8695      		lsr r24
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4803               		.loc 1 278 8 view .LVU1142
 4804 0006 8A32      		cpi r24,lo8(42)
 4805 0008 00F4      		brsh .L220
 279:quantum/rgblight.c ****     }
 4806               		.loc 1 279 9 is_stmt 1 view .LVU1143
 279:quantum/rgblight.c ****     }
 4807               		.loc 1 279 14 is_stmt 0 view .LVU1144
 4808 000a 8F5F      		subi r24,lo8(-(1))
 4809               	.LVL315:
 4810               	.L219:
 281:quantum/rgblight.c **** }
 4811               		.loc 1 281 5 is_stmt 1 view .LVU1145
 4812 000c 0C94 0000 		jmp rgblight_mode
 4813               	.LVL316:
 4814               	.L220:
 277:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4815               		.loc 1 277 13 is_stmt 0 view .LVU1146
 4816 0010 80E0      		ldi r24,0
 4817 0012 00C0      		rjmp .L219
 4818               		.cfi_endproc
 4819               	.LFE100:
 4821               		.section	.text.rgblight_decrease,"ax",@progbits
 4822               	.global	rgblight_decrease
 4824               	rgblight_decrease:
 4825               	.LFB101:
 283:quantum/rgblight.c ****     uint8_t mode = 0;
 4826               		.loc 1 283 30 is_stmt 1 view -0
 4827               		.cfi_startproc
 4828               	/* prologue: function */
 4829               	/* frame size = 0 */
 4830               	/* stack size = 0 */
 4831               	.L__stack_usage = 0
 284:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4832               		.loc 1 284 5 view .LVU1148
 4833               	.LVL317:
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4834               		.loc 1 286 5 view .LVU1149
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4835               		.loc 1 286 24 is_stmt 0 view .LVU1150
 4836 0000 8091 0000 		lds r24,rgblight_config
 4837 0004 8695      		lsr r24
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4838               		.loc 1 286 8 view .LVU1151
 4839 0006 8230      		cpi r24,lo8(2)
 4840 0008 00F0      		brlo .L223
 287:quantum/rgblight.c ****     }
 4841               		.loc 1 287 9 is_stmt 1 view .LVU1152
 287:quantum/rgblight.c ****     }
 4842               		.loc 1 287 14 is_stmt 0 view .LVU1153
 4843 000a 8150      		subi r24,lo8(-(-1))
 4844               	.LVL318:
 4845               	.L222:
 289:quantum/rgblight.c **** }
 4846               		.loc 1 289 5 is_stmt 1 view .LVU1154
 4847 000c 0C94 0000 		jmp rgblight_mode
 4848               	.LVL319:
 4849               	.L223:
 284:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4850               		.loc 1 284 13 is_stmt 0 view .LVU1155
 4851 0010 80E0      		ldi r24,0
 4852 0012 00C0      		rjmp .L222
 4853               		.cfi_endproc
 4854               	.LFE101:
 4856               		.section	.text.rgblight_enable,"ax",@progbits
 4857               	.global	rgblight_enable
 4859               	rgblight_enable:
 4860               	.LFB114:
 371:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4861               		.loc 1 371 28 is_stmt 1 view -0
 4862               		.cfi_startproc
 4863               	/* prologue: function */
 4864               	/* frame size = 0 */
 4865               	/* stack size = 0 */
 4866               	.L__stack_usage = 0
 372:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4867               		.loc 1 372 5 view .LVU1157
 372:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4868               		.loc 1 372 28 is_stmt 0 view .LVU1158
 4869 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4870 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4871 0004 8081      		ld r24,Z
 4872 0006 8160      		ori r24,lo8(1<<0)
 4873 0008 8083      		st Z,r24
 375:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 4874               		.loc 1 375 95 is_stmt 1 view .LVU1159
 376:quantum/rgblight.c **** }
 4875               		.loc 1 376 5 view .LVU1160
 4876 000a 8695      		lsr r24
 4877 000c 0C94 0000 		jmp rgblight_mode
 4878               	.LVL320:
 4879               		.cfi_endproc
 4880               	.LFE114:
 4882               		.section	.text.rgblight_toggle,"ax",@progbits
 4883               	.global	rgblight_toggle
 4885               	rgblight_toggle:
 4886               	.LFB112:
 353:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4887               		.loc 1 353 28 view -0
 4888               		.cfi_startproc
 4889               	/* prologue: function */
 4890               	/* frame size = 0 */
 4891               	/* stack size = 0 */
 4892               	.L__stack_usage = 0
 354:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4893               		.loc 1 354 96 view .LVU1162
 355:quantum/rgblight.c ****         rgblight_disable();
 4894               		.loc 1 355 5 view .LVU1163
 355:quantum/rgblight.c ****         rgblight_disable();
 4895               		.loc 1 355 9 is_stmt 0 view .LVU1164
 4896 0000 8091 0000 		lds r24,rgblight_config
 355:quantum/rgblight.c ****         rgblight_disable();
 4897               		.loc 1 355 8 view .LVU1165
 4898 0004 80FD      		sbrc r24,0
 356:quantum/rgblight.c ****     } else {
 4899               		.loc 1 356 9 is_stmt 1 view .LVU1166
 4900 0006 0C94 0000 		jmp rgblight_disable
 4901               	.LVL321:
 4902               	.L226:
 358:quantum/rgblight.c ****     }
 4903               		.loc 1 358 9 view .LVU1167
 4904 000a 0C94 0000 		jmp rgblight_enable
 4905               	.LVL322:
 4906               		.cfi_endproc
 4907               	.LFE112:
 4909               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 4910               	.global	rgblight_mode_noeeprom
 4912               	rgblight_mode_noeeprom:
 4913               	.LVL323:
 4914               	.LFB111:
 351:quantum/rgblight.c **** 
 4915               		.loc 1 351 43 view -0
 4916               		.cfi_startproc
 4917               	/* prologue: function */
 4918               	/* frame size = 0 */
 4919               	/* stack size = 0 */
 4920               	.L__stack_usage = 0
 351:quantum/rgblight.c **** 
 4921               		.loc 1 351 45 view .LVU1169
 4922 0000 60E0      		ldi r22,0
 4923 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4924               	.LVL324:
 351:quantum/rgblight.c **** 
 4925               		.loc 1 351 45 is_stmt 0 view .LVU1170
 4926               		.cfi_endproc
 4927               	.LFE111:
 4929               		.section	.text.rgblight_init,"ax",@progbits
 4930               	.global	rgblight_init
 4932               	rgblight_init:
 4933               	.LFB96:
 217:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 4934               		.loc 1 217 26 is_stmt 1 view -0
 4935               		.cfi_startproc
 4936               	/* prologue: function */
 4937               	/* frame size = 0 */
 4938               	/* stack size = 0 */
 4939               	.L__stack_usage = 0
 221:quantum/rgblight.c ****         return;
 4940               		.loc 1 221 5 view .LVU1172
 221:quantum/rgblight.c ****         return;
 4941               		.loc 1 221 8 is_stmt 0 view .LVU1173
 4942 0000 8091 0000 		lds r24,is_rgblight_initialized
 4943 0004 8111      		cpse r24,__zero_reg__
 4944 0006 00C0      		rjmp .L228
 225:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 4945               		.loc 1 225 39 is_stmt 1 view .LVU1174
 226:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 4946               		.loc 1 226 38 view .LVU1175
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4947               		.loc 1 227 5 view .LVU1176
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4948               		.loc 1 227 10 is_stmt 0 view .LVU1177
 4949 0008 0E94 0000 		call eeconfig_is_enabled
 4950               	.LVL325:
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4951               		.loc 1 227 8 view .LVU1178
 4952 000c 8111      		cpse r24,__zero_reg__
 4953 000e 00C0      		rjmp .L230
 228:quantum/rgblight.c ****         eeconfig_init();
 4954               		.loc 1 228 60 is_stmt 1 view .LVU1179
 229:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4955               		.loc 1 229 9 view .LVU1180
 4956 0010 0E94 0000 		call eeconfig_init
 4957               	.LVL326:
 230:quantum/rgblight.c ****     }
 4958               		.loc 1 230 9 view .LVU1181
 4959 0014 0E94 0000 		call eeconfig_update_rgblight_default
 4960               	.LVL327:
 4961               	.L230:
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4962               		.loc 1 232 5 view .LVU1182
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4963               		.loc 1 232 27 is_stmt 0 view .LVU1183
 4964 0018 0E94 0000 		call eeconfig_read_rgblight
 4965               	.LVL328:
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4966               		.loc 1 232 25 view .LVU1184
 4967 001c 6093 0000 		sts rgblight_config,r22
 4968 0020 7093 0000 		sts rgblight_config+1,r23
 4969 0024 8093 0000 		sts rgblight_config+2,r24
 4970 0028 9093 0000 		sts rgblight_config+3,r25
 233:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 4971               		.loc 1 233 39 is_stmt 1 view .LVU1185
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4972               		.loc 1 234 5 view .LVU1186
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4973               		.loc 1 234 9 is_stmt 0 view .LVU1187
 4974 002c 6E7F      		andi r22,lo8(-2)
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4975               		.loc 1 234 8 view .LVU1188
 4976 002e 01F4      		brne .L231
 235:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4977               		.loc 1 235 93 is_stmt 1 view .LVU1189
 236:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 4978               		.loc 1 236 9 view .LVU1190
 4979 0030 0E94 0000 		call eeconfig_update_rgblight_default
 4980               	.LVL329:
 237:quantum/rgblight.c ****     }
 4981               		.loc 1 237 9 view .LVU1191
 237:quantum/rgblight.c ****     }
 4982               		.loc 1 237 31 is_stmt 0 view .LVU1192
 4983 0034 0E94 0000 		call eeconfig_read_rgblight
 4984               	.LVL330:
 237:quantum/rgblight.c ****     }
 4985               		.loc 1 237 29 view .LVU1193
 4986 0038 6093 0000 		sts rgblight_config,r22
 4987 003c 7093 0000 		sts rgblight_config+1,r23
 4988 0040 8093 0000 		sts rgblight_config+2,r24
 4989 0044 9093 0000 		sts rgblight_config+3,r25
 4990               	.L231:
 239:quantum/rgblight.c **** 
 4991               		.loc 1 239 5 is_stmt 1 view .LVU1194
 4992 0048 0E94 0000 		call rgblight_check_config
 4993               	.LVL331:
 241:quantum/rgblight.c **** 
 4994               		.loc 1 241 5 view .LVU1195
 243:quantum/rgblight.c **** 
 4995               		.loc 1 243 5 view .LVU1196
 4996               	.LBB245:
 4997               	.LBI245:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4998               		.loc 1 894 6 view .LVU1197
 4999               	.LBB246:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5000               		.loc 1 895 5 view .LVU1198
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5001               		.loc 1 895 35 is_stmt 0 view .LVU1199
 5002 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5003               		.loc 1 896 43 is_stmt 1 view .LVU1200
 5004               	.LBE246:
 5005               	.LBE245:
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5006               		.loc 1 245 5 view .LVU1201
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5007               		.loc 1 245 9 is_stmt 0 view .LVU1202
 5008 0050 8091 0000 		lds r24,rgblight_config
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5009               		.loc 1 245 8 view .LVU1203
 5010 0054 80FF      		sbrs r24,0
 5011 0056 00C0      		rjmp .L232
 246:quantum/rgblight.c ****     }
 5012               		.loc 1 246 9 is_stmt 1 view .LVU1204
 5013 0058 8695      		lsr r24
 5014 005a 0E94 0000 		call rgblight_mode_noeeprom
 5015               	.LVL332:
 5016               	.L232:
 249:quantum/rgblight.c **** }
 5017               		.loc 1 249 5 view .LVU1205
 249:quantum/rgblight.c **** }
 5018               		.loc 1 249 29 is_stmt 0 view .LVU1206
 5019 005e 81E0      		ldi r24,lo8(1)
 5020 0060 8093 0000 		sts is_rgblight_initialized,r24
 5021               	.L228:
 5022               	/* epilogue start */
 250:quantum/rgblight.c **** 
 5023               		.loc 1 250 1 view .LVU1207
 5024 0064 0895      		ret
 5025               		.cfi_endproc
 5026               	.LFE96:
 5028               		.section	.text.rgblight_reload_from_eeprom,"ax",@progbits
 5029               	.global	rgblight_reload_from_eeprom
 5031               	rgblight_reload_from_eeprom:
 5032               	.LFB97:
 252:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 5033               		.loc 1 252 40 is_stmt 1 view -0
 5034               		.cfi_startproc
 5035               	/* prologue: function */
 5036               	/* frame size = 0 */
 5037               	/* stack size = 0 */
 5038               	.L__stack_usage = 0
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5039               		.loc 1 254 5 view .LVU1209
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5040               		.loc 1 254 27 is_stmt 0 view .LVU1210
 5041 0000 0E94 0000 		call eeconfig_read_rgblight
 5042               	.LVL333:
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5043               		.loc 1 254 25 view .LVU1211
 5044 0004 6093 0000 		sts rgblight_config,r22
 5045 0008 7093 0000 		sts rgblight_config+1,r23
 5046 000c 8093 0000 		sts rgblight_config+2,r24
 5047 0010 9093 0000 		sts rgblight_config+3,r25
 255:quantum/rgblight.c ****     rgblight_check_config();
 5048               		.loc 1 255 39 is_stmt 1 view .LVU1212
 256:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 5049               		.loc 1 256 5 view .LVU1213
 5050 0014 0E94 0000 		call rgblight_check_config
 5051               	.LVL334:
 257:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5052               		.loc 1 257 5 view .LVU1214
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5053               		.loc 1 258 5 view .LVU1215
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5054               		.loc 1 258 9 is_stmt 0 view .LVU1216
 5055 0018 8091 0000 		lds r24,rgblight_config
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5056               		.loc 1 258 8 view .LVU1217
 5057 001c 80FF      		sbrs r24,0
 5058 001e 00C0      		rjmp .L236
 259:quantum/rgblight.c ****     }
 5059               		.loc 1 259 9 is_stmt 1 view .LVU1218
 5060 0020 8695      		lsr r24
 5061 0022 0C94 0000 		jmp rgblight_mode_noeeprom
 5062               	.LVL335:
 5063               	.L236:
 5064               	/* epilogue start */
 261:quantum/rgblight.c **** 
 5065               		.loc 1 261 1 is_stmt 0 view .LVU1219
 5066 0026 0895      		ret
 5067               		.cfi_endproc
 5068               	.LFE97:
 5070               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 5071               	.global	rgblight_enable_noeeprom
 5073               	rgblight_enable_noeeprom:
 5074               	.LFB115:
 379:quantum/rgblight.c ****     rgblight_config.enable = 1;
 5075               		.loc 1 379 37 is_stmt 1 view -0
 5076               		.cfi_startproc
 5077               	/* prologue: function */
 5078               	/* frame size = 0 */
 5079               	/* stack size = 0 */
 5080               	.L__stack_usage = 0
 380:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5081               		.loc 1 380 5 view .LVU1221
 380:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5082               		.loc 1 380 28 is_stmt 0 view .LVU1222
 5083 0000 E0E0      		ldi r30,lo8(rgblight_config)
 5084 0002 F0E0      		ldi r31,hi8(rgblight_config)
 5085 0004 8081      		ld r24,Z
 5086 0006 8160      		ori r24,lo8(1<<0)
 5087 0008 8083      		st Z,r24
 381:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 5088               		.loc 1 381 97 is_stmt 1 view .LVU1223
 382:quantum/rgblight.c **** }
 5089               		.loc 1 382 5 view .LVU1224
 5090 000a 8695      		lsr r24
 5091 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 5092               	.LVL336:
 5093               		.cfi_endproc
 5094               	.LFE115:
 5096               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 5097               	.global	rgblight_toggle_noeeprom
 5099               	rgblight_toggle_noeeprom:
 5100               	.LFB113:
 362:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 5101               		.loc 1 362 37 view -0
 5102               		.cfi_startproc
 5103               	/* prologue: function */
 5104               	/* frame size = 0 */
 5105               	/* stack size = 0 */
 5106               	.L__stack_usage = 0
 363:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5107               		.loc 1 363 98 view .LVU1226
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5108               		.loc 1 364 5 view .LVU1227
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5109               		.loc 1 364 9 is_stmt 0 view .LVU1228
 5110 0000 8091 0000 		lds r24,rgblight_config
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5111               		.loc 1 364 8 view .LVU1229
 5112 0004 80FD      		sbrc r24,0
 365:quantum/rgblight.c ****     } else {
 5113               		.loc 1 365 9 is_stmt 1 view .LVU1230
 5114 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 5115               	.LVL337:
 5116               	.L240:
 367:quantum/rgblight.c ****     }
 5117               		.loc 1 367 9 view .LVU1231
 5118 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 5119               	.LVL338:
 5120               		.cfi_endproc
 5121               	.LFE113:
 5123               		.section	.text.rgblight_update_dword,"ax",@progbits
 5124               	.global	rgblight_update_dword
 5126               	rgblight_update_dword:
 5127               	.LVL339:
 5128               	.LFB99:
 265:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5129               		.loc 1 265 44 view -0
 5130               		.cfi_startproc
 5131               	/* prologue: function */
 5132               	/* frame size = 0 */
 5133               	/* stack size = 0 */
 5134               	.L__stack_usage = 0
 266:quantum/rgblight.c ****     rgblight_config.raw = dword;
 5135               		.loc 1 266 39 view .LVU1233
 267:quantum/rgblight.c ****     if (rgblight_config.enable)
 5136               		.loc 1 267 5 view .LVU1234
 267:quantum/rgblight.c ****     if (rgblight_config.enable)
 5137               		.loc 1 267 25 is_stmt 0 view .LVU1235
 5138 0000 6093 0000 		sts rgblight_config,r22
 5139 0004 7093 0000 		sts rgblight_config+1,r23
 5140 0008 8093 0000 		sts rgblight_config+2,r24
 5141 000c 9093 0000 		sts rgblight_config+3,r25
 268:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5142               		.loc 1 268 5 is_stmt 1 view .LVU1236
 268:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5143               		.loc 1 268 8 is_stmt 0 view .LVU1237
 5144 0010 60FF      		sbrs r22,0
 5145 0012 00C0      		rjmp .L242
 269:quantum/rgblight.c ****     else {
 5146               		.loc 1 269 9 is_stmt 1 view .LVU1238
 5147 0014 862F      		mov r24,r22
 5148 0016 8695      		lsr r24
 5149 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 5150               	.LVL340:
 5151               	.L242:
 271:quantum/rgblight.c ****         rgblight_set();
 5152               		.loc 1 271 9 view .LVU1239
 5153               	.LBB249:
 5154               	.LBI249:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5155               		.loc 1 894 6 view .LVU1240
 5156               	.LBB250:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5157               		.loc 1 895 5 view .LVU1241
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5158               		.loc 1 895 35 is_stmt 0 view .LVU1242
 5159 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5160               		.loc 1 896 43 is_stmt 1 view .LVU1243
 5161               	.LBE250:
 5162               	.LBE249:
 272:quantum/rgblight.c ****     }
 5163               		.loc 1 272 9 view .LVU1244
 5164 0020 0C94 0000 		jmp rgblight_set
 5165               	.LVL341:
 272:quantum/rgblight.c ****     }
 5166               		.loc 1 272 9 is_stmt 0 view .LVU1245
 5167               		.cfi_endproc
 5168               	.LFE99:
 5170               		.section	.text.rgblight_timer_disable,"ax",@progbits
 5171               	.global	rgblight_timer_disable
 5173               	rgblight_timer_disable:
 5174               	.LFB188:
 5175               		.cfi_startproc
 5176               	/* prologue: function */
 5177               	/* frame size = 0 */
 5178               	/* stack size = 0 */
 5179               	.L__stack_usage = 0
 5180 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 5181               	/* epilogue start */
 5182 0004 0895      		ret
 5183               		.cfi_endproc
 5184               	.LFE188:
 5186               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 5187               	.global	rgblight_timer_toggle
 5189               	rgblight_timer_toggle:
 5190               	.LFB170:
 911:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 5191               		.loc 1 911 34 is_stmt 1 view -0
 5192               		.cfi_startproc
 5193               	/* prologue: function */
 5194               	/* frame size = 0 */
 5195               	/* stack size = 0 */
 5196               	.L__stack_usage = 0
 912:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5197               		.loc 1 912 40 view .LVU1247
 913:quantum/rgblight.c ****         rgblight_timer_disable();
 5198               		.loc 1 913 5 view .LVU1248
 913:quantum/rgblight.c ****         rgblight_timer_disable();
 5199               		.loc 1 913 8 is_stmt 0 view .LVU1249
 5200 0000 8091 0000 		lds r24,rgblight_status+1
 5201 0004 8823      		tst r24
 5202 0006 01F0      		breq .L245
 914:quantum/rgblight.c ****     } else {
 5203               		.loc 1 914 9 is_stmt 1 view .LVU1250
 5204               	.LBB253:
 5205               	.LBI253:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5206               		.loc 1 894 6 view .LVU1251
 5207               	.LBB254:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5208               		.loc 1 895 5 view .LVU1252
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5209               		.loc 1 895 35 is_stmt 0 view .LVU1253
 5210 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5211               		.loc 1 896 43 is_stmt 1 view .LVU1254
 5212               	/* epilogue start */
 5213               	.LBE254:
 5214               	.LBE253:
 918:quantum/rgblight.c **** 
 5215               		.loc 1 918 1 is_stmt 0 view .LVU1255
 5216 000c 0895      		ret
 5217               	.L245:
 916:quantum/rgblight.c ****     }
 5218               		.loc 1 916 9 is_stmt 1 view .LVU1256
 5219 000e 0C94 0000 		jmp rgblight_timer_enable
 5220               	.LVL342:
 5221               		.cfi_endproc
 5222               	.LFE170:
 5224               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 5225               	.global	rgblight_show_solid_color
 5227               	rgblight_show_solid_color:
 5228               	.LVL343:
 5229               	.LFB171:
 920:quantum/rgblight.c ****     rgblight_enable();
 5230               		.loc 1 920 65 view -0
 5231               		.cfi_startproc
 920:quantum/rgblight.c ****     rgblight_enable();
 5232               		.loc 1 920 65 is_stmt 0 view .LVU1258
 5233 0000 1F93      		push r17
 5234               	.LCFI98:
 5235               		.cfi_def_cfa_offset 3
 5236               		.cfi_offset 17, -2
 5237 0002 CF93      		push r28
 5238               	.LCFI99:
 5239               		.cfi_def_cfa_offset 4
 5240               		.cfi_offset 28, -3
 5241 0004 DF93      		push r29
 5242               	.LCFI100:
 5243               		.cfi_def_cfa_offset 5
 5244               		.cfi_offset 29, -4
 5245               	/* prologue: function */
 5246               	/* frame size = 0 */
 5247               	/* stack size = 3 */
 5248               	.L__stack_usage = 3
 5249 0006 C82F      		mov r28,r24
 5250 0008 D62F      		mov r29,r22
 5251 000a 142F      		mov r17,r20
 921:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 5252               		.loc 1 921 5 is_stmt 1 view .LVU1259
 5253 000c 0E94 0000 		call rgblight_enable
 5254               	.LVL344:
 922:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 5255               		.loc 1 922 5 view .LVU1260
 5256 0010 81E0      		ldi r24,lo8(1)
 5257 0012 0E94 0000 		call rgblight_mode
 5258               	.LVL345:
 923:quantum/rgblight.c **** }
 5259               		.loc 1 923 5 view .LVU1261
 5260 0016 412F      		mov r20,r17
 5261 0018 6D2F      		mov r22,r29
 5262 001a 8C2F      		mov r24,r28
 5263               	/* epilogue start */
 924:quantum/rgblight.c **** 
 5264               		.loc 1 924 1 is_stmt 0 view .LVU1262
 5265 001c DF91      		pop r29
 5266               	.LVL346:
 924:quantum/rgblight.c **** 
 5267               		.loc 1 924 1 view .LVU1263
 5268 001e CF91      		pop r28
 5269               	.LVL347:
 924:quantum/rgblight.c **** 
 5270               		.loc 1 924 1 view .LVU1264
 5271 0020 1F91      		pop r17
 5272               	.LVL348:
 923:quantum/rgblight.c **** }
 5273               		.loc 1 923 5 view .LVU1265
 5274 0022 0C94 0000 		jmp rgblight_setrgb
 5275               	.LVL349:
 923:quantum/rgblight.c **** }
 5276               		.loc 1 923 5 view .LVU1266
 5277               		.cfi_endproc
 5278               	.LFE171:
 5280               		.section	.text.rgblight_task,"ax",@progbits
 5281               	.global	rgblight_task
 5283               	rgblight_task:
 5284               	.LFB173:
 938:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5285               		.loc 1 938 26 is_stmt 1 view -0
 5286               		.cfi_startproc
 5287 0000 0F93      		push r16
 5288               	.LCFI101:
 5289               		.cfi_def_cfa_offset 3
 5290               		.cfi_offset 16, -2
 5291 0002 1F93      		push r17
 5292               	.LCFI102:
 5293               		.cfi_def_cfa_offset 4
 5294               		.cfi_offset 17, -3
 5295 0004 CF93      		push r28
 5296               	.LCFI103:
 5297               		.cfi_def_cfa_offset 5
 5298               		.cfi_offset 28, -4
 5299 0006 DF93      		push r29
 5300               	.LCFI104:
 5301               		.cfi_def_cfa_offset 6
 5302               		.cfi_offset 29, -5
 5303               	/* prologue: function */
 5304               	/* frame size = 0 */
 5305               	/* stack size = 4 */
 5306               	.L__stack_usage = 4
 939:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5307               		.loc 1 939 5 view .LVU1268
 939:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5308               		.loc 1 939 8 is_stmt 0 view .LVU1269
 5309 0008 8091 0000 		lds r24,rgblight_status+1
 5310 000c 8823      		tst r24
 5311 000e 01F4      		brne .+2
 5312 0010 00C0      		rjmp .L249
 5313               	.LBB275:
 940:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5314               		.loc 1 940 9 is_stmt 1 view .LVU1270
 5315               	.LVL350:
 941:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5316               		.loc 1 941 9 view .LVU1271
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5317               		.loc 1 942 9 view .LVU1272
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5318               		.loc 1 942 77 is_stmt 0 view .LVU1273
 5319 0012 8091 0000 		lds r24,rgblight_status
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5320               		.loc 1 942 54 view .LVU1274
 5321 0016 E091 0000 		lds r30,rgblight_config
 5322 001a E695      		lsr r30
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5323               		.loc 1 942 23 view .LVU1275
 5324 001c E81B      		sub r30,r24
 5325               	.LVL351:
 943:quantum/rgblight.c **** 
 5326               		.loc 1 943 9 is_stmt 1 view .LVU1276
 943:quantum/rgblight.c **** 
 5327               		.loc 1 943 37 is_stmt 0 view .LVU1277
 5328 001e E093 0000 		sts animation_status+2,r30
 946:quantum/rgblight.c ****         }
 5329               		.loc 1 946 9 is_stmt 1 view .LVU1278
 949:quantum/rgblight.c ****             // breathing mode
 5330               		.loc 1 949 14 view .LVU1279
 949:quantum/rgblight.c ****             // breathing mode
 5331               		.loc 1 949 17 is_stmt 0 view .LVU1280
 5332 0022 8230      		cpi r24,lo8(2)
 5333 0024 01F4      		brne .L252
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5334               		.loc 1 951 13 is_stmt 1 view .LVU1281
 5335               	.LVL352:
 5336               	.LBB276:
 5337               	.LBI276:
 613:quantum/rgblight.c ****     return
 5338               		.loc 1 613 16 view .LVU1282
 613:quantum/rgblight.c ****     return
 5339               		.loc 1 613 16 is_stmt 0 view .LVU1283
 5340               	.LBE276:
 5341               	.LBE275:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5342               		.loc 1 614 5 is_stmt 1 view .LVU1284
 5343               	.LBB307:
 5344               	.LBB279:
 5345               	.LBB277:
 618:quantum/rgblight.c **** }
 5346               		.loc 1 618 29 view .LVU1285
 618:quantum/rgblight.c **** }
 5347               		.loc 1 618 29 view .LVU1286
 618:quantum/rgblight.c **** }
 5348               		.loc 1 618 29 view .LVU1287
 5349               	.LBE277:
 5350               	.LBE279:
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5351               		.loc 1 951 29 is_stmt 0 view .LVU1288
 5352 0026 F0E0      		ldi r31,0
 5353 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 5354 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 5355               	.LVL353:
 5356               	.LBB280:
 5357               	.LBB278:
 618:quantum/rgblight.c **** }
 5358               		.loc 1 618 29 view .LVU1289
 5359               	/* #APP */
 5360               	 ;  618 "quantum/rgblight.c" 1
 5361 002c E491      		lpm r30, Z
 5362               		
 5363               	 ;  0 "" 2
 5364               	.LVL354:
 618:quantum/rgblight.c **** }
 5365               		.loc 1 618 29 is_stmt 1 view .LVU1290
 618:quantum/rgblight.c **** }
 5366               		.loc 1 618 29 is_stmt 0 view .LVU1291
 5367               	/* #NOAPP */
 5368               	.LBE278:
 5369               	.LBE280:
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5370               		.loc 1 951 27 view .LVU1292
 5371 002e CE2F      		mov r28,r30
 5372 0030 D0E0      		ldi r29,0
 5373               	.LVL355:
 952:quantum/rgblight.c ****         }
 5374               		.loc 1 952 13 is_stmt 1 view .LVU1293
 952:quantum/rgblight.c ****         }
 5375               		.loc 1 952 27 is_stmt 0 view .LVU1294
 5376 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 5377 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 5378               	.LVL356:
 5379               	.L253:
1009:quantum/rgblight.c ****             animation_status.restart    = false;
 5380               		.loc 1 1009 9 is_stmt 1 view .LVU1295
1009:quantum/rgblight.c ****             animation_status.restart    = false;
 5381               		.loc 1 1009 12 is_stmt 0 view .LVU1296
 5382 0036 8091 0000 		lds r24,animation_status+3
 5383 003a 8823      		tst r24
 5384 003c 01F0      		breq .L259
1010:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5385               		.loc 1 1010 13 is_stmt 1 view .LVU1297
1010:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5386               		.loc 1 1010 41 is_stmt 0 view .LVU1298
 5387 003e 1092 0000 		sts animation_status+3,__zero_reg__
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5388               		.loc 1 1011 13 is_stmt 1 view .LVU1299
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5389               		.loc 1 1011 43 is_stmt 0 view .LVU1300
 5390 0042 0E94 0000 		call timer_read
 5391               	.LVL357:
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5392               		.loc 1 1011 41 view .LVU1301
 5393 0046 9093 0000 		sts animation_status+1,r25
 5394 004a 8093 0000 		sts animation_status,r24
1012:quantum/rgblight.c ****         }
 5395               		.loc 1 1012 13 is_stmt 1 view .LVU1302
1012:quantum/rgblight.c ****         }
 5396               		.loc 1 1012 41 is_stmt 0 view .LVU1303
 5397 004e 1092 0000 		sts animation_status+4+1,__zero_reg__
 5398 0052 1092 0000 		sts animation_status+4,__zero_reg__
 5399               	.L259:
1014:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5400               		.loc 1 1014 9 is_stmt 1 view .LVU1304
1014:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5401               		.loc 1 1014 24 is_stmt 0 view .LVU1305
 5402 0056 0E94 0000 		call timer_read
 5403               	.LVL358:
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5404               		.loc 1 1015 9 is_stmt 1 view .LVU1306
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5405               		.loc 1 1015 13 is_stmt 0 view .LVU1307
 5406 005a E091 0000 		lds r30,animation_status
 5407 005e F091 0000 		lds r31,animation_status+1
 5408 0062 8E1B      		sub r24,r30
 5409 0064 9F0B      		sbc r25,r31
 5410               	.LVL359:
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5411               		.loc 1 1015 12 view .LVU1308
 5412 0066 8F3F      		cpi r24,-1
 5413 0068 9F47      		sbci r25,127
 5414 006a 00F0      		brlo .+2
 5415 006c 00C0      		rjmp .L249
1030:quantum/rgblight.c ****             effect_func(&animation_status);
 5416               		.loc 1 1030 13 is_stmt 1 view .LVU1309
1030:quantum/rgblight.c ****             effect_func(&animation_status);
 5417               		.loc 1 1030 41 is_stmt 0 view .LVU1310
 5418 006e EC0F      		add r30,r28
 5419 0070 FD1F      		adc r31,r29
 5420 0072 F093 0000 		sts animation_status+1,r31
 5421 0076 E093 0000 		sts animation_status,r30
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5422               		.loc 1 1031 13 is_stmt 1 view .LVU1311
 5423 007a 80E0      		ldi r24,lo8(animation_status)
 5424 007c 90E0      		ldi r25,hi8(animation_status)
 5425 007e F801      		movw r30,r16
 5426               	/* epilogue start */
 5427               	.LBE307:
1043:quantum/rgblight.c **** 
 5428               		.loc 1 1043 1 is_stmt 0 view .LVU1312
 5429 0080 DF91      		pop r29
 5430 0082 CF91      		pop r28
 5431               	.LVL360:
1043:quantum/rgblight.c **** 
 5432               		.loc 1 1043 1 view .LVU1313
 5433 0084 1F91      		pop r17
 5434 0086 0F91      		pop r16
 5435               	.LVL361:
 5436               	.LBB308:
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5437               		.loc 1 1031 13 view .LVU1314
 5438 0088 0994      		ijmp
 5439               	.LVL362:
 5440               	.L252:
 956:quantum/rgblight.c ****             // rainbow mood mode
 5441               		.loc 1 956 14 is_stmt 1 view .LVU1315
 956:quantum/rgblight.c ****             // rainbow mood mode
 5442               		.loc 1 956 17 is_stmt 0 view .LVU1316
 5443 008a 8630      		cpi r24,lo8(6)
 5444 008c 01F4      		brne .L254
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5445               		.loc 1 958 13 is_stmt 1 view .LVU1317
 5446               	.LVL363:
 5447               	.LBB281:
 5448               	.LBI281:
 613:quantum/rgblight.c ****     return
 5449               		.loc 1 613 16 view .LVU1318
 613:quantum/rgblight.c ****     return
 5450               		.loc 1 613 16 is_stmt 0 view .LVU1319
 5451               	.LBE281:
 5452               	.LBE308:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5453               		.loc 1 614 5 is_stmt 1 view .LVU1320
 5454               	.LBB309:
 5455               	.LBB284:
 5456               	.LBB282:
 618:quantum/rgblight.c **** }
 5457               		.loc 1 618 29 view .LVU1321
 618:quantum/rgblight.c **** }
 5458               		.loc 1 618 29 view .LVU1322
 618:quantum/rgblight.c **** }
 5459               		.loc 1 618 29 view .LVU1323
 5460               	.LBE282:
 5461               	.LBE284:
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5462               		.loc 1 958 29 is_stmt 0 view .LVU1324
 5463 008e F0E0      		ldi r31,0
 5464 0090 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5465 0092 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5466               	.LVL364:
 5467               	.LBB285:
 5468               	.LBB283:
 618:quantum/rgblight.c **** }
 5469               		.loc 1 618 29 view .LVU1325
 5470               	/* #APP */
 5471               	 ;  618 "quantum/rgblight.c" 1
 5472 0094 E491      		lpm r30, Z
 5473               		
 5474               	 ;  0 "" 2
 5475               	.LVL365:
 618:quantum/rgblight.c **** }
 5476               		.loc 1 618 29 is_stmt 1 view .LVU1326
 618:quantum/rgblight.c **** }
 5477               		.loc 1 618 29 is_stmt 0 view .LVU1327
 5478               	/* #NOAPP */
 5479               	.LBE283:
 5480               	.LBE285:
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5481               		.loc 1 958 27 view .LVU1328
 5482 0096 CE2F      		mov r28,r30
 5483 0098 D0E0      		ldi r29,0
 5484               	.LVL366:
 959:quantum/rgblight.c ****         }
 5485               		.loc 1 959 13 is_stmt 1 view .LVU1329
 959:quantum/rgblight.c ****         }
 5486               		.loc 1 959 27 is_stmt 0 view .LVU1330
 5487 009a 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 5488 009c 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 5489 009e 00C0      		rjmp .L253
 5490               	.LVL367:
 5491               	.L254:
 963:quantum/rgblight.c ****             // rainbow swirl mode
 5492               		.loc 1 963 14 is_stmt 1 view .LVU1331
 963:quantum/rgblight.c ****             // rainbow swirl mode
 5493               		.loc 1 963 17 is_stmt 0 view .LVU1332
 5494 00a0 8930      		cpi r24,lo8(9)
 5495 00a2 01F4      		brne .L255
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5496               		.loc 1 965 13 is_stmt 1 view .LVU1333
 5497               	.LVL368:
 5498               	.LBB286:
 5499               	.LBI286:
 613:quantum/rgblight.c ****     return
 5500               		.loc 1 613 16 view .LVU1334
 613:quantum/rgblight.c ****     return
 5501               		.loc 1 613 16 is_stmt 0 view .LVU1335
 5502               	.LBE286:
 5503               	.LBE309:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5504               		.loc 1 614 5 is_stmt 1 view .LVU1336
 5505               	.LBB310:
 5506               	.LBB289:
 5507               	.LBB287:
 618:quantum/rgblight.c **** }
 5508               		.loc 1 618 29 view .LVU1337
 618:quantum/rgblight.c **** }
 5509               		.loc 1 618 29 view .LVU1338
 618:quantum/rgblight.c **** }
 5510               		.loc 1 618 29 view .LVU1339
 5511               	.LBE287:
 5512               	.LBE289:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5513               		.loc 1 965 85 is_stmt 0 view .LVU1340
 5514 00a4 E695      		lsr r30
 5515               	.LVL369:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5516               		.loc 1 965 29 view .LVU1341
 5517 00a6 F0E0      		ldi r31,0
 5518 00a8 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5519 00aa F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5520               	.LBB290:
 5521               	.LBB288:
 618:quantum/rgblight.c **** }
 5522               		.loc 1 618 29 view .LVU1342
 5523               	/* #APP */
 5524               	 ;  618 "quantum/rgblight.c" 1
 5525 00ac E491      		lpm r30, Z
 5526               		
 5527               	 ;  0 "" 2
 5528               	.LVL370:
 618:quantum/rgblight.c **** }
 5529               		.loc 1 618 29 is_stmt 1 view .LVU1343
 618:quantum/rgblight.c **** }
 5530               		.loc 1 618 29 is_stmt 0 view .LVU1344
 5531               	/* #NOAPP */
 5532               	.LBE288:
 5533               	.LBE290:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5534               		.loc 1 965 27 view .LVU1345
 5535 00ae CE2F      		mov r28,r30
 5536 00b0 D0E0      		ldi r29,0
 5537               	.LVL371:
 966:quantum/rgblight.c ****         }
 5538               		.loc 1 966 13 is_stmt 1 view .LVU1346
 966:quantum/rgblight.c ****         }
 5539               		.loc 1 966 27 is_stmt 0 view .LVU1347
 5540 00b2 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 5541 00b4 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 5542 00b6 00C0      		rjmp .L253
 5543               	.LVL372:
 5544               	.L255:
 970:quantum/rgblight.c ****             // snake mode
 5545               		.loc 1 970 14 is_stmt 1 view .LVU1348
 970:quantum/rgblight.c ****             // snake mode
 5546               		.loc 1 970 17 is_stmt 0 view .LVU1349
 5547 00b8 8F30      		cpi r24,lo8(15)
 5548 00ba 01F4      		brne .L256
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5549               		.loc 1 972 13 is_stmt 1 view .LVU1350
 5550               	.LVL373:
 5551               	.LBB291:
 5552               	.LBI291:
 613:quantum/rgblight.c ****     return
 5553               		.loc 1 613 16 view .LVU1351
 613:quantum/rgblight.c ****     return
 5554               		.loc 1 613 16 is_stmt 0 view .LVU1352
 5555               	.LBE291:
 5556               	.LBE310:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5557               		.loc 1 614 5 is_stmt 1 view .LVU1353
 5558               	.LBB311:
 5559               	.LBB294:
 5560               	.LBB292:
 618:quantum/rgblight.c **** }
 5561               		.loc 1 618 29 view .LVU1354
 618:quantum/rgblight.c **** }
 5562               		.loc 1 618 29 view .LVU1355
 618:quantum/rgblight.c **** }
 5563               		.loc 1 618 29 view .LVU1356
 5564               	.LBE292:
 5565               	.LBE294:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5566               		.loc 1 972 77 is_stmt 0 view .LVU1357
 5567 00bc E695      		lsr r30
 5568               	.LVL374:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5569               		.loc 1 972 29 view .LVU1358
 5570 00be F0E0      		ldi r31,0
 5571 00c0 E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 5572 00c2 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 5573               	.LBB295:
 5574               	.LBB293:
 618:quantum/rgblight.c **** }
 5575               		.loc 1 618 29 view .LVU1359
 5576               	/* #APP */
 5577               	 ;  618 "quantum/rgblight.c" 1
 5578 00c4 E491      		lpm r30, Z
 5579               		
 5580               	 ;  0 "" 2
 5581               	.LVL375:
 618:quantum/rgblight.c **** }
 5582               		.loc 1 618 29 is_stmt 1 view .LVU1360
 618:quantum/rgblight.c **** }
 5583               		.loc 1 618 29 is_stmt 0 view .LVU1361
 5584               	/* #NOAPP */
 5585               	.LBE293:
 5586               	.LBE295:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5587               		.loc 1 972 27 view .LVU1362
 5588 00c6 CE2F      		mov r28,r30
 5589 00c8 D0E0      		ldi r29,0
 5590               	.LVL376:
 973:quantum/rgblight.c ****         }
 5591               		.loc 1 973 13 is_stmt 1 view .LVU1363
 973:quantum/rgblight.c ****         }
 5592               		.loc 1 973 27 is_stmt 0 view .LVU1364
 5593 00ca 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 5594 00cc 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 5595 00ce 00C0      		rjmp .L253
 5596               	.LVL377:
 5597               	.L256:
 977:quantum/rgblight.c ****             // knight mode
 5598               		.loc 1 977 14 is_stmt 1 view .LVU1365
 977:quantum/rgblight.c ****             // knight mode
 5599               		.loc 1 977 17 is_stmt 0 view .LVU1366
 5600 00d0 8531      		cpi r24,lo8(21)
 5601 00d2 01F4      		brne .L257
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5602               		.loc 1 979 13 is_stmt 1 view .LVU1367
 5603               	.LVL378:
 5604               	.LBB296:
 5605               	.LBI296:
 613:quantum/rgblight.c ****     return
 5606               		.loc 1 613 16 view .LVU1368
 613:quantum/rgblight.c ****     return
 5607               		.loc 1 613 16 is_stmt 0 view .LVU1369
 5608               	.LBE296:
 5609               	.LBE311:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5610               		.loc 1 614 5 is_stmt 1 view .LVU1370
 5611               	.LBB312:
 5612               	.LBB299:
 5613               	.LBB297:
 618:quantum/rgblight.c **** }
 5614               		.loc 1 618 29 view .LVU1371
 618:quantum/rgblight.c **** }
 5615               		.loc 1 618 29 view .LVU1372
 618:quantum/rgblight.c **** }
 5616               		.loc 1 618 29 view .LVU1373
 5617               	.LBE297:
 5618               	.LBE299:
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5619               		.loc 1 979 29 is_stmt 0 view .LVU1374
 5620 00d4 F0E0      		ldi r31,0
 5621 00d6 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 5622 00d8 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 5623               	.LVL379:
 5624               	.LBB300:
 5625               	.LBB298:
 618:quantum/rgblight.c **** }
 5626               		.loc 1 618 29 view .LVU1375
 5627               	/* #APP */
 5628               	 ;  618 "quantum/rgblight.c" 1
 5629 00da E491      		lpm r30, Z
 5630               		
 5631               	 ;  0 "" 2
 5632               	.LVL380:
 618:quantum/rgblight.c **** }
 5633               		.loc 1 618 29 is_stmt 1 view .LVU1376
 618:quantum/rgblight.c **** }
 5634               		.loc 1 618 29 is_stmt 0 view .LVU1377
 5635               	/* #NOAPP */
 5636               	.LBE298:
 5637               	.LBE300:
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5638               		.loc 1 979 27 view .LVU1378
 5639 00dc CE2F      		mov r28,r30
 5640 00de D0E0      		ldi r29,0
 5641               	.LVL381:
 980:quantum/rgblight.c ****         }
 5642               		.loc 1 980 13 is_stmt 1 view .LVU1379
 980:quantum/rgblight.c ****         }
 5643               		.loc 1 980 27 is_stmt 0 view .LVU1380
 5644 00e0 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 5645 00e2 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 5646 00e4 00C0      		rjmp .L253
 5647               	.LVL382:
 5648               	.L257:
 984:quantum/rgblight.c ****             // christmas mode
 5649               		.loc 1 984 14 is_stmt 1 view .LVU1381
 986:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 5650               		.loc 1 986 27 is_stmt 0 view .LVU1382
 5651 00e6 C8E2      		ldi r28,lo8(40)
 5652 00e8 D0E0      		ldi r29,0
 987:quantum/rgblight.c ****         }
 5653               		.loc 1 987 27 view .LVU1383
 5654 00ea 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 5655 00ec 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 984:quantum/rgblight.c ****             // christmas mode
 5656               		.loc 1 984 17 view .LVU1384
 5657 00ee 8831      		cpi r24,lo8(24)
 5658 00f0 01F4      		brne .+2
 5659 00f2 00C0      		rjmp .L253
 991:quantum/rgblight.c ****             // RGB test mode
 5660               		.loc 1 991 14 is_stmt 1 view .LVU1385
 991:quantum/rgblight.c ****             // RGB test mode
 5661               		.loc 1 991 17 is_stmt 0 view .LVU1386
 5662 00f4 8332      		cpi r24,lo8(35)
 5663 00f6 01F4      		brne .L258
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5664               		.loc 1 993 13 is_stmt 1 view .LVU1387
 5665               	.LBB301:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5666               		.loc 1 993 29 view .LVU1388
 5667               	.LVL383:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5668               		.loc 1 993 29 view .LVU1389
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5669               		.loc 1 993 29 view .LVU1390
 5670 00f8 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 5671 00fa F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 5672               	.LVL384:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5673               		.loc 1 993 29 is_stmt 0 view .LVU1391
 5674               	/* #APP */
 5675               	 ;  993 "quantum/rgblight.c" 1
 5676 00fc C591      		lpm r28, Z+
 5677 00fe D491      		lpm r29, Z
 5678               		
 5679               	 ;  0 "" 2
 5680               	.LVL385:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5681               		.loc 1 993 29 is_stmt 1 view .LVU1392
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5682               		.loc 1 993 29 is_stmt 0 view .LVU1393
 5683               	/* #NOAPP */
 5684               	.LBE301:
 994:quantum/rgblight.c ****         }
 5685               		.loc 1 994 13 is_stmt 1 view .LVU1394
 994:quantum/rgblight.c ****         }
 5686               		.loc 1 994 27 is_stmt 0 view .LVU1395
 5687 0100 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 5688 0102 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 5689 0104 00C0      		rjmp .L253
 5690               	.LVL386:
 5691               	.L258:
 998:quantum/rgblight.c ****             interval_time = 500;
 5692               		.loc 1 998 14 is_stmt 1 view .LVU1396
 999:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 5693               		.loc 1 999 27 is_stmt 0 view .LVU1397
 5694 0106 C4EF      		ldi r28,lo8(-12)
 5695 0108 D1E0      		ldi r29,lo8(1)
1000:quantum/rgblight.c ****         }
 5696               		.loc 1 1000 27 view .LVU1398
 5697 010a 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 5698 010c 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 998:quantum/rgblight.c ****             interval_time = 500;
 5699               		.loc 1 998 17 view .LVU1399
 5700 010e 8432      		cpi r24,lo8(36)
 5701 0110 01F4      		brne .+2
 5702 0112 00C0      		rjmp .L253
1004:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5703               		.loc 1 1004 14 is_stmt 1 view .LVU1400
 941:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5704               		.loc 1 941 23 is_stmt 0 view .LVU1401
 5705 0114 C0ED      		ldi r28,lo8(-48)
 5706 0116 D7E0      		ldi r29,lo8(7)
 940:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5707               		.loc 1 940 23 view .LVU1402
 5708 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 5709 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
1004:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5710               		.loc 1 1004 17 view .LVU1403
 5711 011c 8532      		cpi r24,lo8(37)
 5712 011e 01F0      		breq .+2
 5713 0120 00C0      		rjmp .L253
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5714               		.loc 1 1005 13 is_stmt 1 view .LVU1404
 5715               	.LVL387:
 5716               	.LBB302:
 5717               	.LBI302:
 613:quantum/rgblight.c ****     return
 5718               		.loc 1 613 16 view .LVU1405
 613:quantum/rgblight.c ****     return
 5719               		.loc 1 613 16 is_stmt 0 view .LVU1406
 5720               	.LBE302:
 5721               	.LBE312:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5722               		.loc 1 614 5 is_stmt 1 view .LVU1407
 5723               	.LBB313:
 5724               	.LBB305:
 5725               	.LBB303:
 618:quantum/rgblight.c **** }
 5726               		.loc 1 618 29 view .LVU1408
 618:quantum/rgblight.c **** }
 5727               		.loc 1 618 29 view .LVU1409
 618:quantum/rgblight.c **** }
 5728               		.loc 1 618 29 view .LVU1410
 5729               	.LBE303:
 5730               	.LBE305:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5731               		.loc 1 1005 79 is_stmt 0 view .LVU1411
 5732 0122 8E2F      		mov r24,r30
 5733 0124 63E0      		ldi r22,lo8(3)
 5734 0126 0E94 0000 		call __udivmodqi4
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5735               		.loc 1 1005 29 view .LVU1412
 5736 012a E92F      		mov r30,r25
 5737               	.LVL388:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5738               		.loc 1 1005 29 view .LVU1413
 5739 012c F0E0      		ldi r31,0
 5740 012e E050      		subi r30,lo8(-(RGBLED_TWINKLE_INTERVALS))
 5741 0130 F040      		sbci r31,hi8(-(RGBLED_TWINKLE_INTERVALS))
 5742               	.LBB306:
 5743               	.LBB304:
 618:quantum/rgblight.c **** }
 5744               		.loc 1 618 29 view .LVU1414
 5745               	/* #APP */
 5746               	 ;  618 "quantum/rgblight.c" 1
 5747 0132 E491      		lpm r30, Z
 5748               		
 5749               	 ;  0 "" 2
 5750               	.LVL389:
 618:quantum/rgblight.c **** }
 5751               		.loc 1 618 29 is_stmt 1 view .LVU1415
 618:quantum/rgblight.c **** }
 5752               		.loc 1 618 29 is_stmt 0 view .LVU1416
 5753               	/* #NOAPP */
 5754               	.LBE304:
 5755               	.LBE306:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5756               		.loc 1 1005 27 view .LVU1417
 5757 0134 CE2F      		mov r28,r30
 5758 0136 D0E0      		ldi r29,0
 5759               	.LVL390:
1006:quantum/rgblight.c ****         }
 5760               		.loc 1 1006 13 is_stmt 1 view .LVU1418
1006:quantum/rgblight.c ****         }
 5761               		.loc 1 1006 27 is_stmt 0 view .LVU1419
 5762 0138 00E0      		ldi r16,lo8(gs(rgblight_effect_twinkle))
 5763 013a 10E0      		ldi r17,hi8(gs(rgblight_effect_twinkle))
 5764 013c 00C0      		rjmp .L253
 5765               	.LVL391:
 5766               	.L249:
 5767               	/* epilogue start */
1006:quantum/rgblight.c ****         }
 5768               		.loc 1 1006 27 view .LVU1420
 5769               	.LBE313:
1043:quantum/rgblight.c **** 
 5770               		.loc 1 1043 1 view .LVU1421
 5771 013e DF91      		pop r29
 5772 0140 CF91      		pop r28
 5773 0142 1F91      		pop r17
 5774 0144 0F91      		pop r16
 5775 0146 0895      		ret
 5776               		.cfi_endproc
 5777               	.LFE173:
 5779               		.section	.bss.maxval.3469,"aw",@nobits
 5782               	maxval.3469:
 5783 0000 00        		.zero	1
 5784               		.section	.data.increment.3454,"aw"
 5787               	increment.3454:
 5788 0000 01        		.byte	1
 5789               		.section	.data.increment.3442,"aw"
 5792               	increment.3442:
 5793 0000 01        		.byte	1
 5794               		.section	.data.high_bound.3441,"aw"
 5797               	high_bound.3441:
 5798 0000 02        		.byte	2
 5799               		.section	.bss.low_bound.3440,"aw",@nobits
 5802               	low_bound.3440:
 5803 0000 00        		.zero	1
 5804               		.section	.bss.pos.3424,"aw",@nobits
 5807               	pos.3424:
 5808 0000 00        		.zero	1
 5809               		.section	.bss.led_twinkle_state,"aw",@nobits
 5812               	led_twinkle_state:
 5813 0000 0000 0000 		.zero	40
 5813      0000 0000 
 5813      0000 0000 
 5813      0000 0000 
 5813      0000 0000 
 5814               		.weak	RGBLED_TWINKLE_INTERVALS
 5815               		.section	.progmem.data.RGBLED_TWINKLE_INTERVALS,"a"
 5818               	RGBLED_TWINKLE_INTERVALS:
 5819 0000 1E        		.byte	30
 5820 0001 0F        		.byte	15
 5821 0002 05        		.byte	5
 5822               		.weak	RGBLED_RGBTEST_INTERVALS
 5823               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 5826               	RGBLED_RGBTEST_INTERVALS:
 5827 0000 0004      		.word	1024
 5828               		.weak	RGBLED_KNIGHT_INTERVALS
 5829               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 5832               	RGBLED_KNIGHT_INTERVALS:
 5833 0000 7F        		.byte	127
 5834 0001 3F        		.byte	63
 5835 0002 1F        		.byte	31
 5836               		.weak	RGBLED_SNAKE_INTERVALS
 5837               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 5840               	RGBLED_SNAKE_INTERVALS:
 5841 0000 64        		.byte	100
 5842 0001 32        		.byte	50
 5843 0002 14        		.byte	20
 5844               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 5845               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 5848               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 5849 0000 64        		.byte	100
 5850 0001 32        		.byte	50
 5851 0002 14        		.byte	20
 5852               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 5853               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 5856               	RGBLED_RAINBOW_MOOD_INTERVALS:
 5857 0000 78        		.byte	120
 5858 0001 3C        		.byte	60
 5859 0002 1E        		.byte	30
 5860               		.weak	RGBLED_BREATHING_INTERVALS
 5861               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 5864               	RGBLED_BREATHING_INTERVALS:
 5865 0000 1E        		.byte	30
 5866 0001 14        		.byte	20
 5867 0002 0A        		.byte	10
 5868 0003 05        		.byte	5
 5869               	.global	rgblight_effect_breathe_table
 5870               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 5873               	rgblight_effect_breathe_table:
 5874 0000 22        		.byte	34
 5875 0001 23        		.byte	35
 5876 0002 25        		.byte	37
 5877 0003 26        		.byte	38
 5878 0004 28        		.byte	40
 5879 0005 29        		.byte	41
 5880 0006 2A        		.byte	42
 5881 0007 2C        		.byte	44
 5882 0008 2D        		.byte	45
 5883 0009 2F        		.byte	47
 5884 000a 30        		.byte	48
 5885 000b 32        		.byte	50
 5886 000c 33        		.byte	51
 5887 000d 35        		.byte	53
 5888 000e 36        		.byte	54
 5889 000f 38        		.byte	56
 5890 0010 3A        		.byte	58
 5891 0011 3B        		.byte	59
 5892 0012 3D        		.byte	61
 5893 0013 3E        		.byte	62
 5894 0014 40        		.byte	64
 5895 0015 42        		.byte	66
 5896 0016 43        		.byte	67
 5897 0017 45        		.byte	69
 5898 0018 47        		.byte	71
 5899 0019 49        		.byte	73
 5900 001a 4A        		.byte	74
 5901 001b 4C        		.byte	76
 5902 001c 4E        		.byte	78
 5903 001d 50        		.byte	80
 5904 001e 51        		.byte	81
 5905 001f 53        		.byte	83
 5906 0020 55        		.byte	85
 5907 0021 57        		.byte	87
 5908 0022 59        		.byte	89
 5909 0023 5A        		.byte	90
 5910 0024 5C        		.byte	92
 5911 0025 5E        		.byte	94
 5912 0026 60        		.byte	96
 5913 0027 62        		.byte	98
 5914 0028 64        		.byte	100
 5915 0029 66        		.byte	102
 5916 002a 68        		.byte	104
 5917 002b 69        		.byte	105
 5918 002c 6B        		.byte	107
 5919 002d 6D        		.byte	109
 5920 002e 6F        		.byte	111
 5921 002f 71        		.byte	113
 5922 0030 73        		.byte	115
 5923 0031 75        		.byte	117
 5924 0032 77        		.byte	119
 5925 0033 79        		.byte	121
 5926 0034 7B        		.byte	123
 5927 0035 7D        		.byte	125
 5928 0036 7F        		.byte	127
 5929 0037 81        		.byte	-127
 5930 0038 83        		.byte	-125
 5931 0039 85        		.byte	-123
 5932 003a 87        		.byte	-121
 5933 003b 89        		.byte	-119
 5934 003c 8A        		.byte	-118
 5935 003d 8C        		.byte	-116
 5936 003e 8E        		.byte	-114
 5937 003f 90        		.byte	-112
 5938 0040 92        		.byte	-110
 5939 0041 94        		.byte	-108
 5940 0042 96        		.byte	-106
 5941 0043 98        		.byte	-104
 5942 0044 9A        		.byte	-102
 5943 0045 9C        		.byte	-100
 5944 0046 9E        		.byte	-98
 5945 0047 9F        		.byte	-97
 5946 0048 A1        		.byte	-95
 5947 0049 A3        		.byte	-93
 5948 004a A5        		.byte	-91
 5949 004b A7        		.byte	-89
 5950 004c A8        		.byte	-88
 5951 004d AA        		.byte	-86
 5952 004e AC        		.byte	-84
 5953 004f AE        		.byte	-82
 5954 0050 AF        		.byte	-81
 5955 0051 B1        		.byte	-79
 5956 0052 B3        		.byte	-77
 5957 0053 B4        		.byte	-76
 5958 0054 B6        		.byte	-74
 5959 0055 B8        		.byte	-72
 5960 0056 B9        		.byte	-71
 5961 0057 BB        		.byte	-69
 5962 0058 BC        		.byte	-68
 5963 0059 BE        		.byte	-66
 5964 005a BF        		.byte	-65
 5965 005b C1        		.byte	-63
 5966 005c C2        		.byte	-62
 5967 005d C3        		.byte	-61
 5968 005e C5        		.byte	-59
 5969 005f C6        		.byte	-58
 5970 0060 C7        		.byte	-57
 5971 0061 C9        		.byte	-55
 5972 0062 CA        		.byte	-54
 5973 0063 CB        		.byte	-53
 5974 0064 CC        		.byte	-52
 5975 0065 CD        		.byte	-51
 5976 0066 CE        		.byte	-50
 5977 0067 D0        		.byte	-48
 5978 0068 D1        		.byte	-47
 5979 0069 D2        		.byte	-46
 5980 006a D2        		.byte	-46
 5981 006b D3        		.byte	-45
 5982 006c D4        		.byte	-44
 5983 006d D5        		.byte	-43
 5984 006e D6        		.byte	-42
 5985 006f D7        		.byte	-41
 5986 0070 D7        		.byte	-41
 5987 0071 D8        		.byte	-40
 5988 0072 D9        		.byte	-39
 5989 0073 D9        		.byte	-39
 5990 0074 DA        		.byte	-38
 5991 0075 DA        		.byte	-38
 5992 0076 DB        		.byte	-37
 5993 0077 DB        		.byte	-37
 5994 0078 DB        		.byte	-37
 5995 0079 DC        		.byte	-36
 5996 007a DC        		.byte	-36
 5997 007b DC        		.byte	-36
 5998 007c DC        		.byte	-36
 5999 007d DC        		.byte	-36
 6000 007e DD        		.byte	-35
 6001 007f DD        		.byte	-35
 6002 0080 DD        		.byte	-35
 6003 0081 DD        		.byte	-35
 6004 0082 DC        		.byte	-36
 6005 0083 DC        		.byte	-36
 6006 0084 DC        		.byte	-36
 6007 0085 DC        		.byte	-36
 6008 0086 DC        		.byte	-36
 6009 0087 DB        		.byte	-37
 6010 0088 DB        		.byte	-37
 6011 0089 DB        		.byte	-37
 6012 008a DA        		.byte	-38
 6013 008b DA        		.byte	-38
 6014 008c D9        		.byte	-39
 6015 008d D9        		.byte	-39
 6016 008e D8        		.byte	-40
 6017 008f D7        		.byte	-41
 6018 0090 D7        		.byte	-41
 6019 0091 D6        		.byte	-42
 6020 0092 D5        		.byte	-43
 6021 0093 D4        		.byte	-44
 6022 0094 D3        		.byte	-45
 6023 0095 D2        		.byte	-46
 6024 0096 D2        		.byte	-46
 6025 0097 D1        		.byte	-47
 6026 0098 D0        		.byte	-48
 6027 0099 CE        		.byte	-50
 6028 009a CD        		.byte	-51
 6029 009b CC        		.byte	-52
 6030 009c CB        		.byte	-53
 6031 009d CA        		.byte	-54
 6032 009e C9        		.byte	-55
 6033 009f C7        		.byte	-57
 6034 00a0 C6        		.byte	-58
 6035 00a1 C5        		.byte	-59
 6036 00a2 C3        		.byte	-61
 6037 00a3 C2        		.byte	-62
 6038 00a4 C1        		.byte	-63
 6039 00a5 BF        		.byte	-65
 6040 00a6 BE        		.byte	-66
 6041 00a7 BC        		.byte	-68
 6042 00a8 BB        		.byte	-69
 6043 00a9 B9        		.byte	-71
 6044 00aa B8        		.byte	-72
 6045 00ab B6        		.byte	-74
 6046 00ac B4        		.byte	-76
 6047 00ad B3        		.byte	-77
 6048 00ae B1        		.byte	-79
 6049 00af AF        		.byte	-81
 6050 00b0 AE        		.byte	-82
 6051 00b1 AC        		.byte	-84
 6052 00b2 AA        		.byte	-86
 6053 00b3 A8        		.byte	-88
 6054 00b4 A7        		.byte	-89
 6055 00b5 A5        		.byte	-91
 6056 00b6 A3        		.byte	-93
 6057 00b7 A1        		.byte	-95
 6058 00b8 9F        		.byte	-97
 6059 00b9 9E        		.byte	-98
 6060 00ba 9C        		.byte	-100
 6061 00bb 9A        		.byte	-102
 6062 00bc 98        		.byte	-104
 6063 00bd 96        		.byte	-106
 6064 00be 94        		.byte	-108
 6065 00bf 92        		.byte	-110
 6066 00c0 90        		.byte	-112
 6067 00c1 8E        		.byte	-114
 6068 00c2 8C        		.byte	-116
 6069 00c3 8A        		.byte	-118
 6070 00c4 89        		.byte	-119
 6071 00c5 87        		.byte	-121
 6072 00c6 85        		.byte	-123
 6073 00c7 83        		.byte	-125
 6074 00c8 81        		.byte	-127
 6075 00c9 7F        		.byte	127
 6076 00ca 7D        		.byte	125
 6077 00cb 7B        		.byte	123
 6078 00cc 79        		.byte	121
 6079 00cd 77        		.byte	119
 6080 00ce 75        		.byte	117
 6081 00cf 73        		.byte	115
 6082 00d0 71        		.byte	113
 6083 00d1 6F        		.byte	111
 6084 00d2 6D        		.byte	109
 6085 00d3 6B        		.byte	107
 6086 00d4 69        		.byte	105
 6087 00d5 68        		.byte	104
 6088 00d6 66        		.byte	102
 6089 00d7 64        		.byte	100
 6090 00d8 62        		.byte	98
 6091 00d9 60        		.byte	96
 6092 00da 5E        		.byte	94
 6093 00db 5C        		.byte	92
 6094 00dc 5A        		.byte	90
 6095 00dd 59        		.byte	89
 6096 00de 57        		.byte	87
 6097 00df 55        		.byte	85
 6098 00e0 53        		.byte	83
 6099 00e1 51        		.byte	81
 6100 00e2 50        		.byte	80
 6101 00e3 4E        		.byte	78
 6102 00e4 4C        		.byte	76
 6103 00e5 4A        		.byte	74
 6104 00e6 49        		.byte	73
 6105 00e7 47        		.byte	71
 6106 00e8 45        		.byte	69
 6107 00e9 43        		.byte	67
 6108 00ea 42        		.byte	66
 6109 00eb 40        		.byte	64
 6110 00ec 3E        		.byte	62
 6111 00ed 3D        		.byte	61
 6112 00ee 3B        		.byte	59
 6113 00ef 3A        		.byte	58
 6114 00f0 38        		.byte	56
 6115 00f1 36        		.byte	54
 6116 00f2 35        		.byte	53
 6117 00f3 33        		.byte	51
 6118 00f4 32        		.byte	50
 6119 00f5 30        		.byte	48
 6120 00f6 2F        		.byte	47
 6121 00f7 2D        		.byte	45
 6122 00f8 2C        		.byte	44
 6123 00f9 2A        		.byte	42
 6124 00fa 29        		.byte	41
 6125 00fb 28        		.byte	40
 6126 00fc 26        		.byte	38
 6127 00fd 25        		.byte	37
 6128 00fe 23        		.byte	35
 6129 00ff 22        		.byte	34
 6130               	.global	rgblight_ranges
 6131               		.section	.data.rgblight_ranges,"aw"
 6134               	rgblight_ranges:
 6135 0000 00        		.byte	0
 6136 0001 08        		.byte	8
 6137 0002 00        		.byte	0
 6138 0003 08        		.byte	8
 6139 0004 08        		.byte	8
 6140               		.comm	led,24,1
 6141               	.global	animation_status
 6142               		.section	.bss.animation_status,"aw",@nobits
 6145               	animation_status:
 6146 0000 0000 0000 		.zero	6
 6146      0000 
 6147               	.global	is_rgblight_initialized
 6148               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 6151               	is_rgblight_initialized:
 6152 0000 00        		.zero	1
 6153               	.global	rgblight_status
 6154               		.section	.bss.rgblight_status,"aw",@nobits
 6157               	rgblight_status:
 6158 0000 0000      		.zero	2
 6159               		.comm	rgblight_config,5,1
 6160               		.weak	RGBLED_GRADIENT_RANGES
 6161               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 6164               	RGBLED_GRADIENT_RANGES:
 6165 0000 FF        		.byte	-1
 6166 0001 AA        		.byte	-86
 6167 0002 7F        		.byte	127
 6168 0003 55        		.byte	85
 6169 0004 40        		.byte	64
 6170               		.section	.rodata.mode_base_table,"a"
 6173               	mode_base_table:
 6174 0000 00        		.byte	0
 6175 0001 01        		.byte	1
 6176 0002 02        		.byte	2
 6177 0003 02        		.byte	2
 6178 0004 02        		.byte	2
 6179 0005 02        		.byte	2
 6180 0006 06        		.byte	6
 6181 0007 06        		.byte	6
 6182 0008 06        		.byte	6
 6183 0009 09        		.byte	9
 6184 000a 09        		.byte	9
 6185 000b 09        		.byte	9
 6186 000c 09        		.byte	9
 6187 000d 09        		.byte	9
 6188 000e 09        		.byte	9
 6189 000f 0F        		.byte	15
 6190 0010 0F        		.byte	15
 6191 0011 0F        		.byte	15
 6192 0012 0F        		.byte	15
 6193 0013 0F        		.byte	15
 6194 0014 0F        		.byte	15
 6195 0015 15        		.byte	21
 6196 0016 15        		.byte	21
 6197 0017 15        		.byte	21
 6198 0018 18        		.byte	24
 6199 0019 19        		.byte	25
 6200 001a 19        		.byte	25
 6201 001b 19        		.byte	25
 6202 001c 19        		.byte	25
 6203 001d 19        		.byte	25
 6204 001e 19        		.byte	25
 6205 001f 19        		.byte	25
 6206 0020 19        		.byte	25
 6207 0021 19        		.byte	25
 6208 0022 19        		.byte	25
 6209 0023 23        		.byte	35
 6210 0024 24        		.byte	36
 6211 0025 25        		.byte	37
 6212 0026 25        		.byte	37
 6213 0027 25        		.byte	37
 6214 0028 25        		.byte	37
 6215 0029 25        		.byte	37
 6216 002a 25        		.byte	37
 6217               		.section	.data.static_effect_table,"aw"
 6220               	static_effect_table:
 6221 0000 01        		.byte	1
 6222 0001 19        		.byte	25
 6223 0002 1A        		.byte	26
 6224 0003 1B        		.byte	27
 6225 0004 1C        		.byte	28
 6226 0005 1D        		.byte	29
 6227 0006 1E        		.byte	30
 6228 0007 1F        		.byte	31
 6229 0008 20        		.byte	32
 6230 0009 21        		.byte	33
 6231 000a 22        		.byte	34
 6232               		.text
 6233               	.Letext0:
 6234               		.file 4 "e:\\game\\msys2\\mingw64\\avr\\include\\stdint.h"
 6235               		.file 5 "e:\\game\\msys2\\mingw64\\lib\\gcc\\avr\\8.4.0\\include\\stddef.h"
 6236               		.file 6 "e:\\game\\msys2\\mingw64\\avr\\include\\stdlib.h"
 6237               		.file 7 "tmk_core/common/timer.h"
 6238               		.file 8 "./quantum/color.h"
 6239               		.file 9 "quantum/rgblight.h"
 6240               		.file 10 "tmk_core/common/debug.h"
 6241               		.file 11 "quantum/led_tables.h"
 6242               		.file 12 "./lib/lib8tion/random8.h"
 6243               		.file 13 "./lib/lib8tion/trig8.h"
 6244               		.file 14 "quantum/rgblight_breathe_table.h"
 6245               		.file 15 "e:\\game\\msys2\\mingw64\\avr\\include\\string.h"
 6246               		.file 16 "drivers/ws2812.h"
 6247               		.file 17 "tmk_core/common/eeconfig.h"
 6248               		.file 18 "e:\\game\\msys2\\mingw64\\avr\\include\\avr\\eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4      *ABS*:000000000000003f __SREG__
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6134   .data.rgblight_ranges:0000000000000000 rgblight_ranges
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:57     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:103    .text.rgblight_hsv_to_rgb:0000000000000000 rgblight_hsv_to_rgb
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:123    .text.sethsv_raw:0000000000000000 sethsv_raw
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:185    .text.sethsv:0000000000000000 sethsv
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:204    .text.setrgb:0000000000000000 setrgb
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:233    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:276    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:296    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:347    .text.eeconfig_update_rgblight_current:0000000000000000 eeconfig_update_rgblight_current
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:368    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:410    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:434    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:457    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:487    .text.rgblight_is_enabled:0000000000000000 rgblight_is_enabled
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:508    .text.rgblight_increase_speed_helper:0000000000000000 rgblight_increase_speed_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:549    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:567    .text.rgblight_increase_speed_noeeprom:0000000000000000 rgblight_increase_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:585    .text.rgblight_decrease_speed_helper:0000000000000000 rgblight_decrease_speed_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:626    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:644    .text.rgblight_decrease_speed_noeeprom:0000000000000000 rgblight_decrease_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:662    .text.rgblight_get_speed:0000000000000000 rgblight_get_speed
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:681    .text.rgblight_set_speed_eeprom_helper:0000000000000000 rgblight_set_speed_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:716    .text.rgblight_set_speed:0000000000000000 rgblight_set_speed
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:736    .text.rgblight_set_speed_noeeprom:0000000000000000 rgblight_set_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:756    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:775    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:794    .text.rgblight_get_val:0000000000000000 rgblight_get_val
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:813    .text.rgblight_get_hsv:0000000000000000 rgblight_get_hsv
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:838    .text.rgblight_call_driver:0000000000000000 rgblight_call_driver
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:858    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:0000000000000018 led
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:935    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1005   .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1076   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5873   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1150   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1197   .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5782   .bss.maxval.3469:0000000000000000 maxval.3469
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1351   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6173   .rodata.mode_base_table:0000000000000000 mode_base_table
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6157   .bss.rgblight_status:0000000000000000 rgblight_status
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6164   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1694   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1728   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1746   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1764   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1798   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1816   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1834   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1865   .text.rgblight_increase_sat_helper:000000000000000e L_1447
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1888   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1906   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1924   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1954   .text.rgblight_decrease_sat_helper:000000000000000e L_1503
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1977   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:1995   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2013   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2043   .text.rgblight_increase_val_helper:000000000000000e L_1559
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2066   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2084   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2102   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2132   .text.rgblight_decrease_val_helper:000000000000000e L_1615
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2155   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2173   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2191   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2211   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2231   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2280   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2360   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2453   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2540   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2569   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2598   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2627   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2656   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:2800   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5807   .bss.pos.3424:0000000000000000 pos.3424
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:3060   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5792   .data.increment.3442:0000000000000000 increment.3442
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5802   .bss.low_bound.3440:0000000000000000 low_bound.3440
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5797   .data.high_bound.3441:0000000000000000 high_bound.3441
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:3280   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5787   .data.increment.3454:0000000000000000 increment.3454
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:3566   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:3725   .text.rgblight_effect_twinkle:0000000000000000 rgblight_effect_twinkle
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5812   .bss.led_twinkle_state:0000000000000000 led_twinkle_state
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4278   .text.rgblight_disable:0000000000000000 rgblight_disable
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4347   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4409   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4430   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6220   .data.static_effect_table:0000000000000000 static_effect_table
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6145   .bss.animation_status:0000000000000000 animation_status
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4489   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4616   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4657   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4675   .text.rgblight_step:0000000000000000 rgblight_step
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4693   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4733   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4751   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4769   .text.rgblight_mode:0000000000000000 rgblight_mode
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4789   .text.rgblight_increase:0000000000000000 rgblight_increase
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4824   .text.rgblight_decrease:0000000000000000 rgblight_decrease
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4859   .text.rgblight_enable:0000000000000000 rgblight_enable
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4885   .text.rgblight_toggle:0000000000000000 rgblight_toggle
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4912   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:4932   .text.rgblight_init:0000000000000000 rgblight_init
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:6151   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5031   .text.rgblight_reload_from_eeprom:0000000000000000 rgblight_reload_from_eeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5073   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5099   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5126   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5173   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5189   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5227   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5283   .text.rgblight_task:0000000000000000 rgblight_task
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5864   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5856   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5848   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5840   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5832   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5826   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccn0tYws.s:5818   .progmem.data.RGBLED_TWINKLE_INTERVALS:0000000000000000 RGBLED_TWINKLE_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
__udivmodhi4
__umulhisi3
__muluhisi3
__mulhisi3
__mulshisi3
__udivmodsi4
rand
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
__udivmodqi4
__do_copy_data
__do_clear_bss
