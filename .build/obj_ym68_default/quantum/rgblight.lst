   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB174:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #include <stdlib.h>
  19:quantum/rgblight.c **** #include "wait.h"
  20:quantum/rgblight.c **** #include "progmem.h"
  21:quantum/rgblight.c **** #include "sync_timer.h"
  22:quantum/rgblight.c **** #include "rgblight.h"
  23:quantum/rgblight.c **** #include "color.h"
  24:quantum/rgblight.c **** #include "debug.h"
  25:quantum/rgblight.c **** #include "led_tables.h"
  26:quantum/rgblight.c **** #include <lib/lib8tion/lib8tion.h>
  27:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  28:quantum/rgblight.c **** #    include "eeprom.h"
  29:quantum/rgblight.c **** #endif
  30:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  31:quantum/rgblight.c **** #    include "velocikey.h"
  32:quantum/rgblight.c **** #endif
  33:quantum/rgblight.c **** 
  34:quantum/rgblight.c **** #ifndef MIN
  35:quantum/rgblight.c **** #    define MIN(a, b) (((a) < (b)) ? (a) : (b))
  36:quantum/rgblight.c **** #endif
  37:quantum/rgblight.c **** #ifndef MAX
  38:quantum/rgblight.c **** #    define MAX(a, b) (((a) > (b)) ? (a) : (b))
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  42:quantum/rgblight.c **** /* for split keyboard */
  43:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  44:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  45:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  46:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  48:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  49:quantum/rgblight.c **** #else
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_LAYERS
  54:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  55:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  56:quantum/rgblight.c **** #endif
  57:quantum/rgblight.c **** 
  58:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  59:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  60:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  61:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  62:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  63:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  64:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  65:quantum/rgblight.c **** #include "rgblight_modes.h"
  66:quantum/rgblight.c **** };
  67:quantum/rgblight.c **** 
  68:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  70:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  71:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  72:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  73:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  74:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  75:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  76:quantum/rgblight.c **** #include "rgblight_modes.h"
  77:quantum/rgblight.c **** };
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_MODE)
  80:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_MODE RGBLIGHT_MODE_STATIC_LIGHT
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_HUE)
  84:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_HUE 0
  85:quantum/rgblight.c **** #endif
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SAT)
  88:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SAT UINT8_MAX
  89:quantum/rgblight.c **** #endif
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_VAL)
  92:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_VAL RGBLIGHT_LIMIT_VAL
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #if !defined(RGBLIGHT_DEFAULT_SPD)
  96:quantum/rgblight.c **** #    define RGBLIGHT_DEFAULT_SPD 0
  97:quantum/rgblight.c **** #endif
  98:quantum/rgblight.c **** 
  99:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
 100:quantum/rgblight.c **** 
 101:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
 102:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
 103:quantum/rgblight.c **** #endif
 104:quantum/rgblight.c **** 
 105:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 106:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
 107:quantum/rgblight.c **** #endif
 108:quantum/rgblight.c **** 
 109:quantum/rgblight.c **** rgblight_config_t rgblight_config;
 110:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
 111:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
 112:quantum/rgblight.c **** 
 113:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 114:quantum/rgblight.c **** static bool is_suspended;
 115:quantum/rgblight.c **** static bool pre_suspend_enabled;
 116:quantum/rgblight.c **** #endif
 117:quantum/rgblight.c **** 
 118:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 119:quantum/rgblight.c **** animation_status_t animation_status = {};
 120:quantum/rgblight.c **** #endif
 121:quantum/rgblight.c **** 
 122:quantum/rgblight.c **** #ifndef LED_ARRAY
 123:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
 124:quantum/rgblight.c **** #    define LED_ARRAY led
 125:quantum/rgblight.c **** #endif
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 128:quantum/rgblight.c **** rgblight_segment_t const *const *rgblight_layers = NULL;
 129:quantum/rgblight.c **** #endif
 130:quantum/rgblight.c **** 
 131:quantum/rgblight.c **** rgblight_ranges_t rgblight_ranges = {0, RGBLED_NUM, 0, RGBLED_NUM, RGBLED_NUM};
 132:quantum/rgblight.c **** 
 133:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
 135:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
 136:quantum/rgblight.c **** }
 137:quantum/rgblight.c **** 
 138:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 139:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 140:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 141:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
 142:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
 143:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
 144:quantum/rgblight.c **** }
 145:quantum/rgblight.c **** 
 146:quantum/rgblight.c **** __attribute__((weak)) RGB rgblight_hsv_to_rgb(HSV hsv) { return hsv_to_rgb(hsv); }
 147:quantum/rgblight.c **** 
 148:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 149:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 150:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 151:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 152:quantum/rgblight.c **** }
 153:quantum/rgblight.c **** 
 154:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 155:quantum/rgblight.c **** 
 156:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 157:quantum/rgblight.c ****     led1->r = r;
 158:quantum/rgblight.c ****     led1->g = g;
 159:quantum/rgblight.c ****     led1->b = b;
 160:quantum/rgblight.c **** #ifdef RGBW
 161:quantum/rgblight.c ****     led1->w = 0;
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void rgblight_check_config(void) {
 166:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 167:quantum/rgblight.c **** 
 168:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 169:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 170:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 171:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 172:quantum/rgblight.c ****     }
 173:quantum/rgblight.c **** 
 174:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 175:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 176:quantum/rgblight.c ****     }
 177:quantum/rgblight.c **** }
 178:quantum/rgblight.c **** 
 179:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 180:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 181:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 182:quantum/rgblight.c **** #else
 183:quantum/rgblight.c ****     return 0;
 184:quantum/rgblight.c **** #endif
 185:quantum/rgblight.c **** }
 186:quantum/rgblight.c **** 
 187:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 188:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 189:quantum/rgblight.c ****     rgblight_check_config();
 190:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 191:quantum/rgblight.c **** #endif
 192:quantum/rgblight.c **** }
 193:quantum/rgblight.c **** 
 194:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 197:quantum/rgblight.c ****     rgblight_config.enable = 1;
 198:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 199:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 200:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 201:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 202:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 204:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 205:quantum/rgblight.c **** }
 206:quantum/rgblight.c **** 
 207:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 208:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 209:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 210:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 211:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 212:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 213:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 214:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 215:quantum/rgblight.c **** }
 216:quantum/rgblight.c **** 
 217:quantum/rgblight.c **** void rgblight_init(void) {
 218:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 219:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 220:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 221:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 222:quantum/rgblight.c ****         return;
 223:quantum/rgblight.c ****     }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 226:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 227:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 228:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 229:quantum/rgblight.c ****         eeconfig_init();
 230:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 231:quantum/rgblight.c ****     }
 232:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 233:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 234:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 235:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 236:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 237:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 238:quantum/rgblight.c ****     }
 239:quantum/rgblight.c ****     rgblight_check_config();
 240:quantum/rgblight.c **** 
 241:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 242:quantum/rgblight.c **** 
 243:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 244:quantum/rgblight.c **** 
 245:quantum/rgblight.c ****     if (rgblight_config.enable) {
 246:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 247:quantum/rgblight.c ****     }
 248:quantum/rgblight.c **** 
 249:quantum/rgblight.c ****     is_rgblight_initialized = true;
 250:quantum/rgblight.c **** }
 251:quantum/rgblight.c **** 
 252:quantum/rgblight.c **** void rgblight_reload_from_eeprom(void) {
 253:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 254:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 255:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 256:quantum/rgblight.c ****     rgblight_check_config();
 257:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 258:quantum/rgblight.c ****     if (rgblight_config.enable) {
 259:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 260:quantum/rgblight.c ****     }
 261:quantum/rgblight.c **** }
 262:quantum/rgblight.c **** 
 263:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 264:quantum/rgblight.c **** 
 265:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 266:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 267:quantum/rgblight.c ****     rgblight_config.raw = dword;
 268:quantum/rgblight.c ****     if (rgblight_config.enable)
 269:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 270:quantum/rgblight.c ****     else {
 271:quantum/rgblight.c ****         rgblight_timer_disable();
 272:quantum/rgblight.c ****         rgblight_set();
 273:quantum/rgblight.c ****     }
 274:quantum/rgblight.c **** }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** void rgblight_increase(void) {
 277:quantum/rgblight.c ****     uint8_t mode = 0;
 278:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 279:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 280:quantum/rgblight.c ****     }
 281:quantum/rgblight.c ****     rgblight_mode(mode);
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** void rgblight_decrease(void) {
 284:quantum/rgblight.c ****     uint8_t mode = 0;
 285:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 286:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 287:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 288:quantum/rgblight.c ****     }
 289:quantum/rgblight.c ****     rgblight_mode(mode);
 290:quantum/rgblight.c **** }
 291:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 292:quantum/rgblight.c ****     uint8_t mode = 0;
 293:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 294:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 295:quantum/rgblight.c ****         mode = 1;
 296:quantum/rgblight.c ****     }
 297:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 298:quantum/rgblight.c **** }
 299:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 300:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 301:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 302:quantum/rgblight.c ****     uint8_t mode = 0;
 303:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 304:quantum/rgblight.c ****     if (mode < 1) {
 305:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 306:quantum/rgblight.c ****     }
 307:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 308:quantum/rgblight.c **** }
 309:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 310:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 311:quantum/rgblight.c **** 
 312:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 313:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 314:quantum/rgblight.c ****         return false;
 315:quantum/rgblight.c ****     }
 316:quantum/rgblight.c **** 
 317:quantum/rgblight.c ****     return rgblight_config.mode;
 318:quantum/rgblight.c **** }
 319:quantum/rgblight.c **** 
 320:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 321:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 322:quantum/rgblight.c ****         return;
 323:quantum/rgblight.c ****     }
 324:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 325:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 326:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 327:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 328:quantum/rgblight.c ****     } else {
 329:quantum/rgblight.c ****         rgblight_config.mode = mode;
 330:quantum/rgblight.c ****     }
 331:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 332:quantum/rgblight.c ****     if (write_to_eeprom) {
 333:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 334:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 335:quantum/rgblight.c ****     } else {
 336:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 337:quantum/rgblight.c ****     }
 338:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 339:quantum/rgblight.c ****         rgblight_timer_disable();
 340:quantum/rgblight.c ****     } else {
 341:quantum/rgblight.c ****         rgblight_timer_enable();
 342:quantum/rgblight.c ****     }
 343:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 344:quantum/rgblight.c ****     animation_status.restart = true;
 345:quantum/rgblight.c **** #endif
 346:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 347:quantum/rgblight.c **** }
 348:quantum/rgblight.c **** 
 349:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 350:quantum/rgblight.c **** 
 351:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 352:quantum/rgblight.c **** 
 353:quantum/rgblight.c **** void rgblight_toggle(void) {
 354:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 355:quantum/rgblight.c ****     if (rgblight_config.enable) {
 356:quantum/rgblight.c ****         rgblight_disable();
 357:quantum/rgblight.c ****     } else {
 358:quantum/rgblight.c ****         rgblight_enable();
 359:quantum/rgblight.c ****     }
 360:quantum/rgblight.c **** }
 361:quantum/rgblight.c **** 
 362:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 363:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 364:quantum/rgblight.c ****     if (rgblight_config.enable) {
 365:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 366:quantum/rgblight.c ****     } else {
 367:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 368:quantum/rgblight.c ****     }
 369:quantum/rgblight.c **** }
 370:quantum/rgblight.c **** 
 371:quantum/rgblight.c **** void rgblight_enable(void) {
 372:quantum/rgblight.c ****     rgblight_config.enable = 1;
 373:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 374:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 375:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 376:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 377:quantum/rgblight.c **** }
 378:quantum/rgblight.c **** 
 379:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 380:quantum/rgblight.c ****     rgblight_config.enable = 1;
 381:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 382:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 383:quantum/rgblight.c **** }
 384:quantum/rgblight.c **** 
 385:quantum/rgblight.c **** void rgblight_disable(void) {
 386:quantum/rgblight.c ****     rgblight_config.enable = 0;
 387:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 388:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 389:quantum/rgblight.c ****     rgblight_timer_disable();
 390:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 391:quantum/rgblight.c ****     wait_ms(50);
 392:quantum/rgblight.c ****     rgblight_set();
 393:quantum/rgblight.c **** }
 394:quantum/rgblight.c **** 
 395:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 396:quantum/rgblight.c ****     rgblight_config.enable = 0;
 397:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 398:quantum/rgblight.c ****     rgblight_timer_disable();
 399:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 400:quantum/rgblight.c ****     wait_ms(50);
 401:quantum/rgblight.c ****     rgblight_set();
 402:quantum/rgblight.c **** }
 403:quantum/rgblight.c **** 
 404:quantum/rgblight.c **** bool rgblight_is_enabled(void) { return rgblight_config.enable; }
 405:quantum/rgblight.c **** 
 406:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 407:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 408:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 411:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 412:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 413:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 414:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 415:quantum/rgblight.c **** }
 416:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 417:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 418:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 419:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 420:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 421:quantum/rgblight.c **** }
 422:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 423:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 424:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 425:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 426:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 427:quantum/rgblight.c **** }
 428:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 429:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 430:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 431:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 432:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 433:quantum/rgblight.c **** }
 434:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 435:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 436:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 437:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 438:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 439:quantum/rgblight.c **** }
 440:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 441:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 442:quantum/rgblight.c **** 
 443:quantum/rgblight.c **** void rgblight_increase_speed_helper(bool write_to_eeprom) {
 444:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 445:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 446:quantum/rgblight.c ****     if (write_to_eeprom) {
 447:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 448:quantum/rgblight.c ****     }
 449:quantum/rgblight.c **** }
 450:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 451:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 452:quantum/rgblight.c **** 
 453:quantum/rgblight.c **** void rgblight_decrease_speed_helper(bool write_to_eeprom) {
 454:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 455:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 456:quantum/rgblight.c ****     if (write_to_eeprom) {
 457:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 458:quantum/rgblight.c ****     }
 459:quantum/rgblight.c **** }
 460:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 461:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 462:quantum/rgblight.c **** 
 463:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 464:quantum/rgblight.c ****     if (rgblight_config.enable) {
 465:quantum/rgblight.c ****         LED_TYPE tmp_led;
 466:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 467:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 468:quantum/rgblight.c ****     }
 469:quantum/rgblight.c **** }
 470:quantum/rgblight.c **** 
 471:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 472:quantum/rgblight.c ****     if (rgblight_config.enable) {
 473:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 474:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 475:quantum/rgblight.c ****             // same static color
 476:quantum/rgblight.c ****             LED_TYPE tmp_led;
 477:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 478:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 479:quantum/rgblight.c ****         } else {
 480:quantum/rgblight.c ****             // all LEDs in same color
 481:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 482:quantum/rgblight.c ****             }
 483:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 484:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 485:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 486:quantum/rgblight.c ****                 val = rgblight_config.val;
 487:quantum/rgblight.c ****             }
 488:quantum/rgblight.c **** #endif
 489:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 490:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 491:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 492:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 493:quantum/rgblight.c ****             }
 494:quantum/rgblight.c **** #endif
 495:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 496:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 497:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 498:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 499:quantum/rgblight.c ****             }
 500:quantum/rgblight.c **** #endif
 501:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 502:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 503:quantum/rgblight.c ****                 // static gradient
 504:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 505:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 506:quantum/rgblight.c **** #    ifdef __AVR__
 507:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 508:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 509:quantum/rgblight.c **** #    else
 510:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 511:quantum/rgblight.c **** #    endif
 512:quantum/rgblight.c ****                 for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 513:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 514:quantum/rgblight.c ****                     if (direction) {
 515:quantum/rgblight.c ****                         _hue = hue + _hue;
 516:quantum/rgblight.c ****                     } else {
 517:quantum/rgblight.c ****                         _hue = hue - _hue;
 518:quantum/rgblight.c ****                     }
 519:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 520:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 521:quantum/rgblight.c ****                 }
 522:quantum/rgblight.c ****                 rgblight_set();
 523:quantum/rgblight.c ****             }
 524:quantum/rgblight.c **** #endif
 525:quantum/rgblight.c ****         }
 526:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 527:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 528:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 529:quantum/rgblight.c ****         }
 530:quantum/rgblight.c **** #endif
 531:quantum/rgblight.c ****         rgblight_config.hue = hue;
 532:quantum/rgblight.c ****         rgblight_config.sat = sat;
 533:quantum/rgblight.c ****         rgblight_config.val = val;
 534:quantum/rgblight.c ****         if (write_to_eeprom) {
 535:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 536:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 537:quantum/rgblight.c ****         } else {
 538:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 539:quantum/rgblight.c ****         }
 540:quantum/rgblight.c ****     }
 541:quantum/rgblight.c **** }
 542:quantum/rgblight.c **** 
 543:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 544:quantum/rgblight.c **** 
 545:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 546:quantum/rgblight.c **** 
 547:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 548:quantum/rgblight.c **** 
 549:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 550:quantum/rgblight.c ****     rgblight_config.speed = speed;
 551:quantum/rgblight.c ****     if (write_to_eeprom) {
 552:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 553:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 554:quantum/rgblight.c ****     } else {
 555:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 556:quantum/rgblight.c ****     }
 557:quantum/rgblight.c **** }
 558:quantum/rgblight.c **** 
 559:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 560:quantum/rgblight.c **** 
 561:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 562:quantum/rgblight.c **** 
 563:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 564:quantum/rgblight.c **** 
 565:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 566:quantum/rgblight.c **** 
 567:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 568:quantum/rgblight.c **** 
 569:quantum/rgblight.c **** HSV rgblight_get_hsv(void) { return (HSV){rgblight_config.hue, rgblight_config.sat, rgblight_config
 570:quantum/rgblight.c **** 
 571:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 572:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 573:quantum/rgblight.c ****         return;
 574:quantum/rgblight.c ****     }
 575:quantum/rgblight.c **** 
 576:quantum/rgblight.c ****     for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
 577:quantum/rgblight.c ****         led[i].r = r;
 578:quantum/rgblight.c ****         led[i].g = g;
 579:quantum/rgblight.c ****         led[i].b = b;
 580:quantum/rgblight.c **** #ifdef RGBW
 581:quantum/rgblight.c ****         led[i].w = 0;
 582:quantum/rgblight.c **** #endif
 583:quantum/rgblight.c ****     }
 584:quantum/rgblight.c ****     rgblight_set();
 585:quantum/rgblight.c **** }
 586:quantum/rgblight.c **** 
 587:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 588:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 589:quantum/rgblight.c ****         return;
 590:quantum/rgblight.c ****     }
 591:quantum/rgblight.c **** 
 592:quantum/rgblight.c ****     led[index].r = r;
 593:quantum/rgblight.c ****     led[index].g = g;
 594:quantum/rgblight.c ****     led[index].b = b;
 595:quantum/rgblight.c **** #ifdef RGBW
 596:quantum/rgblight.c ****     led[index].w = 0;
 597:quantum/rgblight.c **** #endif
 598:quantum/rgblight.c ****     rgblight_set();
 599:quantum/rgblight.c **** }
 600:quantum/rgblight.c **** 
 601:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 602:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 603:quantum/rgblight.c ****         return;
 604:quantum/rgblight.c ****     }
 605:quantum/rgblight.c **** 
 606:quantum/rgblight.c ****     LED_TYPE tmp_led;
 607:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 608:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 609:quantum/rgblight.c **** }
 610:quantum/rgblight.c **** 
 611:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 612:quantum/rgblight.c **** 
 613:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 614:quantum/rgblight.c ****     return
 615:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 616:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 617:quantum/rgblight.c **** #    endif
 618:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 619:quantum/rgblight.c **** }
 620:quantum/rgblight.c **** 
 621:quantum/rgblight.c **** #endif
 622:quantum/rgblight.c **** 
 623:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 624:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 625:quantum/rgblight.c ****         return;
 626:quantum/rgblight.c ****     }
 627:quantum/rgblight.c **** 
 628:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 629:quantum/rgblight.c ****         led[i].r = r;
 630:quantum/rgblight.c ****         led[i].g = g;
 631:quantum/rgblight.c ****         led[i].b = b;
 632:quantum/rgblight.c **** #ifdef RGBW
 633:quantum/rgblight.c ****         led[i].w = 0;
 634:quantum/rgblight.c **** #endif
 635:quantum/rgblight.c ****     }
 636:quantum/rgblight.c ****     rgblight_set();
 637:quantum/rgblight.c ****     wait_ms(1);
 638:quantum/rgblight.c **** }
 639:quantum/rgblight.c **** 
 640:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 641:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 642:quantum/rgblight.c ****         return;
 643:quantum/rgblight.c ****     }
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c ****     LED_TYPE tmp_led;
 646:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 647:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 648:quantum/rgblight.c **** }
 649:quantum/rgblight.c **** 
 650:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 651:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 652:quantum/rgblight.c **** 
 653:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 654:quantum/rgblight.c **** 
 655:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 656:quantum/rgblight.c **** 
 657:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 658:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 659:quantum/rgblight.c **** 
 660:quantum/rgblight.c **** #ifdef RGBLIGHT_LAYERS
 661:quantum/rgblight.c **** void rgblight_set_layer_state(uint8_t layer, bool enabled) {
 662:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 663:quantum/rgblight.c ****     if (enabled) {
 664:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask |= mask;
 665:quantum/rgblight.c ****     } else {
 666:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~mask;
 667:quantum/rgblight.c ****     }
 668:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_LAYERS;
 669:quantum/rgblight.c ****     // Static modes don't have a ticker running to update the LEDs
 670:quantum/rgblight.c ****     if (rgblight_status.timer_enabled == false) {
 671:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 672:quantum/rgblight.c ****     }
 673:quantum/rgblight.c **** 
 674:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 675:quantum/rgblight.c ****     // If not enabled, then nothing else will actually set the LEDs...
 676:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 677:quantum/rgblight.c ****         rgblight_set();
 678:quantum/rgblight.c ****     }
 679:quantum/rgblight.c **** #    endif
 680:quantum/rgblight.c **** }
 681:quantum/rgblight.c **** 
 682:quantum/rgblight.c **** bool rgblight_get_layer_state(uint8_t layer) {
 683:quantum/rgblight.c ****     rgblight_layer_mask_t mask = (rgblight_layer_mask_t)1 << layer;
 684:quantum/rgblight.c ****     return (rgblight_status.enabled_layer_mask & mask) != 0;
 685:quantum/rgblight.c **** }
 686:quantum/rgblight.c **** 
 687:quantum/rgblight.c **** // Write any enabled LED layers into the buffer
 688:quantum/rgblight.c **** static void rgblight_layers_write(void) {
 689:quantum/rgblight.c ****     uint8_t i = 0;
 690:quantum/rgblight.c ****     // For each layer
 691:quantum/rgblight.c ****     for (const rgblight_segment_t *const *layer_ptr = rgblight_layers; i < RGBLIGHT_MAX_LAYERS; lay
 692:quantum/rgblight.c ****         if (!rgblight_get_layer_state(i)) {
 693:quantum/rgblight.c ****             continue;  // Layer is disabled
 694:quantum/rgblight.c ****         }
 695:quantum/rgblight.c ****         const rgblight_segment_t *segment_ptr = pgm_read_ptr(layer_ptr);
 696:quantum/rgblight.c ****         if (segment_ptr == NULL) {
 697:quantum/rgblight.c ****             break;  // No more layers
 698:quantum/rgblight.c ****         }
 699:quantum/rgblight.c ****         // For each segment
 700:quantum/rgblight.c ****         while (1) {
 701:quantum/rgblight.c ****             rgblight_segment_t segment;
 702:quantum/rgblight.c ****             memcpy_P(&segment, segment_ptr, sizeof(rgblight_segment_t));
 703:quantum/rgblight.c ****             if (segment.index == RGBLIGHT_END_SEGMENT_INDEX) {
 704:quantum/rgblight.c ****                 break;  // No more segments
 705:quantum/rgblight.c ****             }
 706:quantum/rgblight.c ****             // Write segment.count LEDs
 707:quantum/rgblight.c ****             LED_TYPE *const limit = &led[MIN(segment.index + segment.count, RGBLED_NUM)];
 708:quantum/rgblight.c ****             for (LED_TYPE *led_ptr = &led[segment.index]; led_ptr < limit; led_ptr++) {
 709:quantum/rgblight.c ****                 sethsv(segment.hue, segment.sat, segment.val, led_ptr);
 710:quantum/rgblight.c ****             }
 711:quantum/rgblight.c ****             segment_ptr++;
 712:quantum/rgblight.c ****         }
 713:quantum/rgblight.c ****     }
 714:quantum/rgblight.c **** }
 715:quantum/rgblight.c **** 
 716:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 717:quantum/rgblight.c **** rgblight_layer_mask_t _blinking_layer_mask = 0;
 718:quantum/rgblight.c **** static uint16_t       _repeat_timer;
 719:quantum/rgblight.c **** static uint8_t        _times_remaining;
 720:quantum/rgblight.c **** static uint16_t       _dur;
 721:quantum/rgblight.c **** 
 722:quantum/rgblight.c **** void rgblight_blink_layer(uint8_t layer, uint16_t duration_ms) { rgblight_blink_layer_repeat(layer,
 723:quantum/rgblight.c **** 
 724:quantum/rgblight.c **** void rgblight_blink_layer_repeat(uint8_t layer, uint16_t duration_ms, uint8_t times) {
 725:quantum/rgblight.c ****     _times_remaining = times * 2;
 726:quantum/rgblight.c ****     _dur             = duration_ms;
 727:quantum/rgblight.c **** 
 728:quantum/rgblight.c ****     rgblight_set_layer_state(layer, true);
 729:quantum/rgblight.c ****     _times_remaining--;
 730:quantum/rgblight.c ****     _blinking_layer_mask |= (rgblight_layer_mask_t)1 << layer;
 731:quantum/rgblight.c ****     _repeat_timer = sync_timer_read() + duration_ms;
 732:quantum/rgblight.c **** }
 733:quantum/rgblight.c **** 
 734:quantum/rgblight.c **** void rgblight_blink_layer_repeat_helper(void) {
 735:quantum/rgblight.c ****     if (_blinking_layer_mask != 0 && timer_expired(sync_timer_read(), _repeat_timer)) {
 736:quantum/rgblight.c ****         for (uint8_t layer = 0; layer < RGBLIGHT_MAX_LAYERS; layer++) {
 737:quantum/rgblight.c ****             if ((_blinking_layer_mask & (rgblight_layer_mask_t)1 << layer) != 0 && _times_remaining
 738:quantum/rgblight.c ****                 if (_times_remaining % 2 == 1) {
 739:quantum/rgblight.c ****                     rgblight_set_layer_state(layer, false);
 740:quantum/rgblight.c ****                 } else {
 741:quantum/rgblight.c ****                     rgblight_set_layer_state(layer, true);
 742:quantum/rgblight.c ****                 }
 743:quantum/rgblight.c ****                 _times_remaining--;
 744:quantum/rgblight.c ****                 _repeat_timer = sync_timer_read() + _dur;
 745:quantum/rgblight.c ****             }
 746:quantum/rgblight.c ****         }
 747:quantum/rgblight.c ****         if (_times_remaining <= 0) {
 748:quantum/rgblight.c ****             _blinking_layer_mask = 0;
 749:quantum/rgblight.c ****         }
 750:quantum/rgblight.c ****     }
 751:quantum/rgblight.c **** }
 752:quantum/rgblight.c **** #    endif
 753:quantum/rgblight.c **** 
 754:quantum/rgblight.c **** #endif
 755:quantum/rgblight.c **** 
 756:quantum/rgblight.c **** #ifdef RGBLIGHT_SLEEP
 757:quantum/rgblight.c **** 
 758:quantum/rgblight.c **** void rgblight_suspend(void) {
 759:quantum/rgblight.c ****     rgblight_timer_disable();
 760:quantum/rgblight.c ****     if (!is_suspended) {
 761:quantum/rgblight.c ****         is_suspended        = true;
 762:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 763:quantum/rgblight.c **** 
 764:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
 765:quantum/rgblight.c ****         // make sure any layer blinks don't come back after suspend
 766:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask &= ~_blinking_layer_mask;
 767:quantum/rgblight.c ****         _blinking_layer_mask = 0;
 768:quantum/rgblight.c **** #    endif
 769:quantum/rgblight.c **** 
 770:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 771:quantum/rgblight.c ****     }
 772:quantum/rgblight.c **** }
 773:quantum/rgblight.c **** 
 774:quantum/rgblight.c **** void rgblight_wakeup(void) {
 775:quantum/rgblight.c ****     is_suspended = false;
 776:quantum/rgblight.c **** 
 777:quantum/rgblight.c ****     if (pre_suspend_enabled) {
 778:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 779:quantum/rgblight.c ****     }
 780:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF
 781:quantum/rgblight.c ****     // Need this or else the LEDs won't be set
 782:quantum/rgblight.c ****     else if (rgblight_status.enabled_layer_mask != 0) {
 783:quantum/rgblight.c ****         rgblight_set();
 784:quantum/rgblight.c ****     }
 785:quantum/rgblight.c **** #    endif
 786:quantum/rgblight.c **** 
 787:quantum/rgblight.c ****     rgblight_timer_enable();
 788:quantum/rgblight.c **** }
 789:quantum/rgblight.c **** 
 790:quantum/rgblight.c **** #endif
 791:quantum/rgblight.c **** 
 792:quantum/rgblight.c **** __attribute__((weak)) void rgblight_call_driver(LED_TYPE *start_led, uint8_t num_leds) { ws2812_set
 793:quantum/rgblight.c **** 
 794:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 795:quantum/rgblight.c **** 
 796:quantum/rgblight.c **** void rgblight_set(void) {
 797:quantum/rgblight.c ****     LED_TYPE *start_led;
 798:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 799:quantum/rgblight.c **** 
 800:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 801:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 802:quantum/rgblight.c ****             led[i].r = 0;
 803:quantum/rgblight.c ****             led[i].g = 0;
 804:quantum/rgblight.c ****             led[i].b = 0;
 805:quantum/rgblight.c **** #    ifdef RGBW
 806:quantum/rgblight.c ****             led[i].w = 0;
 807:quantum/rgblight.c **** #    endif
 808:quantum/rgblight.c ****         }
 809:quantum/rgblight.c ****     }
 810:quantum/rgblight.c **** 
 811:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 812:quantum/rgblight.c ****     if (rgblight_layers != NULL
 813:quantum/rgblight.c **** #        if !defined(RGBLIGHT_LAYERS_OVERRIDE_RGB_OFF)
 814:quantum/rgblight.c ****         && rgblight_config.enable
 815:quantum/rgblight.c **** #        elif defined(RGBLIGHT_SLEEP)
 816:quantum/rgblight.c ****         && !is_suspended
 817:quantum/rgblight.c **** #        endif
 818:quantum/rgblight.c ****     ) {
 819:quantum/rgblight.c ****         rgblight_layers_write();
 820:quantum/rgblight.c ****     }
 821:quantum/rgblight.c **** #    endif
 822:quantum/rgblight.c **** 
 823:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 824:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 825:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 826:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 827:quantum/rgblight.c ****     }
 828:quantum/rgblight.c ****     start_led = led0 + rgblight_ranges.clipping_start_pos;
 829:quantum/rgblight.c **** #    else
 830:quantum/rgblight.c ****     start_led = led + rgblight_ranges.clipping_start_pos;
 831:quantum/rgblight.c **** #    endif
 832:quantum/rgblight.c **** 
 833:quantum/rgblight.c **** #    ifdef RGBW
 834:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 835:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 836:quantum/rgblight.c ****     }
 837:quantum/rgblight.c **** #    endif
 838:quantum/rgblight.c ****     rgblight_call_driver(start_led, num_leds);
 839:quantum/rgblight.c **** }
 840:quantum/rgblight.c **** #endif
 841:quantum/rgblight.c **** 
 842:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 843:quantum/rgblight.c **** /* for split keyboard master side */
 844:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 845:quantum/rgblight.c **** 
 846:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 847:quantum/rgblight.c **** 
 848:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 849:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 850:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 851:quantum/rgblight.c **** }
 852:quantum/rgblight.c **** 
 853:quantum/rgblight.c **** /* for split keyboard slave side */
 854:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 855:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYERS
 856:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_LAYERS) {
 857:quantum/rgblight.c ****         rgblight_status.enabled_layer_mask = syncinfo->status.enabled_layer_mask;
 858:quantum/rgblight.c ****     }
 859:quantum/rgblight.c **** #    endif
 860:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 861:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 862:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 863:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 864:quantum/rgblight.c ****         } else {
 865:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 866:quantum/rgblight.c ****         }
 867:quantum/rgblight.c ****     }
 868:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 869:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 870:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 871:quantum/rgblight.c ****     }
 872:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 873:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 874:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 875:quantum/rgblight.c ****             rgblight_timer_enable();
 876:quantum/rgblight.c ****         } else {
 877:quantum/rgblight.c ****             rgblight_timer_disable();
 878:quantum/rgblight.c ****         }
 879:quantum/rgblight.c ****     }
 880:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 881:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 882:quantum/rgblight.c ****         animation_status.restart = true;
 883:quantum/rgblight.c ****     }
 884:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 885:quantum/rgblight.c **** #    endif /* RGBLIGHT_USE_TIMER */
 886:quantum/rgblight.c **** }
 887:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 888:quantum/rgblight.c **** 
 889:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 890:quantum/rgblight.c **** 
 891:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 892:quantum/rgblight.c **** 
 893:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 894:quantum/rgblight.c **** void rgblight_timer_init(void) {
 895:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 896:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 897:quantum/rgblight.c **** }
 898:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 899:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 900:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 901:quantum/rgblight.c ****     }
 902:quantum/rgblight.c ****     animation_status.last_timer = sync_timer_read();
 903:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 904:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 905:quantum/rgblight.c **** }
 906:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 907:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 908:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 909:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 910:quantum/rgblight.c **** }
 911:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 912:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 913:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 914:quantum/rgblight.c ****         rgblight_timer_disable();
 915:quantum/rgblight.c ****     } else {
 916:quantum/rgblight.c ****         rgblight_timer_enable();
 917:quantum/rgblight.c ****     }
 918:quantum/rgblight.c **** }
 919:quantum/rgblight.c **** 
 920:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 921:quantum/rgblight.c ****     rgblight_enable();
 922:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 923:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 924:quantum/rgblight.c **** }
 925:quantum/rgblight.c **** 
 926:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 926 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 927:quantum/rgblight.c ****     // do nothing
 928:quantum/rgblight.c ****     /********
 929:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 930:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 931:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 932:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 933:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 934:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 935:quantum/rgblight.c ****     **/
 936:quantum/rgblight.c **** }
  22               		.loc 1 936 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE174:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB84:
 133:quantum/rgblight.c ****     rgblight_ranges.clipping_start_pos = start_pos;
  34               		.loc 1 133 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  40               		.loc 1 134 5 view .LVU3
 134:quantum/rgblight.c ****     rgblight_ranges.clipping_num_leds  = num_leds;
  41               		.loc 1 134 40 is_stmt 0 view .LVU4
  42 0000 E0E0      		ldi r30,lo8(rgblight_ranges)
  43 0002 F0E0      		ldi r31,hi8(rgblight_ranges)
  44 0004 8083      		st Z,r24
 135:quantum/rgblight.c **** }
  45               		.loc 1 135 5 is_stmt 1 view .LVU5
 135:quantum/rgblight.c **** }
  46               		.loc 1 135 40 is_stmt 0 view .LVU6
  47 0006 6183      		std Z+1,r22
  48               	/* epilogue start */
 136:quantum/rgblight.c **** 
  49               		.loc 1 136 1 view .LVU7
  50 0008 0895      		ret
  51               		.cfi_endproc
  52               	.LFE84:
  54               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  55               	.global	rgblight_set_effect_range
  57               	rgblight_set_effect_range:
  58               	.LVL2:
  59               	.LFB85:
 138:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  60               		.loc 1 138 69 is_stmt 1 view -0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
 139:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  66               		.loc 1 139 5 view .LVU9
 139:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  67               		.loc 1 139 8 is_stmt 0 view .LVU10
  68 0000 8431      		cpi r24,lo8(20)
  69 0002 00F4      		brsh .L3
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  70               		.loc 1 140 5 is_stmt 1 view .LVU11
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  71               		.loc 1 140 19 is_stmt 0 view .LVU12
  72 0004 482F      		mov r20,r24
  73 0006 460F      		add r20,r22
  74 0008 5527      		clr r21
  75 000a 551F      		rol r21
 140:quantum/rgblight.c ****     rgblight_ranges.effect_start_pos = start_pos;
  76               		.loc 1 140 8 view .LVU13
  77 000c 4531      		cpi r20,21
  78 000e 5105      		cpc r21,__zero_reg__
  79 0010 04F4      		brge .L3
 141:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  80               		.loc 1 141 5 is_stmt 1 view .LVU14
 141:quantum/rgblight.c ****     rgblight_ranges.effect_end_pos   = start_pos + num_leds;
  81               		.loc 1 141 38 is_stmt 0 view .LVU15
  82 0012 8093 0000 		sts rgblight_ranges+2,r24
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  83               		.loc 1 142 5 is_stmt 1 view .LVU16
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  84               		.loc 1 142 50 is_stmt 0 view .LVU17
  85 0016 860F      		add r24,r22
  86               	.LVL3:
 142:quantum/rgblight.c ****     rgblight_ranges.effect_num_leds  = num_leds;
  87               		.loc 1 142 38 view .LVU18
  88 0018 8093 0000 		sts rgblight_ranges+3,r24
 143:quantum/rgblight.c **** }
  89               		.loc 1 143 5 is_stmt 1 view .LVU19
 143:quantum/rgblight.c **** }
  90               		.loc 1 143 38 is_stmt 0 view .LVU20
  91 001c 6093 0000 		sts rgblight_ranges+4,r22
  92               	.LVL4:
  93               	.L3:
  94               	/* epilogue start */
 144:quantum/rgblight.c **** 
  95               		.loc 1 144 1 view .LVU21
  96 0020 0895      		ret
  97               		.cfi_endproc
  98               	.LFE85:
 100               		.section	.text.rgblight_hsv_to_rgb,"ax",@progbits
 101               		.weak	rgblight_hsv_to_rgb
 103               	rgblight_hsv_to_rgb:
 104               	.LVL5:
 105               	.LFB86:
 146:quantum/rgblight.c **** 
 106               		.loc 1 146 56 is_stmt 1 view -0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 146:quantum/rgblight.c **** 
 112               		.loc 1 146 58 view .LVU23
 146:quantum/rgblight.c **** 
 113               		.loc 1 146 65 is_stmt 0 view .LVU24
 114 0000 0C94 0000 		jmp hsv_to_rgb
 115               	.LVL6:
 146:quantum/rgblight.c **** 
 116               		.loc 1 146 65 view .LVU25
 117               		.cfi_endproc
 118               	.LFE86:
 120               		.section	.text.sethsv_raw,"ax",@progbits
 121               	.global	sethsv_raw
 123               	sethsv_raw:
 124               	.LVL7:
 125               	.LFB87:
 148:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 126               		.loc 1 148 72 is_stmt 1 view -0
 127               		.cfi_startproc
 148:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 128               		.loc 1 148 72 is_stmt 0 view .LVU27
 129 0000 CF93      		push r28
 130               	.LCFI0:
 131               		.cfi_def_cfa_offset 3
 132               		.cfi_offset 28, -2
 133 0002 DF93      		push r29
 134               	.LCFI1:
 135               		.cfi_def_cfa_offset 4
 136               		.cfi_offset 29, -3
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 2 */
 140               	.L__stack_usage = 2
 141 0004 762F      		mov r23,r22
 142 0006 E901      		movw r28,r18
 149:quantum/rgblight.c ****     RGB rgb = rgblight_hsv_to_rgb(hsv);
 143               		.loc 1 149 5 is_stmt 1 view .LVU28
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 144               		.loc 1 150 5 view .LVU29
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 145               		.loc 1 150 15 is_stmt 0 view .LVU30
 146 0008 682F      		mov r22,r24
 147               	.LVL8:
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 148               		.loc 1 150 15 view .LVU31
 149 000a 842F      		mov r24,r20
 150               	.LVL9:
 150:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 151               		.loc 1 150 15 view .LVU32
 152 000c 0E94 0000 		call rgblight_hsv_to_rgb
 153               	.LVL10:
 151:quantum/rgblight.c **** }
 154               		.loc 1 151 5 is_stmt 1 view .LVU33
 155               	.LBB20:
 156               	.LBI20:
 156:quantum/rgblight.c ****     led1->r = r;
 157               		.loc 1 156 6 view .LVU34
 158               	.LBB21:
 157:quantum/rgblight.c ****     led1->g = g;
 159               		.loc 1 157 5 view .LVU35
 157:quantum/rgblight.c ****     led1->g = g;
 160               		.loc 1 157 13 is_stmt 0 view .LVU36
 161 0010 7983      		std Y+1,r23
 158:quantum/rgblight.c ****     led1->b = b;
 162               		.loc 1 158 5 is_stmt 1 view .LVU37
 158:quantum/rgblight.c ****     led1->b = b;
 163               		.loc 1 158 13 is_stmt 0 view .LVU38
 164 0012 6883      		st Y,r22
 159:quantum/rgblight.c **** #ifdef RGBW
 165               		.loc 1 159 5 is_stmt 1 view .LVU39
 159:quantum/rgblight.c **** #ifdef RGBW
 166               		.loc 1 159 13 is_stmt 0 view .LVU40
 167 0014 8A83      		std Y+2,r24
 168               	.LVL11:
 169               	/* epilogue start */
 159:quantum/rgblight.c **** #ifdef RGBW
 170               		.loc 1 159 13 view .LVU41
 171               	.LBE21:
 172               	.LBE20:
 152:quantum/rgblight.c **** 
 173               		.loc 1 152 1 view .LVU42
 174 0016 DF91      		pop r29
 175 0018 CF91      		pop r28
 176               	.LVL12:
 152:quantum/rgblight.c **** 
 177               		.loc 1 152 1 view .LVU43
 178 001a 0895      		ret
 179               		.cfi_endproc
 180               	.LFE87:
 182               		.section	.text.sethsv,"ax",@progbits
 183               	.global	sethsv
 185               	sethsv:
 186               	.LVL13:
 187               	.LFB88:
 154:quantum/rgblight.c **** 
 188               		.loc 1 154 68 is_stmt 1 view -0
 189               		.cfi_startproc
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 0 */
 193               	.L__stack_usage = 0
 154:quantum/rgblight.c **** 
 194               		.loc 1 154 70 view .LVU45
 195 0000 0C94 0000 		jmp sethsv_raw
 196               	.LVL14:
 154:quantum/rgblight.c **** 
 197               		.loc 1 154 70 is_stmt 0 view .LVU46
 198               		.cfi_endproc
 199               	.LFE88:
 201               		.section	.text.setrgb,"ax",@progbits
 202               	.global	setrgb
 204               	setrgb:
 205               	.LVL15:
 206               	.LFB89:
 156:quantum/rgblight.c ****     led1->r = r;
 207               		.loc 1 156 62 is_stmt 1 view -0
 208               		.cfi_startproc
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 156:quantum/rgblight.c ****     led1->r = r;
 213               		.loc 1 156 62 is_stmt 0 view .LVU48
 214 0000 F901      		movw r30,r18
 157:quantum/rgblight.c ****     led1->g = g;
 215               		.loc 1 157 5 is_stmt 1 view .LVU49
 157:quantum/rgblight.c ****     led1->g = g;
 216               		.loc 1 157 13 is_stmt 0 view .LVU50
 217 0002 8183      		std Z+1,r24
 158:quantum/rgblight.c ****     led1->b = b;
 218               		.loc 1 158 5 is_stmt 1 view .LVU51
 158:quantum/rgblight.c ****     led1->b = b;
 219               		.loc 1 158 13 is_stmt 0 view .LVU52
 220 0004 6083      		st Z,r22
 159:quantum/rgblight.c **** #ifdef RGBW
 221               		.loc 1 159 5 is_stmt 1 view .LVU53
 159:quantum/rgblight.c **** #ifdef RGBW
 222               		.loc 1 159 13 is_stmt 0 view .LVU54
 223 0006 4283      		std Z+2,r20
 224               	/* epilogue start */
 163:quantum/rgblight.c **** 
 225               		.loc 1 163 1 view .LVU55
 226 0008 0895      		ret
 227               		.cfi_endproc
 228               	.LFE89:
 230               		.section	.text.rgblight_check_config,"ax",@progbits
 231               	.global	rgblight_check_config
 233               	rgblight_check_config:
 234               	.LFB90:
 165:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 235               		.loc 1 165 34 is_stmt 1 view -0
 236               		.cfi_startproc
 237               	/* prologue: function */
 238               	/* frame size = 0 */
 239               	/* stack size = 0 */
 240               	.L__stack_usage = 0
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 241               		.loc 1 168 5 view .LVU57
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 242               		.loc 1 168 30 is_stmt 0 view .LVU58
 243 0000 8091 0000 		lds r24,rgblight_config
 244 0004 982F      		mov r25,r24
 245 0006 9E7F      		andi r25,lo8(-2)
 168:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 246               		.loc 1 168 8 view .LVU59
 247 0008 01F4      		brne .L10
 169:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 248               		.loc 1 169 9 is_stmt 1 view .LVU60
 169:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 249               		.loc 1 169 30 is_stmt 0 view .LVU61
 250 000a 8170      		andi r24,lo8(1)
 251 000c 8260      		ori r24,lo8(2)
 252               	.L12:
 171:quantum/rgblight.c ****     }
 253               		.loc 1 171 30 view .LVU62
 254 000e 8093 0000 		sts rgblight_config,r24
 174:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 255               		.loc 1 174 5 is_stmt 1 view .LVU63
 256               	.L9:
 257               	/* epilogue start */
 177:quantum/rgblight.c **** 
 258               		.loc 1 177 1 is_stmt 0 view .LVU64
 259 0012 0895      		ret
 260               	.L10:
 170:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 261               		.loc 1 170 12 is_stmt 1 view .LVU65
 170:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 262               		.loc 1 170 15 is_stmt 0 view .LVU66
 263 0014 8635      		cpi r24,lo8(86)
 264 0016 00F0      		brlo .L9
 171:quantum/rgblight.c ****     }
 265               		.loc 1 171 9 is_stmt 1 view .LVU67
 171:quantum/rgblight.c ****     }
 266               		.loc 1 171 30 is_stmt 0 view .LVU68
 267 0018 8170      		andi r24,lo8(1)
 268 001a 8465      		ori r24,lo8(84)
 269 001c 00C0      		rjmp .L12
 270               		.cfi_endproc
 271               	.LFE90:
 273               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 274               	.global	eeconfig_read_rgblight
 276               	eeconfig_read_rgblight:
 277               	.LFB91:
 179:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 278               		.loc 1 179 39 is_stmt 1 view -0
 279               		.cfi_startproc
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 0 */
 283               	.L__stack_usage = 0
 181:quantum/rgblight.c **** #else
 284               		.loc 1 181 5 view .LVU70
 181:quantum/rgblight.c **** #else
 285               		.loc 1 181 12 is_stmt 0 view .LVU71
 286 0000 88E0      		ldi r24,lo8(8)
 287 0002 90E0      		ldi r25,0
 288 0004 0C94 0000 		jmp eeprom_read_dword
 289               	.LVL16:
 290               		.cfi_endproc
 291               	.LFE91:
 293               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 294               	.global	eeconfig_update_rgblight
 296               	eeconfig_update_rgblight:
 297               	.LVL17:
 298               	.LFB92:
 187:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 299               		.loc 1 187 45 is_stmt 1 view -0
 300               		.cfi_startproc
 187:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 301               		.loc 1 187 45 is_stmt 0 view .LVU73
 302 0000 CF92      		push r12
 303               	.LCFI2:
 304               		.cfi_def_cfa_offset 3
 305               		.cfi_offset 12, -2
 306 0002 DF92      		push r13
 307               	.LCFI3:
 308               		.cfi_def_cfa_offset 4
 309               		.cfi_offset 13, -3
 310 0004 EF92      		push r14
 311               	.LCFI4:
 312               		.cfi_def_cfa_offset 5
 313               		.cfi_offset 14, -4
 314 0006 FF92      		push r15
 315               	.LCFI5:
 316               		.cfi_def_cfa_offset 6
 317               		.cfi_offset 15, -5
 318               	/* prologue: function */
 319               	/* frame size = 0 */
 320               	/* stack size = 4 */
 321               	.L__stack_usage = 4
 322 0008 6B01      		movw r12,r22
 323 000a 7C01      		movw r14,r24
 189:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 324               		.loc 1 189 5 is_stmt 1 view .LVU74
 325 000c 0E94 0000 		call rgblight_check_config
 326               	.LVL18:
 190:quantum/rgblight.c **** #endif
 327               		.loc 1 190 5 view .LVU75
 328 0010 B701      		movw r22,r14
 329 0012 A601      		movw r20,r12
 330 0014 88E0      		ldi r24,lo8(8)
 331 0016 90E0      		ldi r25,0
 332               	/* epilogue start */
 192:quantum/rgblight.c **** 
 333               		.loc 1 192 1 is_stmt 0 view .LVU76
 334 0018 FF90      		pop r15
 335 001a EF90      		pop r14
 336 001c DF90      		pop r13
 337 001e CF90      		pop r12
 190:quantum/rgblight.c **** #endif
 338               		.loc 1 190 5 view .LVU77
 339 0020 0C94 0000 		jmp eeprom_update_dword
 340               	.LVL19:
 341               		.cfi_endproc
 342               	.LFE92:
 344               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 345               	.global	eeconfig_update_rgblight_current
 347               	eeconfig_update_rgblight_current:
 348               	.LFB93:
 194:quantum/rgblight.c **** 
 349               		.loc 1 194 45 is_stmt 1 view -0
 350               		.cfi_startproc
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 194:quantum/rgblight.c **** 
 355               		.loc 1 194 47 view .LVU79
 356 0000 6091 0000 		lds r22,rgblight_config
 357 0004 7091 0000 		lds r23,rgblight_config+1
 358 0008 8091 0000 		lds r24,rgblight_config+2
 359 000c 9091 0000 		lds r25,rgblight_config+3
 360 0010 0C94 0000 		jmp eeconfig_update_rgblight
 361               	.LVL20:
 362               		.cfi_endproc
 363               	.LFE93:
 365               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 366               	.global	eeconfig_update_rgblight_default
 368               	eeconfig_update_rgblight_default:
 369               	.LFB94:
 196:quantum/rgblight.c ****     rgblight_config.enable = 1;
 370               		.loc 1 196 45 view -0
 371               		.cfi_startproc
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 197:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 376               		.loc 1 197 5 view .LVU81
 198:quantum/rgblight.c ****     rgblight_config.hue    = RGBLIGHT_DEFAULT_HUE;
 377               		.loc 1 198 5 view .LVU82
 199:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 378               		.loc 1 199 5 view .LVU83
 200:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 379               		.loc 1 200 5 view .LVU84
 201:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 380               		.loc 1 201 5 view .LVU85
 202:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 381               		.loc 1 202 5 view .LVU86
 197:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_DEFAULT_MODE;
 382               		.loc 1 197 28 is_stmt 0 view .LVU87
 383 0000 E0E0      		ldi r30,lo8(rgblight_config)
 384 0002 F0E0      		ldi r31,hi8(rgblight_config)
 385 0004 83E0      		ldi r24,lo8(3)
 386 0006 8083      		st Z,r24
 199:quantum/rgblight.c ****     rgblight_config.sat    = RGBLIGHT_DEFAULT_SAT;
 387               		.loc 1 199 28 view .LVU88
 388 0008 1182      		std Z+1,__zero_reg__
 200:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_DEFAULT_VAL;
 389               		.loc 1 200 28 view .LVU89
 390 000a 8FEF      		ldi r24,lo8(-1)
 391 000c 8283      		std Z+2,r24
 201:quantum/rgblight.c ****     rgblight_config.speed  = RGBLIGHT_DEFAULT_SPD;
 392               		.loc 1 201 28 view .LVU90
 393 000e 8383      		std Z+3,r24
 202:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 394               		.loc 1 202 28 view .LVU91
 395 0010 1482      		std Z+4,__zero_reg__
 203:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 396               		.loc 1 203 39 is_stmt 1 view .LVU92
 204:quantum/rgblight.c **** }
 397               		.loc 1 204 5 view .LVU93
 398 0012 6081      		ld r22,Z
 399 0014 7181      		ldd r23,Z+1
 400 0016 8281      		ldd r24,Z+2
 401 0018 9381      		ldd r25,Z+3
 402 001a 0C94 0000 		jmp eeconfig_update_rgblight
 403               	.LVL21:
 404               		.cfi_endproc
 405               	.LFE94:
 407               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 408               	.global	eeconfig_debug_rgblight
 410               	eeconfig_debug_rgblight:
 411               	.LFB95:
 207:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 412               		.loc 1 207 36 view -0
 413               		.cfi_startproc
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416               	/* stack size = 0 */
 417               	.L__stack_usage = 0
 208:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 418               		.loc 1 208 41 view .LVU95
 209:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 419               		.loc 1 209 69 view .LVU96
 210:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 420               		.loc 1 210 65 view .LVU97
 211:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 421               		.loc 1 211 63 view .LVU98
 212:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 422               		.loc 1 212 63 view .LVU99
 213:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 423               		.loc 1 213 63 view .LVU100
 214:quantum/rgblight.c **** }
 424               		.loc 1 214 67 view .LVU101
 425               	/* epilogue start */
 215:quantum/rgblight.c **** 
 426               		.loc 1 215 1 is_stmt 0 view .LVU102
 427 0000 0895      		ret
 428               		.cfi_endproc
 429               	.LFE95:
 431               		.section	.text.rgblight_read_dword,"ax",@progbits
 432               	.global	rgblight_read_dword
 434               	rgblight_read_dword:
 435               	.LFB98:
 263:quantum/rgblight.c **** 
 436               		.loc 1 263 36 is_stmt 1 view -0
 437               		.cfi_startproc
 438               	/* prologue: function */
 439               	/* frame size = 0 */
 440               	/* stack size = 0 */
 441               	.L__stack_usage = 0
 263:quantum/rgblight.c **** 
 442               		.loc 1 263 38 view .LVU104
 263:quantum/rgblight.c **** 
 443               		.loc 1 263 60 is_stmt 0 view .LVU105
 444 0000 6091 0000 		lds r22,rgblight_config
 445 0004 7091 0000 		lds r23,rgblight_config+1
 446 0008 8091 0000 		lds r24,rgblight_config+2
 447 000c 9091 0000 		lds r25,rgblight_config+3
 448               	/* epilogue start */
 263:quantum/rgblight.c **** 
 449               		.loc 1 263 1 view .LVU106
 450 0010 0895      		ret
 451               		.cfi_endproc
 452               	.LFE98:
 454               		.section	.text.rgblight_get_mode,"ax",@progbits
 455               	.global	rgblight_get_mode
 457               	rgblight_get_mode:
 458               	.LFB108:
 312:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 459               		.loc 1 312 33 is_stmt 1 view -0
 460               		.cfi_startproc
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 313:quantum/rgblight.c ****         return false;
 465               		.loc 1 313 5 view .LVU108
 313:quantum/rgblight.c ****         return false;
 466               		.loc 1 313 25 is_stmt 0 view .LVU109
 467 0000 8091 0000 		lds r24,rgblight_config
 313:quantum/rgblight.c ****         return false;
 468               		.loc 1 313 8 view .LVU110
 469 0004 80FF      		sbrs r24,0
 470 0006 00C0      		rjmp .L21
 317:quantum/rgblight.c **** }
 471               		.loc 1 317 5 is_stmt 1 view .LVU111
 317:quantum/rgblight.c **** }
 472               		.loc 1 317 27 is_stmt 0 view .LVU112
 473 0008 8695      		lsr r24
 474 000a 0895      		ret
 475               	.L21:
 314:quantum/rgblight.c ****     }
 476               		.loc 1 314 16 view .LVU113
 477 000c 80E0      		ldi r24,0
 478               	/* epilogue start */
 318:quantum/rgblight.c **** 
 479               		.loc 1 318 1 view .LVU114
 480 000e 0895      		ret
 481               		.cfi_endproc
 482               	.LFE108:
 484               		.section	.text.rgblight_is_enabled,"ax",@progbits
 485               	.global	rgblight_is_enabled
 487               	rgblight_is_enabled:
 488               	.LFB118:
 404:quantum/rgblight.c **** 
 489               		.loc 1 404 32 is_stmt 1 view -0
 490               		.cfi_startproc
 491               	/* prologue: function */
 492               	/* frame size = 0 */
 493               	/* stack size = 0 */
 494               	.L__stack_usage = 0
 404:quantum/rgblight.c **** 
 495               		.loc 1 404 34 view .LVU116
 404:quantum/rgblight.c **** 
 496               		.loc 1 404 56 is_stmt 0 view .LVU117
 497 0000 8091 0000 		lds r24,rgblight_config
 404:quantum/rgblight.c **** 
 498               		.loc 1 404 1 view .LVU118
 499 0004 8170      		andi r24,lo8(1)
 500               	/* epilogue start */
 501 0006 0895      		ret
 502               		.cfi_endproc
 503               	.LFE118:
 505               		.section	.text.rgblight_increase_speed_helper,"ax",@progbits
 506               	.global	rgblight_increase_speed_helper
 508               	rgblight_increase_speed_helper:
 509               	.LVL22:
 510               	.LFB137:
 443:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 511               		.loc 1 443 59 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 517               		.loc 1 444 5 view .LVU120
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 518               		.loc 1 444 24 is_stmt 0 view .LVU121
 519 0000 9091 0000 		lds r25,rgblight_config+4
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 520               		.loc 1 444 8 view .LVU122
 521 0004 9330      		cpi r25,lo8(3)
 522 0006 00F4      		brsh .L24
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 523               		.loc 1 444 36 is_stmt 1 discriminator 1 view .LVU123
 444:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 524               		.loc 1 444 57 is_stmt 0 discriminator 1 view .LVU124
 525 0008 9F5F      		subi r25,lo8(-(1))
 526 000a 9093 0000 		sts rgblight_config+4,r25
 527               	.L24:
 446:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 528               		.loc 1 446 5 is_stmt 1 view .LVU125
 446:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 529               		.loc 1 446 8 is_stmt 0 view .LVU126
 530 000e 8823      		tst r24
 531 0010 01F0      		breq .L23
 447:quantum/rgblight.c ****     }
 532               		.loc 1 447 9 is_stmt 1 view .LVU127
 533 0012 6091 0000 		lds r22,rgblight_config
 534 0016 7091 0000 		lds r23,rgblight_config+1
 535 001a 8091 0000 		lds r24,rgblight_config+2
 536 001e 9091 0000 		lds r25,rgblight_config+3
 537 0022 0C94 0000 		jmp eeconfig_update_rgblight
 538               	.LVL23:
 539               	.L23:
 540               	/* epilogue start */
 449:quantum/rgblight.c **** void rgblight_increase_speed(void) { rgblight_increase_speed_helper(true); }
 541               		.loc 1 449 1 is_stmt 0 view .LVU128
 542 0026 0895      		ret
 543               		.cfi_endproc
 544               	.LFE137:
 546               		.section	.text.rgblight_increase_speed,"ax",@progbits
 547               	.global	rgblight_increase_speed
 549               	rgblight_increase_speed:
 550               	.LFB138:
 450:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 551               		.loc 1 450 36 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 450:quantum/rgblight.c **** void rgblight_increase_speed_noeeprom(void) { rgblight_increase_speed_helper(false); }
 557               		.loc 1 450 38 view .LVU130
 558 0000 81E0      		ldi r24,lo8(1)
 559 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 560               	.LVL24:
 561               		.cfi_endproc
 562               	.LFE138:
 564               		.section	.text.rgblight_increase_speed_noeeprom,"ax",@progbits
 565               	.global	rgblight_increase_speed_noeeprom
 567               	rgblight_increase_speed_noeeprom:
 568               	.LFB139:
 451:quantum/rgblight.c **** 
 569               		.loc 1 451 45 view -0
 570               		.cfi_startproc
 571               	/* prologue: function */
 572               	/* frame size = 0 */
 573               	/* stack size = 0 */
 574               	.L__stack_usage = 0
 451:quantum/rgblight.c **** 
 575               		.loc 1 451 47 view .LVU132
 576 0000 80E0      		ldi r24,0
 577 0002 0C94 0000 		jmp rgblight_increase_speed_helper
 578               	.LVL25:
 579               		.cfi_endproc
 580               	.LFE139:
 582               		.section	.text.rgblight_decrease_speed_helper,"ax",@progbits
 583               	.global	rgblight_decrease_speed_helper
 585               	rgblight_decrease_speed_helper:
 586               	.LVL26:
 587               	.LFB140:
 453:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 588               		.loc 1 453 59 view -0
 589               		.cfi_startproc
 590               	/* prologue: function */
 591               	/* frame size = 0 */
 592               	/* stack size = 0 */
 593               	.L__stack_usage = 0
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 594               		.loc 1 454 5 view .LVU134
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 595               		.loc 1 454 24 is_stmt 0 view .LVU135
 596 0000 9091 0000 		lds r25,rgblight_config+4
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 597               		.loc 1 454 8 view .LVU136
 598 0004 9923      		tst r25
 599 0006 01F0      		breq .L29
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 600               		.loc 1 454 36 is_stmt 1 discriminator 1 view .LVU137
 454:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 601               		.loc 1 454 57 is_stmt 0 discriminator 1 view .LVU138
 602 0008 9150      		subi r25,lo8(-(-1))
 603 000a 9093 0000 		sts rgblight_config+4,r25
 604               	.L29:
 456:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 605               		.loc 1 456 5 is_stmt 1 view .LVU139
 456:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 606               		.loc 1 456 8 is_stmt 0 view .LVU140
 607 000e 8823      		tst r24
 608 0010 01F0      		breq .L28
 457:quantum/rgblight.c ****     }
 609               		.loc 1 457 9 is_stmt 1 view .LVU141
 610 0012 6091 0000 		lds r22,rgblight_config
 611 0016 7091 0000 		lds r23,rgblight_config+1
 612 001a 8091 0000 		lds r24,rgblight_config+2
 613 001e 9091 0000 		lds r25,rgblight_config+3
 614 0022 0C94 0000 		jmp eeconfig_update_rgblight
 615               	.LVL27:
 616               	.L28:
 617               	/* epilogue start */
 459:quantum/rgblight.c **** void rgblight_decrease_speed(void) { rgblight_decrease_speed_helper(true); }
 618               		.loc 1 459 1 is_stmt 0 view .LVU142
 619 0026 0895      		ret
 620               		.cfi_endproc
 621               	.LFE140:
 623               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 624               	.global	rgblight_decrease_speed
 626               	rgblight_decrease_speed:
 627               	.LFB141:
 460:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 628               		.loc 1 460 36 is_stmt 1 view -0
 629               		.cfi_startproc
 630               	/* prologue: function */
 631               	/* frame size = 0 */
 632               	/* stack size = 0 */
 633               	.L__stack_usage = 0
 460:quantum/rgblight.c **** void rgblight_decrease_speed_noeeprom(void) { rgblight_decrease_speed_helper(false); }
 634               		.loc 1 460 38 view .LVU144
 635 0000 81E0      		ldi r24,lo8(1)
 636 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 637               	.LVL28:
 638               		.cfi_endproc
 639               	.LFE141:
 641               		.section	.text.rgblight_decrease_speed_noeeprom,"ax",@progbits
 642               	.global	rgblight_decrease_speed_noeeprom
 644               	rgblight_decrease_speed_noeeprom:
 645               	.LFB142:
 461:quantum/rgblight.c **** 
 646               		.loc 1 461 45 view -0
 647               		.cfi_startproc
 648               	/* prologue: function */
 649               	/* frame size = 0 */
 650               	/* stack size = 0 */
 651               	.L__stack_usage = 0
 461:quantum/rgblight.c **** 
 652               		.loc 1 461 47 view .LVU146
 653 0000 80E0      		ldi r24,0
 654 0002 0C94 0000 		jmp rgblight_decrease_speed_helper
 655               	.LVL29:
 656               		.cfi_endproc
 657               	.LFE142:
 659               		.section	.text.rgblight_get_speed,"ax",@progbits
 660               	.global	rgblight_get_speed
 662               	rgblight_get_speed:
 663               	.LFB147:
 547:quantum/rgblight.c **** 
 664               		.loc 1 547 34 view -0
 665               		.cfi_startproc
 666               	/* prologue: function */
 667               	/* frame size = 0 */
 668               	/* stack size = 0 */
 669               	.L__stack_usage = 0
 547:quantum/rgblight.c **** 
 670               		.loc 1 547 36 view .LVU148
 547:quantum/rgblight.c **** 
 671               		.loc 1 547 1 is_stmt 0 view .LVU149
 672 0000 8091 0000 		lds r24,rgblight_config+4
 673               	/* epilogue start */
 674 0004 0895      		ret
 675               		.cfi_endproc
 676               	.LFE147:
 678               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 679               	.global	rgblight_set_speed_eeprom_helper
 681               	rgblight_set_speed_eeprom_helper:
 682               	.LVL30:
 683               	.LFB148:
 549:quantum/rgblight.c ****     rgblight_config.speed = speed;
 684               		.loc 1 549 76 is_stmt 1 view -0
 685               		.cfi_startproc
 686               	/* prologue: function */
 687               	/* frame size = 0 */
 688               	/* stack size = 0 */
 689               	.L__stack_usage = 0
 550:quantum/rgblight.c ****     if (write_to_eeprom) {
 690               		.loc 1 550 5 view .LVU151
 550:quantum/rgblight.c ****     if (write_to_eeprom) {
 691               		.loc 1 550 27 is_stmt 0 view .LVU152
 692 0000 8093 0000 		sts rgblight_config+4,r24
 551:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 693               		.loc 1 551 5 is_stmt 1 view .LVU153
 551:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 694               		.loc 1 551 8 is_stmt 0 view .LVU154
 695 0004 6623      		tst r22
 696 0006 01F0      		breq .L37
 552:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 697               		.loc 1 552 9 is_stmt 1 view .LVU155
 698 0008 6091 0000 		lds r22,rgblight_config
 699 000c 7091 0000 		lds r23,rgblight_config+1
 700 0010 8091 0000 		lds r24,rgblight_config+2
 701 0014 9091 0000 		lds r25,rgblight_config+3
 702               	.LVL31:
 552:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 703               		.loc 1 552 9 is_stmt 0 view .LVU156
 704 0018 0C94 0000 		jmp eeconfig_update_rgblight
 705               	.LVL32:
 706               	.L37:
 707               	/* epilogue start */
 557:quantum/rgblight.c **** 
 708               		.loc 1 557 1 view .LVU157
 709 001c 0895      		ret
 710               		.cfi_endproc
 711               	.LFE148:
 713               		.section	.text.rgblight_set_speed,"ax",@progbits
 714               	.global	rgblight_set_speed
 716               	rgblight_set_speed:
 717               	.LVL33:
 718               	.LFB149:
 559:quantum/rgblight.c **** 
 719               		.loc 1 559 40 is_stmt 1 view -0
 720               		.cfi_startproc
 721               	/* prologue: function */
 722               	/* frame size = 0 */
 723               	/* stack size = 0 */
 724               	.L__stack_usage = 0
 559:quantum/rgblight.c **** 
 725               		.loc 1 559 42 view .LVU159
 726 0000 61E0      		ldi r22,lo8(1)
 727 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 728               	.LVL34:
 559:quantum/rgblight.c **** 
 729               		.loc 1 559 42 is_stmt 0 view .LVU160
 730               		.cfi_endproc
 731               	.LFE149:
 733               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 734               	.global	rgblight_set_speed_noeeprom
 736               	rgblight_set_speed_noeeprom:
 737               	.LVL35:
 738               	.LFB150:
 561:quantum/rgblight.c **** 
 739               		.loc 1 561 49 is_stmt 1 view -0
 740               		.cfi_startproc
 741               	/* prologue: function */
 742               	/* frame size = 0 */
 743               	/* stack size = 0 */
 744               	.L__stack_usage = 0
 561:quantum/rgblight.c **** 
 745               		.loc 1 561 51 view .LVU162
 746 0000 60E0      		ldi r22,0
 747 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 748               	.LVL36:
 561:quantum/rgblight.c **** 
 749               		.loc 1 561 51 is_stmt 0 view .LVU163
 750               		.cfi_endproc
 751               	.LFE150:
 753               		.section	.text.rgblight_get_hue,"ax",@progbits
 754               	.global	rgblight_get_hue
 756               	rgblight_get_hue:
 757               	.LFB151:
 563:quantum/rgblight.c **** 
 758               		.loc 1 563 32 is_stmt 1 view -0
 759               		.cfi_startproc
 760               	/* prologue: function */
 761               	/* frame size = 0 */
 762               	/* stack size = 0 */
 763               	.L__stack_usage = 0
 563:quantum/rgblight.c **** 
 764               		.loc 1 563 34 view .LVU165
 563:quantum/rgblight.c **** 
 765               		.loc 1 563 1 is_stmt 0 view .LVU166
 766 0000 8091 0000 		lds r24,rgblight_config+1
 767               	/* epilogue start */
 768 0004 0895      		ret
 769               		.cfi_endproc
 770               	.LFE151:
 772               		.section	.text.rgblight_get_sat,"ax",@progbits
 773               	.global	rgblight_get_sat
 775               	rgblight_get_sat:
 776               	.LFB152:
 565:quantum/rgblight.c **** 
 777               		.loc 1 565 32 is_stmt 1 view -0
 778               		.cfi_startproc
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 565:quantum/rgblight.c **** 
 783               		.loc 1 565 34 view .LVU168
 565:quantum/rgblight.c **** 
 784               		.loc 1 565 1 is_stmt 0 view .LVU169
 785 0000 8091 0000 		lds r24,rgblight_config+2
 786               	/* epilogue start */
 787 0004 0895      		ret
 788               		.cfi_endproc
 789               	.LFE152:
 791               		.section	.text.rgblight_get_val,"ax",@progbits
 792               	.global	rgblight_get_val
 794               	rgblight_get_val:
 795               	.LFB153:
 567:quantum/rgblight.c **** 
 796               		.loc 1 567 32 is_stmt 1 view -0
 797               		.cfi_startproc
 798               	/* prologue: function */
 799               	/* frame size = 0 */
 800               	/* stack size = 0 */
 801               	.L__stack_usage = 0
 567:quantum/rgblight.c **** 
 802               		.loc 1 567 34 view .LVU171
 567:quantum/rgblight.c **** 
 803               		.loc 1 567 1 is_stmt 0 view .LVU172
 804 0000 8091 0000 		lds r24,rgblight_config+3
 805               	/* epilogue start */
 806 0004 0895      		ret
 807               		.cfi_endproc
 808               	.LFE153:
 810               		.section	.text.rgblight_get_hsv,"ax",@progbits
 811               	.global	rgblight_get_hsv
 813               	rgblight_get_hsv:
 814               	.LFB154:
 569:quantum/rgblight.c **** 
 815               		.loc 1 569 28 is_stmt 1 view -0
 816               		.cfi_startproc
 817               	/* prologue: function */
 818               	/* frame size = 0 */
 819               	/* stack size = 0 */
 820               	.L__stack_usage = 0
 569:quantum/rgblight.c **** 
 821               		.loc 1 569 30 view .LVU174
 569:quantum/rgblight.c **** 
 822               		.loc 1 569 79 is_stmt 0 view .LVU175
 823 0000 E0E0      		ldi r30,lo8(rgblight_config)
 824 0002 F0E0      		ldi r31,hi8(rgblight_config)
 825 0004 7281      		ldd r23,Z+2
 569:quantum/rgblight.c **** 
 826               		.loc 1 569 37 view .LVU176
 827 0006 6181      		ldd r22,Z+1
 569:quantum/rgblight.c **** 
 828               		.loc 1 569 1 view .LVU177
 829 0008 8381      		ldd r24,Z+3
 830               	/* epilogue start */
 831 000a 0895      		ret
 832               		.cfi_endproc
 833               	.LFE154:
 835               		.section	.text.rgblight_call_driver,"ax",@progbits
 836               		.weak	rgblight_call_driver
 838               	rgblight_call_driver:
 839               	.LVL37:
 840               	.LFB167:
 792:quantum/rgblight.c **** 
 841               		.loc 1 792 88 is_stmt 1 view -0
 842               		.cfi_startproc
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 792:quantum/rgblight.c **** 
 847               		.loc 1 792 90 view .LVU179
 848 0000 70E0      		ldi r23,0
 849 0002 0C94 0000 		jmp ws2812_setleds
 850               	.LVL38:
 792:quantum/rgblight.c **** 
 851               		.loc 1 792 90 is_stmt 0 view .LVU180
 852               		.cfi_endproc
 853               	.LFE167:
 855               		.section	.text.rgblight_set,"ax",@progbits
 856               	.global	rgblight_set
 858               	rgblight_set:
 859               	.LFB168:
 796:quantum/rgblight.c ****     LED_TYPE *start_led;
 860               		.loc 1 796 25 is_stmt 1 view -0
 861               		.cfi_startproc
 862               	/* prologue: function */
 863               	/* frame size = 0 */
 864               	/* stack size = 0 */
 865               	.L__stack_usage = 0
 797:quantum/rgblight.c ****     uint8_t   num_leds = rgblight_ranges.clipping_num_leds;
 866               		.loc 1 797 5 view .LVU182
 798:quantum/rgblight.c **** 
 867               		.loc 1 798 5 view .LVU183
 798:quantum/rgblight.c **** 
 868               		.loc 1 798 15 is_stmt 0 view .LVU184
 869 0000 6091 0000 		lds r22,rgblight_ranges+1
 870               	.LVL39:
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 871               		.loc 1 800 5 is_stmt 1 view .LVU185
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 872               		.loc 1 800 25 is_stmt 0 view .LVU186
 873 0004 8091 0000 		lds r24,rgblight_config
 800:quantum/rgblight.c ****         for (uint8_t i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++)
 874               		.loc 1 800 8 view .LVU187
 875 0008 80FF      		sbrs r24,0
 876 000a 00C0      		rjmp .L47
 877               	.L50:
 830:quantum/rgblight.c **** #    endif
 878               		.loc 1 830 5 is_stmt 1 view .LVU188
 879               	.LVL40:
 838:quantum/rgblight.c **** }
 880               		.loc 1 838 5 view .LVU189
 830:quantum/rgblight.c **** #    endif
 881               		.loc 1 830 21 is_stmt 0 view .LVU190
 882 000c 8091 0000 		lds r24,rgblight_ranges
 883 0010 23E0      		ldi r18,lo8(3)
 884 0012 829F      		mul r24,r18
 885 0014 C001      		movw r24,r0
 886 0016 1124      		clr __zero_reg__
 838:quantum/rgblight.c **** }
 887               		.loc 1 838 5 view .LVU191
 888 0018 8050      		subi r24,lo8(-(led))
 889 001a 9040      		sbci r25,hi8(-(led))
 890 001c 0C94 0000 		jmp rgblight_call_driver
 891               	.LVL41:
 892               	.L47:
 801:quantum/rgblight.c ****             led[i].r = 0;
 893               		.loc 1 801 9 is_stmt 1 view .LVU192
 894               	.LBB22:
 801:quantum/rgblight.c ****             led[i].r = 0;
 895               		.loc 1 801 14 view .LVU193
 801:quantum/rgblight.c ****             led[i].r = 0;
 896               		.loc 1 801 22 is_stmt 0 view .LVU194
 897 0020 8091 0000 		lds r24,rgblight_ranges+2
 898               	.LVL42:
 801:quantum/rgblight.c ****             led[i].r = 0;
 899               		.loc 1 801 79 view .LVU195
 900 0024 9091 0000 		lds r25,rgblight_ranges+3
 901 0028 23E0      		ldi r18,lo8(3)
 902 002a 829F      		mul r24,r18
 903 002c F001      		movw r30,r0
 904 002e 1124      		clr __zero_reg__
 905 0030 E050      		subi r30,lo8(-(led))
 906 0032 F040      		sbci r31,hi8(-(led))
 907               	.L48:
 801:quantum/rgblight.c ****             led[i].r = 0;
 908               		.loc 1 801 60 is_stmt 1 discriminator 1 view .LVU196
 801:quantum/rgblight.c ****             led[i].r = 0;
 909               		.loc 1 801 9 is_stmt 0 discriminator 1 view .LVU197
 910 0034 8917      		cp r24,r25
 911 0036 00F4      		brsh .L50
 802:quantum/rgblight.c ****             led[i].g = 0;
 912               		.loc 1 802 13 is_stmt 1 discriminator 3 view .LVU198
 802:quantum/rgblight.c ****             led[i].g = 0;
 913               		.loc 1 802 22 is_stmt 0 discriminator 3 view .LVU199
 914 0038 1182      		std Z+1,__zero_reg__
 803:quantum/rgblight.c ****             led[i].b = 0;
 915               		.loc 1 803 13 is_stmt 1 discriminator 3 view .LVU200
 803:quantum/rgblight.c ****             led[i].b = 0;
 916               		.loc 1 803 22 is_stmt 0 discriminator 3 view .LVU201
 917 003a 1082      		st Z,__zero_reg__
 804:quantum/rgblight.c **** #    ifdef RGBW
 918               		.loc 1 804 13 is_stmt 1 discriminator 3 view .LVU202
 804:quantum/rgblight.c **** #    ifdef RGBW
 919               		.loc 1 804 22 is_stmt 0 discriminator 3 view .LVU203
 920 003c 1282      		std Z+2,__zero_reg__
 801:quantum/rgblight.c ****             led[i].r = 0;
 921               		.loc 1 801 96 is_stmt 1 discriminator 3 view .LVU204
 801:quantum/rgblight.c ****             led[i].r = 0;
 922               		.loc 1 801 97 is_stmt 0 discriminator 3 view .LVU205
 923 003e 8F5F      		subi r24,lo8(-(1))
 924               	.LVL43:
 801:quantum/rgblight.c ****             led[i].r = 0;
 925               		.loc 1 801 97 discriminator 3 view .LVU206
 926 0040 3396      		adiw r30,3
 927 0042 00C0      		rjmp .L48
 928               	.LBE22:
 929               		.cfi_endproc
 930               	.LFE168:
 932               		.section	.text.rgblight_setrgb,"ax",@progbits
 933               	.global	rgblight_setrgb
 935               	rgblight_setrgb:
 936               	.LVL44:
 937               	.LFB155:
 571:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 938               		.loc 1 571 55 is_stmt 1 view -0
 939               		.cfi_startproc
 940               	/* prologue: function */
 941               	/* frame size = 0 */
 942               	/* stack size = 0 */
 943               	.L__stack_usage = 0
 572:quantum/rgblight.c ****         return;
 944               		.loc 1 572 5 view .LVU208
 572:quantum/rgblight.c ****         return;
 945               		.loc 1 572 25 is_stmt 0 view .LVU209
 946 0000 9091 0000 		lds r25,rgblight_config
 572:quantum/rgblight.c ****         return;
 947               		.loc 1 572 8 view .LVU210
 948 0004 90FF      		sbrs r25,0
 949 0006 00C0      		rjmp .L51
 576:quantum/rgblight.c ****         led[i].r = r;
 950               		.loc 1 576 5 is_stmt 1 view .LVU211
 951               	.LBB23:
 576:quantum/rgblight.c ****         led[i].r = r;
 952               		.loc 1 576 10 view .LVU212
 576:quantum/rgblight.c ****         led[i].r = r;
 953               		.loc 1 576 18 is_stmt 0 view .LVU213
 954 0008 9091 0000 		lds r25,rgblight_ranges+2
 955               	.LVL45:
 576:quantum/rgblight.c ****         led[i].r = r;
 956               		.loc 1 576 75 view .LVU214
 957 000c 2091 0000 		lds r18,rgblight_ranges+3
 958 0010 33E0      		ldi r19,lo8(3)
 959 0012 939F      		mul r25,r19
 960 0014 F001      		movw r30,r0
 961 0016 1124      		clr __zero_reg__
 962 0018 E050      		subi r30,lo8(-(led))
 963 001a F040      		sbci r31,hi8(-(led))
 964               	.L53:
 576:quantum/rgblight.c ****         led[i].r = r;
 965               		.loc 1 576 56 is_stmt 1 discriminator 1 view .LVU215
 576:quantum/rgblight.c ****         led[i].r = r;
 966               		.loc 1 576 5 is_stmt 0 discriminator 1 view .LVU216
 967 001c 9217      		cp r25,r18
 968 001e 00F0      		brlo .L54
 576:quantum/rgblight.c ****         led[i].r = r;
 969               		.loc 1 576 5 discriminator 1 view .LVU217
 970               	.LBE23:
 584:quantum/rgblight.c **** }
 971               		.loc 1 584 5 is_stmt 1 view .LVU218
 972 0020 0C94 0000 		jmp rgblight_set
 973               	.LVL46:
 974               	.L54:
 975               	.LBB24:
 577:quantum/rgblight.c ****         led[i].g = g;
 976               		.loc 1 577 9 discriminator 3 view .LVU219
 577:quantum/rgblight.c ****         led[i].g = g;
 977               		.loc 1 577 18 is_stmt 0 discriminator 3 view .LVU220
 978 0024 8183      		std Z+1,r24
 578:quantum/rgblight.c ****         led[i].b = b;
 979               		.loc 1 578 9 is_stmt 1 discriminator 3 view .LVU221
 578:quantum/rgblight.c ****         led[i].b = b;
 980               		.loc 1 578 18 is_stmt 0 discriminator 3 view .LVU222
 981 0026 6083      		st Z,r22
 579:quantum/rgblight.c **** #ifdef RGBW
 982               		.loc 1 579 9 is_stmt 1 discriminator 3 view .LVU223
 579:quantum/rgblight.c **** #ifdef RGBW
 983               		.loc 1 579 18 is_stmt 0 discriminator 3 view .LVU224
 984 0028 4283      		std Z+2,r20
 576:quantum/rgblight.c ****         led[i].r = r;
 985               		.loc 1 576 92 is_stmt 1 discriminator 3 view .LVU225
 576:quantum/rgblight.c ****         led[i].r = r;
 986               		.loc 1 576 93 is_stmt 0 discriminator 3 view .LVU226
 987 002a 9F5F      		subi r25,lo8(-(1))
 988               	.LVL47:
 576:quantum/rgblight.c ****         led[i].r = r;
 989               		.loc 1 576 93 discriminator 3 view .LVU227
 990 002c 3396      		adiw r30,3
 991 002e 00C0      		rjmp .L53
 992               	.LVL48:
 993               	.L51:
 994               	/* epilogue start */
 576:quantum/rgblight.c ****         led[i].r = r;
 995               		.loc 1 576 93 discriminator 3 view .LVU228
 996               	.LBE24:
 585:quantum/rgblight.c **** 
 997               		.loc 1 585 1 view .LVU229
 998 0030 0895      		ret
 999               		.cfi_endproc
 1000               	.LFE155:
 1002               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 1003               	.global	rgblight_sethsv_noeeprom_old
 1005               	rgblight_sethsv_noeeprom_old:
 1006               	.LVL49:
 1007               	.LFB143:
 463:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1008               		.loc 1 463 74 is_stmt 1 view -0
 1009               		.cfi_startproc
 463:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1010               		.loc 1 463 74 is_stmt 0 view .LVU231
 1011 0000 CF93      		push r28
 1012               	.LCFI6:
 1013               		.cfi_def_cfa_offset 3
 1014               		.cfi_offset 28, -2
 1015 0002 DF93      		push r29
 1016               	.LCFI7:
 1017               		.cfi_def_cfa_offset 4
 1018               		.cfi_offset 29, -3
 1019 0004 00D0      		rcall .
 1020 0006 0F92      		push __tmp_reg__
 1021               	.LCFI8:
 1022               		.cfi_def_cfa_offset 7
 1023 0008 CDB7      		in r28,__SP_L__
 1024 000a DEB7      		in r29,__SP_H__
 1025               	.LCFI9:
 1026               		.cfi_def_cfa_register 28
 1027               	/* prologue: function */
 1028               	/* frame size = 3 */
 1029               	/* stack size = 5 */
 1030               	.L__stack_usage = 5
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1031               		.loc 1 464 5 is_stmt 1 view .LVU232
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1032               		.loc 1 464 9 is_stmt 0 view .LVU233
 1033 000c 9091 0000 		lds r25,rgblight_config
 464:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1034               		.loc 1 464 8 view .LVU234
 1035 0010 90FF      		sbrs r25,0
 1036 0012 00C0      		rjmp .L55
 1037               	.LBB28:
 465:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 1038               		.loc 1 465 9 is_stmt 1 view .LVU235
 466:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1039               		.loc 1 466 9 view .LVU236
 1040               	.LVL50:
 1041               	.LBB29:
 1042               	.LBI29:
 154:quantum/rgblight.c **** 
 1043               		.loc 1 154 6 view .LVU237
 1044               	.LBB30:
 154:quantum/rgblight.c **** 
 1045               		.loc 1 154 70 view .LVU238
 1046 0014 9E01      		movw r18,r28
 1047 0016 2F5F      		subi r18,-1
 1048 0018 3F4F      		sbci r19,-1
 1049 001a 0E94 0000 		call sethsv_raw
 1050               	.LVL51:
 154:quantum/rgblight.c **** 
 1051               		.loc 1 154 70 is_stmt 0 view .LVU239
 1052               	.LBE30:
 1053               	.LBE29:
 467:quantum/rgblight.c ****     }
 1054               		.loc 1 467 9 is_stmt 1 view .LVU240
 1055 001e 4B81      		ldd r20,Y+3
 1056 0020 6981      		ldd r22,Y+1
 1057 0022 8A81      		ldd r24,Y+2
 1058 0024 0E94 0000 		call rgblight_setrgb
 1059               	.LVL52:
 1060               	.L55:
 1061               	/* epilogue start */
 1062               	.LBE28:
 469:quantum/rgblight.c **** 
 1063               		.loc 1 469 1 is_stmt 0 view .LVU241
 1064 0028 0F90      		pop __tmp_reg__
 1065 002a 0F90      		pop __tmp_reg__
 1066 002c 0F90      		pop __tmp_reg__
 1067 002e DF91      		pop r29
 1068 0030 CF91      		pop r28
 1069 0032 0895      		ret
 1070               		.cfi_endproc
 1071               	.LFE143:
 1073               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 1074               	.global	rgblight_effect_breathing
 1076               	rgblight_effect_breathing:
 1077               	.LVL53:
 1078               	.LFB177:
 937:quantum/rgblight.c **** 
 938:quantum/rgblight.c **** void rgblight_task(void) {
 939:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 940:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 941:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 942:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 943:quantum/rgblight.c ****         animation_status.delta      = delta;
 944:quantum/rgblight.c **** 
 945:quantum/rgblight.c ****         // static light mode, do nothing here
 946:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 947:quantum/rgblight.c ****         }
 948:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 949:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 950:quantum/rgblight.c ****             // breathing mode
 951:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 952:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 953:quantum/rgblight.c ****         }
 954:quantum/rgblight.c **** #    endif
 955:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 956:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 957:quantum/rgblight.c ****             // rainbow mood mode
 958:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 959:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 960:quantum/rgblight.c ****         }
 961:quantum/rgblight.c **** #    endif
 962:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 963:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 964:quantum/rgblight.c ****             // rainbow swirl mode
 965:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 966:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 967:quantum/rgblight.c ****         }
 968:quantum/rgblight.c **** #    endif
 969:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 970:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 971:quantum/rgblight.c ****             // snake mode
 972:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 973:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 974:quantum/rgblight.c ****         }
 975:quantum/rgblight.c **** #    endif
 976:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 977:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 978:quantum/rgblight.c ****             // knight mode
 979:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 980:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 981:quantum/rgblight.c ****         }
 982:quantum/rgblight.c **** #    endif
 983:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 984:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 985:quantum/rgblight.c ****             // christmas mode
 986:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 987:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 988:quantum/rgblight.c ****         }
 989:quantum/rgblight.c **** #    endif
 990:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 991:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 992:quantum/rgblight.c ****             // RGB test mode
 993:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 994:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 995:quantum/rgblight.c ****         }
 996:quantum/rgblight.c **** #    endif
 997:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 998:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 999:quantum/rgblight.c ****             interval_time = 500;
1000:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
1001:quantum/rgblight.c ****         }
1002:quantum/rgblight.c **** #    endif
1003:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_TWINKLE
1004:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_TWINKLE) {
1005:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
1006:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
1007:quantum/rgblight.c ****         }
1008:quantum/rgblight.c **** #    endif
1009:quantum/rgblight.c ****         if (animation_status.restart) {
1010:quantum/rgblight.c ****             animation_status.restart    = false;
1011:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
1012:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
1013:quantum/rgblight.c ****         }
1014:quantum/rgblight.c ****         uint16_t now = sync_timer_read();
1015:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
1016:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1017:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
1018:quantum/rgblight.c ****             static bool     tick_flag         = false;
1019:quantum/rgblight.c ****             uint16_t        oldpos16;
1020:quantum/rgblight.c ****             if (tick_flag) {
1021:quantum/rgblight.c ****                 tick_flag = false;
1022:quantum/rgblight.c ****                 if (timer_expired(now, report_last_timer)) {
1023:quantum/rgblight.c ****                     report_last_timer += 30000;
1024:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
1025:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
1026:quantum/rgblight.c ****                 }
1027:quantum/rgblight.c ****             }
1028:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
1029:quantum/rgblight.c **** #    endif
1030:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
1031:quantum/rgblight.c ****             effect_func(&animation_status);
1032:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1033:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
1034:quantum/rgblight.c ****                 tick_flag = true;
1035:quantum/rgblight.c ****             }
1036:quantum/rgblight.c **** #    endif
1037:quantum/rgblight.c ****         }
1038:quantum/rgblight.c ****     }
1039:quantum/rgblight.c **** 
1040:quantum/rgblight.c **** #    ifdef RGBLIGHT_LAYER_BLINK
1041:quantum/rgblight.c ****     rgblight_blink_layer_repeat_helper();
1042:quantum/rgblight.c **** #    endif
1043:quantum/rgblight.c **** }
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
1046:quantum/rgblight.c **** 
1047:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_TWINKLE)
1048:quantum/rgblight.c **** 
1049:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
1050:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
1051:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
1052:quantum/rgblight.c **** #        endif
1053:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
1054:quantum/rgblight.c **** #    endif
1055:quantum/rgblight.c **** 
1056:quantum/rgblight.c **** static uint8_t breathe_calc(uint8_t pos) {
1057:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
1058:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
1059:quantum/rgblight.c ****     return pgm_read_byte(&rgblight_effect_breathe_table[pos / table_scale]);
1060:quantum/rgblight.c **** #    else
1061:quantum/rgblight.c ****     return (exp(sin((pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT_EFFE
1062:quantum/rgblight.c **** #    endif
1063:quantum/rgblight.c **** }
1064:quantum/rgblight.c **** 
1065:quantum/rgblight.c **** #endif
1066:quantum/rgblight.c **** 
1067:quantum/rgblight.c **** // Effects
1068:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
1069:quantum/rgblight.c **** 
1070:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
1071:quantum/rgblight.c **** 
1072:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 1079               		.loc 1 1072 58 is_stmt 1 view -0
 1080               		.cfi_startproc
 1081               		.loc 1 1072 58 is_stmt 0 view .LVU243
 1082 0000 CF93      		push r28
 1083               	.LCFI10:
 1084               		.cfi_def_cfa_offset 3
 1085               		.cfi_offset 28, -2
 1086 0002 DF93      		push r29
 1087               	.LCFI11:
 1088               		.cfi_def_cfa_offset 4
 1089               		.cfi_offset 29, -3
 1090               	/* prologue: function */
 1091               	/* frame size = 0 */
 1092               	/* stack size = 2 */
 1093               	.L__stack_usage = 2
 1094 0004 EC01      		movw r28,r24
1073:quantum/rgblight.c ****     uint8_t val = breathe_calc(anim->pos);
 1095               		.loc 1 1073 5 is_stmt 1 view .LVU244
 1096               	.LVL54:
 1097               	.LBB34:
 1098               	.LBI34:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 1099               		.loc 1 1056 16 view .LVU245
 1100               	.LBE34:
1059:quantum/rgblight.c **** #    else
 1101               		.loc 1 1059 5 view .LVU246
 1102               	.LBB36:
 1103               	.LBB35:
1059:quantum/rgblight.c **** #    else
 1104               		.loc 1 1059 12 view .LVU247
1059:quantum/rgblight.c **** #    else
 1105               		.loc 1 1059 12 view .LVU248
1059:quantum/rgblight.c **** #    else
 1106               		.loc 1 1059 12 view .LVU249
 1107 0006 EC81      		ldd r30,Y+4
 1108 0008 F0E0      		ldi r31,0
 1109 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 1110 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 1111               	/* #APP */
 1112               	 ;  1059 "quantum/rgblight.c" 1
 1113 000e 4491      		lpm r20, Z
 1114               		
 1115               	 ;  0 "" 2
 1116               	.LVL55:
1059:quantum/rgblight.c **** #    else
 1117               		.loc 1 1059 12 view .LVU250
1059:quantum/rgblight.c **** #    else
 1118               		.loc 1 1059 12 is_stmt 0 view .LVU251
 1119               	/* #NOAPP */
 1120               	.LBE35:
 1121               	.LBE36:
1074:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 1122               		.loc 1 1074 5 is_stmt 1 view .LVU252
 1123 0010 E0E0      		ldi r30,lo8(rgblight_config)
 1124 0012 F0E0      		ldi r31,hi8(rgblight_config)
 1125 0014 6281      		ldd r22,Z+2
 1126 0016 8181      		ldd r24,Z+1
 1127               	.LVL56:
 1128               		.loc 1 1074 5 is_stmt 0 view .LVU253
 1129 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1130               	.LVL57:
1075:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 1131               		.loc 1 1075 5 is_stmt 1 view .LVU254
 1132               		.loc 1 1075 28 is_stmt 0 view .LVU255
 1133 001c 8C81      		ldd r24,Y+4
 1134 001e 8F5F      		subi r24,lo8(-(1))
 1135               		.loc 1 1075 15 view .LVU256
 1136 0020 8C83      		std Y+4,r24
 1137               	/* epilogue start */
1076:quantum/rgblight.c **** }
 1138               		.loc 1 1076 1 view .LVU257
 1139 0022 DF91      		pop r29
 1140 0024 CF91      		pop r28
 1141               	.LVL58:
 1142               		.loc 1 1076 1 view .LVU258
 1143 0026 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE177:
 1147               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 1148               	.global	rgblight_effect_rainbow_mood
 1150               	rgblight_effect_rainbow_mood:
 1151               	.LVL59:
 1152               	.LFB178:
1077:quantum/rgblight.c **** #endif
1078:quantum/rgblight.c **** 
1079:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
1080:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
1081:quantum/rgblight.c **** 
1082:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 1153               		.loc 1 1082 61 is_stmt 1 view -0
 1154               		.cfi_startproc
 1155               		.loc 1 1082 61 is_stmt 0 view .LVU260
 1156 0000 CF93      		push r28
 1157               	.LCFI12:
 1158               		.cfi_def_cfa_offset 3
 1159               		.cfi_offset 28, -2
 1160 0002 DF93      		push r29
 1161               	.LCFI13:
 1162               		.cfi_def_cfa_offset 4
 1163               		.cfi_offset 29, -3
 1164               	/* prologue: function */
 1165               	/* frame size = 0 */
 1166               	/* stack size = 2 */
 1167               	.L__stack_usage = 2
 1168 0004 EC01      		movw r28,r24
1083:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 1169               		.loc 1 1083 5 is_stmt 1 view .LVU261
 1170 0006 E0E0      		ldi r30,lo8(rgblight_config)
 1171 0008 F0E0      		ldi r31,hi8(rgblight_config)
 1172 000a 4381      		ldd r20,Z+3
 1173 000c 6281      		ldd r22,Z+2
 1174 000e 8C81      		ldd r24,Y+4
 1175               	.LVL60:
 1176               		.loc 1 1083 5 is_stmt 0 view .LVU262
 1177 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1178               	.LVL61:
1084:quantum/rgblight.c ****     anim->current_hue++;
 1179               		.loc 1 1084 5 is_stmt 1 view .LVU263
 1180               		.loc 1 1084 22 is_stmt 0 view .LVU264
 1181 0014 8C81      		ldd r24,Y+4
 1182 0016 8F5F      		subi r24,lo8(-(1))
 1183 0018 8C83      		std Y+4,r24
 1184               	/* epilogue start */
1085:quantum/rgblight.c **** }
 1185               		.loc 1 1085 1 view .LVU265
 1186 001a DF91      		pop r29
 1187 001c CF91      		pop r28
 1188               	.LVL62:
 1189               		.loc 1 1085 1 view .LVU266
 1190 001e 0895      		ret
 1191               		.cfi_endproc
 1192               	.LFE178:
 1194               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1195               	.global	rgblight_effect_rgbtest
 1197               	rgblight_effect_rgbtest:
 1198               	.LVL63:
 1199               	.LFB183:
1086:quantum/rgblight.c **** #endif
1087:quantum/rgblight.c **** 
1088:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
1089:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
1090:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
1091:quantum/rgblight.c **** #    endif
1092:quantum/rgblight.c **** 
1093:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
1094:quantum/rgblight.c **** 
1095:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
1096:quantum/rgblight.c ****     uint8_t hue;
1097:quantum/rgblight.c ****     uint8_t i;
1098:quantum/rgblight.c **** 
1099:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1100:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
1101:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
1102:quantum/rgblight.c ****     }
1103:quantum/rgblight.c ****     rgblight_set();
1104:quantum/rgblight.c **** 
1105:quantum/rgblight.c ****     if (anim->delta % 2) {
1106:quantum/rgblight.c ****         anim->current_hue++;
1107:quantum/rgblight.c ****     } else {
1108:quantum/rgblight.c ****         anim->current_hue--;
1109:quantum/rgblight.c ****     }
1110:quantum/rgblight.c **** }
1111:quantum/rgblight.c **** #endif
1112:quantum/rgblight.c **** 
1113:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
1114:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
1115:quantum/rgblight.c **** 
1116:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
1117:quantum/rgblight.c ****     static uint8_t pos = 0;
1118:quantum/rgblight.c ****     uint8_t        i, j;
1119:quantum/rgblight.c ****     int8_t         k;
1120:quantum/rgblight.c ****     int8_t         increment = 1;
1121:quantum/rgblight.c **** 
1122:quantum/rgblight.c ****     if (anim->delta % 2) {
1123:quantum/rgblight.c ****         increment = -1;
1124:quantum/rgblight.c ****     }
1125:quantum/rgblight.c **** 
1126:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1127:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1128:quantum/rgblight.c ****         if (increment == 1) {
1129:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1130:quantum/rgblight.c ****         } else {
1131:quantum/rgblight.c ****             pos = 0;
1132:quantum/rgblight.c ****         }
1133:quantum/rgblight.c ****         anim->pos = 1;
1134:quantum/rgblight.c ****     }
1135:quantum/rgblight.c **** #    endif
1136:quantum/rgblight.c **** 
1137:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1138:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1139:quantum/rgblight.c ****         ledp->r        = 0;
1140:quantum/rgblight.c ****         ledp->g        = 0;
1141:quantum/rgblight.c ****         ledp->b        = 0;
1142:quantum/rgblight.c **** #    ifdef RGBW
1143:quantum/rgblight.c ****         ledp->w = 0;
1144:quantum/rgblight.c **** #    endif
1145:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
1146:quantum/rgblight.c ****             k = pos + j * increment;
1147:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
1148:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
1149:quantum/rgblight.c ****             }
1150:quantum/rgblight.c ****             if (k < 0) {
1151:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
1152:quantum/rgblight.c ****             }
1153:quantum/rgblight.c ****             if (i == k) {
1154:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
1155:quantum/rgblight.c ****             }
1156:quantum/rgblight.c ****         }
1157:quantum/rgblight.c ****     }
1158:quantum/rgblight.c ****     rgblight_set();
1159:quantum/rgblight.c ****     if (increment == 1) {
1160:quantum/rgblight.c ****         if (pos - 1 < 0) {
1161:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
1162:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1163:quantum/rgblight.c ****             anim->pos = 0;
1164:quantum/rgblight.c **** #    endif
1165:quantum/rgblight.c ****         } else {
1166:quantum/rgblight.c ****             pos -= 1;
1167:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1168:quantum/rgblight.c ****             anim->pos = 1;
1169:quantum/rgblight.c **** #    endif
1170:quantum/rgblight.c ****         }
1171:quantum/rgblight.c ****     } else {
1172:quantum/rgblight.c ****         pos = (pos + 1) % rgblight_ranges.effect_num_leds;
1173:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1174:quantum/rgblight.c ****         anim->pos = pos;
1175:quantum/rgblight.c **** #    endif
1176:quantum/rgblight.c ****     }
1177:quantum/rgblight.c **** }
1178:quantum/rgblight.c **** #endif
1179:quantum/rgblight.c **** 
1180:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
1181:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
1182:quantum/rgblight.c **** 
1183:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
1184:quantum/rgblight.c ****     static int8_t low_bound  = 0;
1185:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1186:quantum/rgblight.c ****     static int8_t increment  = 1;
1187:quantum/rgblight.c ****     uint8_t       i, cur;
1188:quantum/rgblight.c **** 
1189:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1190:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
1191:quantum/rgblight.c ****         anim->pos  = 1;
1192:quantum/rgblight.c ****         low_bound  = 0;
1193:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1194:quantum/rgblight.c ****         increment  = 1;
1195:quantum/rgblight.c ****     }
1196:quantum/rgblight.c **** #    endif
1197:quantum/rgblight.c ****     // Set all the LEDs to 0
1198:quantum/rgblight.c ****     for (i = rgblight_ranges.effect_start_pos; i < rgblight_ranges.effect_end_pos; i++) {
1199:quantum/rgblight.c ****         led[i].r = 0;
1200:quantum/rgblight.c ****         led[i].g = 0;
1201:quantum/rgblight.c ****         led[i].b = 0;
1202:quantum/rgblight.c **** #    ifdef RGBW
1203:quantum/rgblight.c ****         led[i].w = 0;
1204:quantum/rgblight.c **** #    endif
1205:quantum/rgblight.c ****     }
1206:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1207:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1208:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
1209:quantum/rgblight.c **** 
1210:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1211:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1212:quantum/rgblight.c ****         } else {
1213:quantum/rgblight.c ****             led[cur].r = 0;
1214:quantum/rgblight.c ****             led[cur].g = 0;
1215:quantum/rgblight.c ****             led[cur].b = 0;
1216:quantum/rgblight.c **** #    ifdef RGBW
1217:quantum/rgblight.c ****             led[cur].w = 0;
1218:quantum/rgblight.c **** #    endif
1219:quantum/rgblight.c ****         }
1220:quantum/rgblight.c ****     }
1221:quantum/rgblight.c ****     rgblight_set();
1222:quantum/rgblight.c **** 
1223:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1224:quantum/rgblight.c ****     // time a boundary is hit.
1225:quantum/rgblight.c ****     low_bound += increment;
1226:quantum/rgblight.c ****     high_bound += increment;
1227:quantum/rgblight.c **** 
1228:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1229:quantum/rgblight.c ****         increment = -increment;
1230:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1231:quantum/rgblight.c ****         if (increment == 1) {
1232:quantum/rgblight.c ****             anim->pos = 0;
1233:quantum/rgblight.c ****         }
1234:quantum/rgblight.c **** #    endif
1235:quantum/rgblight.c ****     }
1236:quantum/rgblight.c **** }
1237:quantum/rgblight.c **** #endif
1238:quantum/rgblight.c **** 
1239:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1240:quantum/rgblight.c **** #    define CUBED(x) ((x) * (x) * (x))
1241:quantum/rgblight.c **** 
1242:quantum/rgblight.c **** /**
1243:quantum/rgblight.c ****  * Christmas lights effect, with a smooth animation between red & green.
1244:quantum/rgblight.c ****  */
1245:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1246:quantum/rgblight.c ****     static int8_t increment = 1;
1247:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
1248:quantum/rgblight.c ****     const uint8_t hue_green = 85;
1249:quantum/rgblight.c **** 
1250:quantum/rgblight.c ****     uint32_t xa;
1251:quantum/rgblight.c ****     uint8_t  hue, val;
1252:quantum/rgblight.c ****     uint8_t  i;
1253:quantum/rgblight.c **** 
1254:quantum/rgblight.c ****     // The effect works by animating anim->pos from 0 to 32 and back to 0.
1255:quantum/rgblight.c ****     // The pos is used in a cubic bezier formula to ease-in-out between red and green, leaving the 
1256:quantum/rgblight.c ****     xa  = CUBED((uint32_t)anim->pos);
1257:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
1258:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
1259:quantum/rgblight.c ****     val = 255 - (3 * (hue < hue_green / 2 ? hue : hue_green - hue) / 2);
1260:quantum/rgblight.c **** 
1261:quantum/rgblight.c ****     for (i = 0; i < rgblight_ranges.effect_num_leds; i++) {
1262:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
1263:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
1264:quantum/rgblight.c ****     }
1265:quantum/rgblight.c ****     rgblight_set();
1266:quantum/rgblight.c **** 
1267:quantum/rgblight.c ****     if (anim->pos == 0) {
1268:quantum/rgblight.c ****         increment = 1;
1269:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
1270:quantum/rgblight.c ****         increment = -1;
1271:quantum/rgblight.c ****     }
1272:quantum/rgblight.c ****     anim->pos += increment;
1273:quantum/rgblight.c **** }
1274:quantum/rgblight.c **** #endif
1275:quantum/rgblight.c **** 
1276:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1277:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1278:quantum/rgblight.c **** 
1279:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1200               		.loc 1 1279 56 is_stmt 1 view -0
 1201               		.cfi_startproc
 1202               		.loc 1 1279 56 is_stmt 0 view .LVU268
 1203 0000 0F93      		push r16
 1204               	.LCFI14:
 1205               		.cfi_def_cfa_offset 3
 1206               		.cfi_offset 16, -2
 1207 0002 1F93      		push r17
 1208               	.LCFI15:
 1209               		.cfi_def_cfa_offset 4
 1210               		.cfi_offset 17, -3
 1211 0004 CF93      		push r28
 1212               	.LCFI16:
 1213               		.cfi_def_cfa_offset 5
 1214               		.cfi_offset 28, -4
 1215 0006 DF93      		push r29
 1216               	.LCFI17:
 1217               		.cfi_def_cfa_offset 6
 1218               		.cfi_offset 29, -5
 1219 0008 00D0      		rcall .
 1220 000a 0F92      		push __tmp_reg__
 1221               	.LCFI18:
 1222               		.cfi_def_cfa_offset 9
 1223 000c CDB7      		in r28,__SP_L__
 1224 000e DEB7      		in r29,__SP_H__
 1225               	.LCFI19:
 1226               		.cfi_def_cfa_register 28
 1227               	/* prologue: function */
 1228               	/* frame size = 3 */
 1229               	/* stack size = 7 */
 1230               	.L__stack_usage = 7
 1231 0010 8C01      		movw r16,r24
1280:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1232               		.loc 1 1280 5 is_stmt 1 view .LVU269
1281:quantum/rgblight.c ****     uint8_t        g;
 1233               		.loc 1 1281 5 view .LVU270
1282:quantum/rgblight.c ****     uint8_t        r;
 1234               		.loc 1 1282 5 view .LVU271
1283:quantum/rgblight.c ****     uint8_t        b;
 1235               		.loc 1 1283 5 view .LVU272
1284:quantum/rgblight.c **** 
1285:quantum/rgblight.c ****     if (maxval == 0) {
 1236               		.loc 1 1285 5 view .LVU273
 1237               		.loc 1 1285 8 is_stmt 0 view .LVU274
 1238 0012 8091 0000 		lds r24,maxval.3477
 1239               	.LVL64:
 1240               		.loc 1 1285 8 view .LVU275
 1241 0016 8111      		cpse r24,__zero_reg__
 1242 0018 00C0      		rjmp .L63
 1243               	.LBB40:
1286:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1244               		.loc 1 1286 9 is_stmt 1 view .LVU276
1287:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1245               		.loc 1 1287 9 view .LVU277
 1246               	.LVL65:
 1247               	.LBB41:
 1248               	.LBI41:
 154:quantum/rgblight.c **** 
 1249               		.loc 1 154 6 view .LVU278
 1250               	.LBB42:
 154:quantum/rgblight.c **** 
 1251               		.loc 1 154 70 view .LVU279
 1252 001a 9E01      		movw r18,r28
 1253 001c 2F5F      		subi r18,-1
 1254 001e 3F4F      		sbci r19,-1
 1255 0020 4FEF      		ldi r20,lo8(-1)
 1256 0022 6FEF      		ldi r22,lo8(-1)
 1257 0024 0E94 0000 		call sethsv_raw
 1258               	.LVL66:
 154:quantum/rgblight.c **** 
 1259               		.loc 1 154 70 is_stmt 0 view .LVU280
 1260               	.LBE42:
 1261               	.LBE41:
1288:quantum/rgblight.c ****         maxval = tmp_led.r;
 1262               		.loc 1 1288 9 is_stmt 1 view .LVU281
 1263               		.loc 1 1288 16 is_stmt 0 view .LVU282
 1264 0028 8A81      		ldd r24,Y+2
 1265 002a 8093 0000 		sts maxval.3477,r24
 1266               	.L63:
 1267               	.LBE40:
1289:quantum/rgblight.c ****     }
1290:quantum/rgblight.c ****     g = r = b = 0;
 1268               		.loc 1 1290 5 is_stmt 1 view .LVU283
 1269               	.LVL67:
1291:quantum/rgblight.c ****     switch (anim->pos) {
 1270               		.loc 1 1291 5 view .LVU284
 1271               		.loc 1 1291 17 is_stmt 0 view .LVU285
 1272 002e F801      		movw r30,r16
 1273 0030 6481      		ldd r22,Z+4
 1274               		.loc 1 1291 5 view .LVU286
 1275 0032 6130      		cpi r22,lo8(1)
 1276 0034 01F0      		breq .L64
1292:quantum/rgblight.c ****         case 0:
1293:quantum/rgblight.c ****             r = maxval;
 1277               		.loc 1 1293 15 view .LVU287
 1278 0036 8091 0000 		lds r24,maxval.3477
 1279               	.LVL68:
1294:quantum/rgblight.c ****             break;
 1280               		.loc 1 1294 13 is_stmt 1 view .LVU288
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1281               		.loc 1 1290 15 is_stmt 0 view .LVU289
 1282 003a 40E0      		ldi r20,0
1291:quantum/rgblight.c ****         case 0:
 1283               		.loc 1 1291 5 view .LVU290
 1284 003c 6623      		tst r22
 1285 003e 01F0      		breq .L67
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1286               		.loc 1 1290 15 view .LVU291
 1287 0040 40E0      		ldi r20,0
1291:quantum/rgblight.c ****         case 0:
 1288               		.loc 1 1291 5 view .LVU292
 1289 0042 6230      		cpi r22,lo8(2)
 1290 0044 01F4      		brne .L68
1295:quantum/rgblight.c ****         case 1:
1296:quantum/rgblight.c ****             g = maxval;
1297:quantum/rgblight.c ****             break;
1298:quantum/rgblight.c ****         case 2:
1299:quantum/rgblight.c ****             b = maxval;
 1291               		.loc 1 1299 13 is_stmt 1 view .LVU293
 1292               		.loc 1 1299 15 is_stmt 0 view .LVU294
 1293 0046 4091 0000 		lds r20,maxval.3477
 1294               	.L68:
 1295               	.LVL69:
1300:quantum/rgblight.c ****             break;
 1296               		.loc 1 1300 13 is_stmt 1 view .LVU295
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1297               		.loc 1 1290 11 is_stmt 0 view .LVU296
 1298 004a 80E0      		ldi r24,0
 1299               	.LVL70:
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1300               		.loc 1 1290 7 view .LVU297
 1301 004c 60E0      		ldi r22,0
 1302               		.loc 1 1300 13 view .LVU298
 1303 004e 00C0      		rjmp .L67
 1304               	.LVL71:
 1305               	.L64:
1296:quantum/rgblight.c ****             break;
 1306               		.loc 1 1296 13 is_stmt 1 view .LVU299
1296:quantum/rgblight.c ****             break;
 1307               		.loc 1 1296 15 is_stmt 0 view .LVU300
 1308 0050 6091 0000 		lds r22,maxval.3477
 1309               	.LVL72:
1297:quantum/rgblight.c ****         case 2:
 1310               		.loc 1 1297 13 is_stmt 1 view .LVU301
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1311               		.loc 1 1290 15 is_stmt 0 view .LVU302
 1312 0054 40E0      		ldi r20,0
1290:quantum/rgblight.c ****     switch (anim->pos) {
 1313               		.loc 1 1290 11 view .LVU303
 1314 0056 80E0      		ldi r24,0
 1315               	.LVL73:
 1316               	.L67:
1301:quantum/rgblight.c ****     }
1302:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1317               		.loc 1 1302 5 is_stmt 1 view .LVU304
 1318 0058 0E94 0000 		call rgblight_setrgb
 1319               	.LVL74:
1303:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1320               		.loc 1 1303 5 view .LVU305
 1321               		.loc 1 1303 22 is_stmt 0 view .LVU306
 1322 005c F801      		movw r30,r16
 1323 005e 8481      		ldd r24,Z+4
 1324 0060 90E0      		ldi r25,0
 1325               		.loc 1 1303 28 view .LVU307
 1326 0062 0196      		adiw r24,1
 1327               		.loc 1 1303 33 view .LVU308
 1328 0064 63E0      		ldi r22,lo8(3)
 1329 0066 70E0      		ldi r23,0
 1330 0068 0E94 0000 		call __divmodhi4
 1331               		.loc 1 1303 15 view .LVU309
 1332 006c 8483      		std Z+4,r24
 1333               	/* epilogue start */
1304:quantum/rgblight.c **** }
 1334               		.loc 1 1304 1 view .LVU310
 1335 006e 0F90      		pop __tmp_reg__
 1336 0070 0F90      		pop __tmp_reg__
 1337 0072 0F90      		pop __tmp_reg__
 1338 0074 DF91      		pop r29
 1339 0076 CF91      		pop r28
 1340 0078 1F91      		pop r17
 1341 007a 0F91      		pop r16
 1342               	.LVL75:
 1343               		.loc 1 1304 1 view .LVU311
 1344 007c 0895      		ret
 1345               		.cfi_endproc
 1346               	.LFE183:
 1348               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1349               	.global	rgblight_sethsv_eeprom_helper
 1351               	rgblight_sethsv_eeprom_helper:
 1352               	.LVL76:
 1353               	.LFB144:
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1354               		.loc 1 471 97 is_stmt 1 view -0
 1355               		.cfi_startproc
 471:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1356               		.loc 1 471 97 is_stmt 0 view .LVU313
 1357 0000 AF92      		push r10
 1358               	.LCFI20:
 1359               		.cfi_def_cfa_offset 3
 1360               		.cfi_offset 10, -2
 1361 0002 BF92      		push r11
 1362               	.LCFI21:
 1363               		.cfi_def_cfa_offset 4
 1364               		.cfi_offset 11, -3
 1365 0004 CF92      		push r12
 1366               	.LCFI22:
 1367               		.cfi_def_cfa_offset 5
 1368               		.cfi_offset 12, -4
 1369 0006 DF92      		push r13
 1370               	.LCFI23:
 1371               		.cfi_def_cfa_offset 6
 1372               		.cfi_offset 13, -5
 1373 0008 EF92      		push r14
 1374               	.LCFI24:
 1375               		.cfi_def_cfa_offset 7
 1376               		.cfi_offset 14, -6
 1377 000a FF92      		push r15
 1378               	.LCFI25:
 1379               		.cfi_def_cfa_offset 8
 1380               		.cfi_offset 15, -7
 1381 000c 0F93      		push r16
 1382               	.LCFI26:
 1383               		.cfi_def_cfa_offset 9
 1384               		.cfi_offset 16, -8
 1385 000e 1F93      		push r17
 1386               	.LCFI27:
 1387               		.cfi_def_cfa_offset 10
 1388               		.cfi_offset 17, -9
 1389 0010 CF93      		push r28
 1390               	.LCFI28:
 1391               		.cfi_def_cfa_offset 11
 1392               		.cfi_offset 28, -10
 1393 0012 DF93      		push r29
 1394               	.LCFI29:
 1395               		.cfi_def_cfa_offset 12
 1396               		.cfi_offset 29, -11
 1397 0014 00D0      		rcall .
 1398 0016 0F92      		push __tmp_reg__
 1399               	.LCFI30:
 1400               		.cfi_def_cfa_offset 15
 1401 0018 CDB7      		in r28,__SP_L__
 1402 001a DEB7      		in r29,__SP_H__
 1403               	.LCFI31:
 1404               		.cfi_def_cfa_register 28
 1405               	/* prologue: function */
 1406               	/* frame size = 3 */
 1407               	/* stack size = 13 */
 1408               	.L__stack_usage = 13
 1409 001c 182F      		mov r17,r24
 1410 001e F62E      		mov r15,r22
 1411 0020 042F      		mov r16,r20
 1412 0022 E22E      		mov r14,r18
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1413               		.loc 1 472 5 is_stmt 1 view .LVU314
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1414               		.loc 1 472 9 is_stmt 0 view .LVU315
 1415 0024 9091 0000 		lds r25,rgblight_config
 472:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1416               		.loc 1 472 8 view .LVU316
 1417 0028 90FF      		sbrs r25,0
 1418 002a 00C0      		rjmp .L69
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1419               		.loc 1 473 9 is_stmt 1 view .LVU317
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1420               		.loc 1 473 68 is_stmt 0 view .LVU318
 1421 002c E92F      		mov r30,r25
 1422 002e E695      		lsr r30
 1423 0030 AE2F      		mov r26,r30
 1424 0032 B0E0      		ldi r27,0
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1425               		.loc 1 473 52 view .LVU319
 1426 0034 A050      		subi r26,lo8(-(mode_base_table))
 1427 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1428 0038 8C91      		ld r24,X
 1429               	.LVL77:
 473:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1430               		.loc 1 473 35 view .LVU320
 1431 003a 8093 0000 		sts rgblight_status,r24
 474:quantum/rgblight.c ****             // same static color
 1432               		.loc 1 474 9 is_stmt 1 view .LVU321
 474:quantum/rgblight.c ****             // same static color
 1433               		.loc 1 474 34 is_stmt 0 view .LVU322
 1434 003e 9E7F      		andi r25,lo8(-2)
 474:quantum/rgblight.c ****             // same static color
 1435               		.loc 1 474 12 view .LVU323
 1436 0040 9230      		cpi r25,lo8(2)
 1437 0042 01F4      		brne .L72
 1438               	.LBB52:
 476:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1439               		.loc 1 476 13 is_stmt 1 view .LVU324
 477:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1440               		.loc 1 477 13 view .LVU325
 1441               	.LVL78:
 1442               	.LBB53:
 1443               	.LBI53:
 154:quantum/rgblight.c **** 
 1444               		.loc 1 154 6 view .LVU326
 1445               	.LBB54:
 154:quantum/rgblight.c **** 
 1446               		.loc 1 154 70 view .LVU327
 1447 0044 9E01      		movw r18,r28
 1448               	.LVL79:
 154:quantum/rgblight.c **** 
 1449               		.loc 1 154 70 is_stmt 0 view .LVU328
 1450 0046 2F5F      		subi r18,-1
 1451 0048 3F4F      		sbci r19,-1
 1452 004a 812F      		mov r24,r17
 1453 004c 0E94 0000 		call sethsv_raw
 1454               	.LVL80:
 154:quantum/rgblight.c **** 
 1455               		.loc 1 154 70 view .LVU329
 1456               	.LBE54:
 1457               	.LBE53:
 478:quantum/rgblight.c ****         } else {
 1458               		.loc 1 478 13 is_stmt 1 view .LVU330
 1459 0050 4B81      		ldd r20,Y+3
 1460 0052 6981      		ldd r22,Y+1
 1461 0054 8A81      		ldd r24,Y+2
 1462 0056 0E94 0000 		call rgblight_setrgb
 1463               	.LVL81:
 1464               	.L73:
 478:quantum/rgblight.c ****         } else {
 1465               		.loc 1 478 13 is_stmt 0 view .LVU331
 1466               	.LBE52:
 531:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1467               		.loc 1 531 9 is_stmt 1 view .LVU332
 531:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1468               		.loc 1 531 29 is_stmt 0 view .LVU333
 1469 005a 1093 0000 		sts rgblight_config+1,r17
 532:quantum/rgblight.c ****         rgblight_config.val = val;
 1470               		.loc 1 532 9 is_stmt 1 view .LVU334
 532:quantum/rgblight.c ****         rgblight_config.val = val;
 1471               		.loc 1 532 29 is_stmt 0 view .LVU335
 1472 005e F092 0000 		sts rgblight_config+2,r15
 533:quantum/rgblight.c ****         if (write_to_eeprom) {
 1473               		.loc 1 533 9 is_stmt 1 view .LVU336
 533:quantum/rgblight.c ****         if (write_to_eeprom) {
 1474               		.loc 1 533 29 is_stmt 0 view .LVU337
 1475 0062 0093 0000 		sts rgblight_config+3,r16
 534:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1476               		.loc 1 534 9 is_stmt 1 view .LVU338
 534:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1477               		.loc 1 534 12 is_stmt 0 view .LVU339
 1478 0066 EE20      		tst r14
 1479 0068 01F0      		breq .L69
 535:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1480               		.loc 1 535 13 is_stmt 1 view .LVU340
 1481 006a 6091 0000 		lds r22,rgblight_config
 1482 006e 7091 0000 		lds r23,rgblight_config+1
 1483 0072 8091 0000 		lds r24,rgblight_config+2
 1484 0076 9091 0000 		lds r25,rgblight_config+3
 1485 007a 0E94 0000 		call eeconfig_update_rgblight
 1486               	.LVL82:
 536:quantum/rgblight.c ****         } else {
 1487               		.loc 1 536 124 view .LVU341
 538:quantum/rgblight.c ****         }
 1488               		.loc 1 538 126 view .LVU342
 1489               	.L69:
 1490               	/* epilogue start */
 541:quantum/rgblight.c **** 
 1491               		.loc 1 541 1 is_stmt 0 view .LVU343
 1492 007e 0F90      		pop __tmp_reg__
 1493 0080 0F90      		pop __tmp_reg__
 1494 0082 0F90      		pop __tmp_reg__
 1495 0084 DF91      		pop r29
 1496 0086 CF91      		pop r28
 1497 0088 1F91      		pop r17
 1498               	.LVL83:
 541:quantum/rgblight.c **** 
 1499               		.loc 1 541 1 view .LVU344
 1500 008a 0F91      		pop r16
 1501               	.LVL84:
 541:quantum/rgblight.c **** 
 1502               		.loc 1 541 1 view .LVU345
 1503 008c FF90      		pop r15
 1504               	.LVL85:
 541:quantum/rgblight.c **** 
 1505               		.loc 1 541 1 view .LVU346
 1506 008e EF90      		pop r14
 1507               	.LVL86:
 541:quantum/rgblight.c **** 
 1508               		.loc 1 541 1 view .LVU347
 1509 0090 DF90      		pop r13
 1510 0092 CF90      		pop r12
 1511 0094 BF90      		pop r11
 1512 0096 AF90      		pop r10
 1513 0098 0895      		ret
 1514               	.LVL87:
 1515               	.L72:
 481:quantum/rgblight.c ****             }
 1516               		.loc 1 481 13 is_stmt 1 view .LVU348
 484:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1517               		.loc 1 484 18 view .LVU349
 484:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1518               		.loc 1 484 21 is_stmt 0 view .LVU350
 1519 009a 8230      		cpi r24,lo8(2)
 1520 009c 01F4      		brne .L74
 486:quantum/rgblight.c ****             }
 1521               		.loc 1 486 17 is_stmt 1 view .LVU351
 486:quantum/rgblight.c ****             }
 1522               		.loc 1 486 21 is_stmt 0 view .LVU352
 1523 009e 0091 0000 		lds r16,rgblight_config+3
 1524               	.LVL88:
 486:quantum/rgblight.c ****             }
 1525               		.loc 1 486 21 view .LVU353
 1526 00a2 00C0      		rjmp .L73
 1527               	.L74:
 490:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1528               		.loc 1 490 18 is_stmt 1 view .LVU354
 490:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1529               		.loc 1 490 21 is_stmt 0 view .LVU355
 1530 00a4 8630      		cpi r24,lo8(6)
 1531 00a6 01F4      		brne .L75
 1532               	.L76:
 492:quantum/rgblight.c ****             }
 1533               		.loc 1 492 17 is_stmt 1 view .LVU356
 492:quantum/rgblight.c ****             }
 1534               		.loc 1 492 21 is_stmt 0 view .LVU357
 1535 00a8 1091 0000 		lds r17,rgblight_config+1
 1536               	.LVL89:
 492:quantum/rgblight.c ****             }
 1537               		.loc 1 492 21 view .LVU358
 1538 00ac 00C0      		rjmp .L73
 1539               	.L75:
 496:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1540               		.loc 1 496 18 is_stmt 1 view .LVU359
 496:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1541               		.loc 1 496 21 is_stmt 0 view .LVU360
 1542 00ae 8930      		cpi r24,lo8(9)
 1543 00b0 01F0      		breq .L76
 502:quantum/rgblight.c ****                 // static gradient
 1544               		.loc 1 502 18 is_stmt 1 view .LVU361
 502:quantum/rgblight.c ****                 // static gradient
 1545               		.loc 1 502 21 is_stmt 0 view .LVU362
 1546 00b2 8931      		cpi r24,lo8(25)
 1547 00b4 01F4      		brne .L73
 1548               	.LBB55:
 504:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1549               		.loc 1 504 17 is_stmt 1 view .LVU363
 504:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1550               		.loc 1 504 25 is_stmt 0 view .LVU364
 1551 00b6 E951      		subi r30,lo8(-(-25))
 1552               	.LVL90:
 505:quantum/rgblight.c **** #    ifdef __AVR__
 1553               		.loc 1 505 17 is_stmt 1 view .LVU365
 505:quantum/rgblight.c **** #    ifdef __AVR__
 1554               		.loc 1 505 49 is_stmt 0 view .LVU366
 1555 00b8 8E2F      		mov r24,r30
 1556 00ba 8170      		andi r24,lo8(1)
 1557 00bc D82E      		mov r13,r24
 1558               	.LVL91:
 508:quantum/rgblight.c **** #    else
 1559               		.loc 1 508 17 is_stmt 1 view .LVU367
 1560               	.LBB56:
 508:quantum/rgblight.c **** #    else
 1561               		.loc 1 508 33 view .LVU368
 1562 00be E695      		lsr r30
 1563               	.LVL92:
 508:quantum/rgblight.c **** #    else
 1564               		.loc 1 508 33 is_stmt 0 view .LVU369
 1565 00c0 F0E0      		ldi r31,0
 1566 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1567 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1568               	.LVL93:
 508:quantum/rgblight.c **** #    else
 1569               		.loc 1 508 33 is_stmt 1 view .LVU370
 508:quantum/rgblight.c **** #    else
 1570               		.loc 1 508 33 view .LVU371
 1571               	/* #APP */
 1572               	 ;  508 "quantum/rgblight.c" 1
 1573 00c6 A590      		lpm r10, Z+
 1574 00c8 B490      		lpm r11, Z
 1575               		
 1576               	 ;  0 "" 2
 1577               	.LVL94:
 508:quantum/rgblight.c **** #    else
 1578               		.loc 1 508 33 view .LVU372
 508:quantum/rgblight.c **** #    else
 1579               		.loc 1 508 33 is_stmt 0 view .LVU373
 1580               	/* #NOAPP */
 1581               	.LBE56:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1582               		.loc 1 512 17 is_stmt 1 view .LVU374
 1583               	.LBB57:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1584               		.loc 1 512 22 view .LVU375
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1585               		.loc 1 512 30 is_stmt 0 view .LVU376
 1586 00ca C12C      		mov r12,__zero_reg__
 1587               	.LBB58:
 513:quantum/rgblight.c ****                     if (direction) {
 1588               		.loc 1 513 49 view .LVU377
 1589 00cc BB24      		clr r11
 1590               	.LVL95:
 1591               	.L77:
 513:quantum/rgblight.c ****                     if (direction) {
 1592               		.loc 1 513 49 view .LVU378
 1593               	.LBE58:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1594               		.loc 1 512 37 is_stmt 1 discriminator 1 view .LVU379
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1595               		.loc 1 512 56 is_stmt 0 discriminator 1 view .LVU380
 1596 00ce 6091 0000 		lds r22,rgblight_ranges+4
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1597               		.loc 1 512 17 discriminator 1 view .LVU381
 1598 00d2 C616      		cp r12,r22
 1599 00d4 00F0      		brlo .L80
 1600               	.LBE57:
 522:quantum/rgblight.c ****             }
 1601               		.loc 1 522 17 is_stmt 1 view .LVU382
 1602 00d6 0E94 0000 		call rgblight_set
 1603               	.LVL96:
 1604 00da 00C0      		rjmp .L73
 1605               	.L80:
 1606               	.LBB65:
 1607               	.LBB63:
 513:quantum/rgblight.c ****                     if (direction) {
 1608               		.loc 1 513 21 view .LVU383
 513:quantum/rgblight.c ****                     if (direction) {
 1609               		.loc 1 513 37 is_stmt 0 view .LVU384
 1610 00dc 2C2D      		mov r18,r12
 1611 00de 30E0      		ldi r19,0
 513:quantum/rgblight.c ****                     if (direction) {
 1612               		.loc 1 513 49 view .LVU385
 1613 00e0 A29E      		mul r10,r18
 1614 00e2 C001      		movw r24,r0
 1615 00e4 A39E      		mul r10,r19
 1616 00e6 900D      		add r25,r0
 1617 00e8 B29E      		mul r11,r18
 1618 00ea 900D      		add r25,r0
 1619 00ec 1124      		clr r1
 513:quantum/rgblight.c ****                     if (direction) {
 1620               		.loc 1 513 85 view .LVU386
 1621 00ee 70E0      		ldi r23,0
 513:quantum/rgblight.c ****                     if (direction) {
 1622               		.loc 1 513 68 view .LVU387
 1623 00f0 0E94 0000 		call __udivmodhi4
 1624               	.LVL97:
 514:quantum/rgblight.c ****                         _hue = hue + _hue;
 1625               		.loc 1 514 21 is_stmt 1 view .LVU388
 515:quantum/rgblight.c ****                     } else {
 1626               		.loc 1 515 30 is_stmt 0 view .LVU389
 1627 00f4 812F      		mov r24,r17
 514:quantum/rgblight.c ****                         _hue = hue + _hue;
 1628               		.loc 1 514 24 view .LVU390
 1629 00f6 D110      		cpse r13,__zero_reg__
 1630 00f8 00C0      		rjmp .L78
 515:quantum/rgblight.c ****                     } else {
 1631               		.loc 1 515 25 is_stmt 1 view .LVU391
 515:quantum/rgblight.c ****                     } else {
 1632               		.loc 1 515 30 is_stmt 0 view .LVU392
 1633 00fa 860F      		add r24,r22
 1634               	.LVL98:
 1635               	.L79:
 519:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_start_pos]);
 1636               		.loc 1 519 98 is_stmt 1 discriminator 2 view .LVU393
 520:quantum/rgblight.c ****                 }
 1637               		.loc 1 520 21 discriminator 2 view .LVU394
 1638               	.LBB59:
 1639               	.LBI59:
 154:quantum/rgblight.c **** 
 1640               		.loc 1 154 6 discriminator 2 view .LVU395
 1641               	.LBB60:
 154:quantum/rgblight.c **** 
 1642               		.loc 1 154 70 discriminator 2 view .LVU396
 1643               	.LBE60:
 1644               	.LBE59:
 520:quantum/rgblight.c ****                 }
 1645               		.loc 1 520 80 is_stmt 0 discriminator 2 view .LVU397
 1646 00fc 4091 0000 		lds r20,rgblight_ranges+2
 520:quantum/rgblight.c ****                 }
 1647               		.loc 1 520 63 discriminator 2 view .LVU398
 1648 0100 420F      		add r20,r18
 1649 0102 532F      		mov r21,r19
 1650 0104 511D      		adc r21,__zero_reg__
 520:quantum/rgblight.c ****                 }
 1651               		.loc 1 520 21 discriminator 2 view .LVU399
 1652 0106 9A01      		movw r18,r20
 1653 0108 220F      		lsl r18
 1654 010a 331F      		rol r19
 1655 010c 240F      		add r18,r20
 1656 010e 351F      		adc r19,r21
 1657 0110 2050      		subi r18,lo8(-(led))
 1658 0112 3040      		sbci r19,hi8(-(led))
 1659               	.LBB62:
 1660               	.LBB61:
 154:quantum/rgblight.c **** 
 1661               		.loc 1 154 70 discriminator 2 view .LVU400
 1662 0114 402F      		mov r20,r16
 1663 0116 6F2D      		mov r22,r15
 1664 0118 0E94 0000 		call sethsv_raw
 1665               	.LVL99:
 154:quantum/rgblight.c **** 
 1666               		.loc 1 154 70 discriminator 2 view .LVU401
 1667               	.LBE61:
 1668               	.LBE62:
 1669               	.LBE63:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1670               		.loc 1 512 74 is_stmt 1 discriminator 2 view .LVU402
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1671               		.loc 1 512 75 is_stmt 0 discriminator 2 view .LVU403
 1672 011c C394      		inc r12
 1673               	.LVL100:
 512:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / rgblight_ranges.effect_num_led
 1674               		.loc 1 512 75 discriminator 2 view .LVU404
 1675 011e 00C0      		rjmp .L77
 1676               	.LVL101:
 1677               	.L78:
 1678               	.LBB64:
 517:quantum/rgblight.c ****                     }
 1679               		.loc 1 517 25 is_stmt 1 view .LVU405
 517:quantum/rgblight.c ****                     }
 1680               		.loc 1 517 30 is_stmt 0 view .LVU406
 1681 0120 861B      		sub r24,r22
 1682               	.LVL102:
 517:quantum/rgblight.c ****                     }
 1683               		.loc 1 517 30 view .LVU407
 1684 0122 00C0      		rjmp .L79
 1685               	.LBE64:
 1686               	.LBE65:
 1687               	.LBE55:
 1688               		.cfi_endproc
 1689               	.LFE144:
 1691               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1692               	.global	rgblight_increase_hue_helper
 1694               	rgblight_increase_hue_helper:
 1695               	.LVL103:
 1696               	.LFB119:
 406:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1697               		.loc 1 406 57 is_stmt 1 view -0
 1698               		.cfi_startproc
 1699               	/* prologue: function */
 1700               	/* frame size = 0 */
 1701               	/* stack size = 0 */
 1702               	.L__stack_usage = 0
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1703               		.loc 1 407 5 view .LVU409
 408:quantum/rgblight.c **** }
 1704               		.loc 1 408 5 view .LVU410
 1705 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1706 0002 F0E0      		ldi r31,hi8(rgblight_config)
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1707               		.loc 1 407 13 is_stmt 0 view .LVU411
 1708 0004 9181      		ldd r25,Z+1
 408:quantum/rgblight.c **** }
 1709               		.loc 1 408 5 view .LVU412
 1710 0006 282F      		mov r18,r24
 1711 0008 4381      		ldd r20,Z+3
 1712 000a 6281      		ldd r22,Z+2
 1713 000c 88E0      		ldi r24,lo8(8)
 1714               	.LVL104:
 408:quantum/rgblight.c **** }
 1715               		.loc 1 408 5 view .LVU413
 1716 000e 890F      		add r24,r25
 1717               	.LVL105:
 408:quantum/rgblight.c **** }
 1718               		.loc 1 408 5 view .LVU414
 1719 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1720               	.LVL106:
 408:quantum/rgblight.c **** }
 1721               		.loc 1 408 5 view .LVU415
 1722               		.cfi_endproc
 1723               	.LFE119:
 1725               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1726               	.global	rgblight_increase_hue_noeeprom
 1728               	rgblight_increase_hue_noeeprom:
 1729               	.LFB120:
 410:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1730               		.loc 1 410 43 is_stmt 1 view -0
 1731               		.cfi_startproc
 1732               	/* prologue: function */
 1733               	/* frame size = 0 */
 1734               	/* stack size = 0 */
 1735               	.L__stack_usage = 0
 410:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1736               		.loc 1 410 45 view .LVU417
 1737 0000 80E0      		ldi r24,0
 1738 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1739               	.LVL107:
 1740               		.cfi_endproc
 1741               	.LFE120:
 1743               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1744               	.global	rgblight_increase_hue
 1746               	rgblight_increase_hue:
 1747               	.LFB121:
 411:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1748               		.loc 1 411 34 view -0
 1749               		.cfi_startproc
 1750               	/* prologue: function */
 1751               	/* frame size = 0 */
 1752               	/* stack size = 0 */
 1753               	.L__stack_usage = 0
 411:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1754               		.loc 1 411 36 view .LVU419
 1755 0000 81E0      		ldi r24,lo8(1)
 1756 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1757               	.LVL108:
 1758               		.cfi_endproc
 1759               	.LFE121:
 1761               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1762               	.global	rgblight_decrease_hue_helper
 1764               	rgblight_decrease_hue_helper:
 1765               	.LVL109:
 1766               	.LFB122:
 412:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1767               		.loc 1 412 57 view -0
 1768               		.cfi_startproc
 1769               	/* prologue: function */
 1770               	/* frame size = 0 */
 1771               	/* stack size = 0 */
 1772               	.L__stack_usage = 0
 413:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1773               		.loc 1 413 5 view .LVU421
 414:quantum/rgblight.c **** }
 1774               		.loc 1 414 5 view .LVU422
 1775 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1776 0002 F0E0      		ldi r31,hi8(rgblight_config)
 413:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1777               		.loc 1 413 13 is_stmt 0 view .LVU423
 1778 0004 9181      		ldd r25,Z+1
 414:quantum/rgblight.c **** }
 1779               		.loc 1 414 5 view .LVU424
 1780 0006 282F      		mov r18,r24
 1781 0008 4381      		ldd r20,Z+3
 1782 000a 6281      		ldd r22,Z+2
 1783 000c 88EF      		ldi r24,lo8(-8)
 1784               	.LVL110:
 414:quantum/rgblight.c **** }
 1785               		.loc 1 414 5 view .LVU425
 1786 000e 890F      		add r24,r25
 1787               	.LVL111:
 414:quantum/rgblight.c **** }
 1788               		.loc 1 414 5 view .LVU426
 1789 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1790               	.LVL112:
 414:quantum/rgblight.c **** }
 1791               		.loc 1 414 5 view .LVU427
 1792               		.cfi_endproc
 1793               	.LFE122:
 1795               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1796               	.global	rgblight_decrease_hue_noeeprom
 1798               	rgblight_decrease_hue_noeeprom:
 1799               	.LFB123:
 416:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1800               		.loc 1 416 43 is_stmt 1 view -0
 1801               		.cfi_startproc
 1802               	/* prologue: function */
 1803               	/* frame size = 0 */
 1804               	/* stack size = 0 */
 1805               	.L__stack_usage = 0
 416:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1806               		.loc 1 416 45 view .LVU429
 1807 0000 80E0      		ldi r24,0
 1808 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1809               	.LVL113:
 1810               		.cfi_endproc
 1811               	.LFE123:
 1813               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1814               	.global	rgblight_decrease_hue
 1816               	rgblight_decrease_hue:
 1817               	.LFB124:
 417:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1818               		.loc 1 417 34 view -0
 1819               		.cfi_startproc
 1820               	/* prologue: function */
 1821               	/* frame size = 0 */
 1822               	/* stack size = 0 */
 1823               	.L__stack_usage = 0
 417:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1824               		.loc 1 417 36 view .LVU431
 1825 0000 81E0      		ldi r24,lo8(1)
 1826 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1827               	.LVL114:
 1828               		.cfi_endproc
 1829               	.LFE124:
 1831               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1832               	.global	rgblight_increase_sat_helper
 1834               	rgblight_increase_sat_helper:
 1835               	.LVL115:
 1836               	.LFB125:
 418:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1837               		.loc 1 418 57 view -0
 1838               		.cfi_startproc
 1839               	/* prologue: function */
 1840               	/* frame size = 0 */
 1841               	/* stack size = 0 */
 1842               	.L__stack_usage = 0
 419:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1843               		.loc 1 419 5 view .LVU433
 1844               	.LBB66:
 1845               	.LBI66:
 1846               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1847               		.loc 2 23 34 view .LVU434
 1848               	.LBB67:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1849               		.loc 2 30 5 view .LVU435
 1850               	.LBE67:
 1851               	.LBE66:
 419:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1852               		.loc 1 419 19 is_stmt 0 view .LVU436
 1853 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1854 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1855               	.LBB69:
 1856               	.LBB68:
 1857               		.loc 2 30 5 view .LVU437
 1858 0004 6281      		ldd r22,Z+2
 1859 0006 28E0      		ldi r18,lo8(8)
 1860               	/* #APP */
 1861               	 ;  30 "./lib/lib8tion/math8.h" 1
 1862 0008 620F      		add r22, r18    
 1863 000a 00F4      		brcc L_1447     
 1864 000c 6FEF      		ldi r22, 0xFF  
 1865               		L_1447: 
 1866               	 ;  0 "" 2
 1867               	.LVL116:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1868               		.loc 2 43 5 is_stmt 1 view .LVU438
 1869               		.loc 2 43 5 is_stmt 0 view .LVU439
 1870               	/* #NOAPP */
 1871               	.LBE68:
 1872               	.LBE69:
 420:quantum/rgblight.c **** }
 1873               		.loc 1 420 5 is_stmt 1 view .LVU440
 1874 000e 282F      		mov r18,r24
 1875 0010 4381      		ldd r20,Z+3
 1876 0012 8181      		ldd r24,Z+1
 1877               	.LVL117:
 420:quantum/rgblight.c **** }
 1878               		.loc 1 420 5 is_stmt 0 view .LVU441
 1879 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1880               	.LVL118:
 420:quantum/rgblight.c **** }
 1881               		.loc 1 420 5 view .LVU442
 1882               		.cfi_endproc
 1883               	.LFE125:
 1885               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1886               	.global	rgblight_increase_sat_noeeprom
 1888               	rgblight_increase_sat_noeeprom:
 1889               	.LFB126:
 422:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1890               		.loc 1 422 43 is_stmt 1 view -0
 1891               		.cfi_startproc
 1892               	/* prologue: function */
 1893               	/* frame size = 0 */
 1894               	/* stack size = 0 */
 1895               	.L__stack_usage = 0
 422:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1896               		.loc 1 422 45 view .LVU444
 1897 0000 80E0      		ldi r24,0
 1898 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1899               	.LVL119:
 1900               		.cfi_endproc
 1901               	.LFE126:
 1903               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1904               	.global	rgblight_increase_sat
 1906               	rgblight_increase_sat:
 1907               	.LFB127:
 423:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1908               		.loc 1 423 34 view -0
 1909               		.cfi_startproc
 1910               	/* prologue: function */
 1911               	/* frame size = 0 */
 1912               	/* stack size = 0 */
 1913               	.L__stack_usage = 0
 423:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1914               		.loc 1 423 36 view .LVU446
 1915 0000 81E0      		ldi r24,lo8(1)
 1916 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1917               	.LVL120:
 1918               		.cfi_endproc
 1919               	.LFE127:
 1921               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1922               	.global	rgblight_decrease_sat_helper
 1924               	rgblight_decrease_sat_helper:
 1925               	.LVL121:
 1926               	.LFB128:
 424:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1927               		.loc 1 424 57 view -0
 1928               		.cfi_startproc
 1929               	/* prologue: function */
 1930               	/* frame size = 0 */
 1931               	/* stack size = 0 */
 1932               	.L__stack_usage = 0
 425:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1933               		.loc 1 425 5 view .LVU448
 1934               	.LBB70:
 1935               	.LBI70:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1936               		.loc 2 88 34 view .LVU449
 1937               	.LBB71:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1938               		.loc 2 96 5 view .LVU450
 1939               	.LBE71:
 1940               	.LBE70:
 425:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1941               		.loc 1 425 19 is_stmt 0 view .LVU451
 1942 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1943 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1944               	.LBB73:
 1945               	.LBB72:
 1946               		.loc 2 96 5 view .LVU452
 1947 0004 6281      		ldd r22,Z+2
 1948 0006 28E0      		ldi r18,lo8(8)
 1949               	/* #APP */
 1950               	 ;  96 "./lib/lib8tion/math8.h" 1
 1951 0008 621B      		sub r22, r18    
 1952 000a 00F4      		brcc L_1503     
 1953 000c 60E0      		ldi r22, 0x00  
 1954               		L_1503: 
 1955               	 ;  0 "" 2
 1956               	.LVL122:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1957               		.loc 2 110 5 is_stmt 1 view .LVU453
 1958               		.loc 2 110 5 is_stmt 0 view .LVU454
 1959               	/* #NOAPP */
 1960               	.LBE72:
 1961               	.LBE73:
 426:quantum/rgblight.c **** }
 1962               		.loc 1 426 5 is_stmt 1 view .LVU455
 1963 000e 282F      		mov r18,r24
 1964 0010 4381      		ldd r20,Z+3
 1965 0012 8181      		ldd r24,Z+1
 1966               	.LVL123:
 426:quantum/rgblight.c **** }
 1967               		.loc 1 426 5 is_stmt 0 view .LVU456
 1968 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1969               	.LVL124:
 426:quantum/rgblight.c **** }
 1970               		.loc 1 426 5 view .LVU457
 1971               		.cfi_endproc
 1972               	.LFE128:
 1974               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1975               	.global	rgblight_decrease_sat_noeeprom
 1977               	rgblight_decrease_sat_noeeprom:
 1978               	.LFB129:
 428:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1979               		.loc 1 428 43 is_stmt 1 view -0
 1980               		.cfi_startproc
 1981               	/* prologue: function */
 1982               	/* frame size = 0 */
 1983               	/* stack size = 0 */
 1984               	.L__stack_usage = 0
 428:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1985               		.loc 1 428 45 view .LVU459
 1986 0000 80E0      		ldi r24,0
 1987 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1988               	.LVL125:
 1989               		.cfi_endproc
 1990               	.LFE129:
 1992               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1993               	.global	rgblight_decrease_sat
 1995               	rgblight_decrease_sat:
 1996               	.LFB130:
 429:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1997               		.loc 1 429 34 view -0
 1998               		.cfi_startproc
 1999               	/* prologue: function */
 2000               	/* frame size = 0 */
 2001               	/* stack size = 0 */
 2002               	.L__stack_usage = 0
 429:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 2003               		.loc 1 429 36 view .LVU461
 2004 0000 81E0      		ldi r24,lo8(1)
 2005 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 2006               	.LVL126:
 2007               		.cfi_endproc
 2008               	.LFE130:
 2010               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 2011               	.global	rgblight_increase_val_helper
 2013               	rgblight_increase_val_helper:
 2014               	.LVL127:
 2015               	.LFB131:
 430:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2016               		.loc 1 430 57 view -0
 2017               		.cfi_startproc
 2018               	/* prologue: function */
 2019               	/* frame size = 0 */
 2020               	/* stack size = 0 */
 2021               	.L__stack_usage = 0
 431:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2022               		.loc 1 431 5 view .LVU463
 2023               	.LBB74:
 2024               	.LBI74:
  23:./lib/lib8tion/math8.h **** {
 2025               		.loc 2 23 34 view .LVU464
 2026               	.LBB75:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2027               		.loc 2 30 5 view .LVU465
 2028               	.LBE75:
 2029               	.LBE74:
 431:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2030               		.loc 1 431 19 is_stmt 0 view .LVU466
 2031 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2032 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2033               	.LBB77:
 2034               	.LBB76:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 2035               		.loc 2 30 5 view .LVU467
 2036 0004 4381      		ldd r20,Z+3
 2037 0006 28E0      		ldi r18,lo8(8)
 2038               	/* #APP */
 2039               	 ;  30 "./lib/lib8tion/math8.h" 1
 2040 0008 420F      		add r20, r18    
 2041 000a 00F4      		brcc L_1559     
 2042 000c 4FEF      		ldi r20, 0xFF  
 2043               		L_1559: 
 2044               	 ;  0 "" 2
 2045               	.LVL128:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2046               		.loc 2 43 5 is_stmt 1 view .LVU468
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 2047               		.loc 2 43 5 is_stmt 0 view .LVU469
 2048               	/* #NOAPP */
 2049               	.LBE76:
 2050               	.LBE77:
 432:quantum/rgblight.c **** }
 2051               		.loc 1 432 5 is_stmt 1 view .LVU470
 2052 000e 282F      		mov r18,r24
 2053 0010 6281      		ldd r22,Z+2
 2054 0012 8181      		ldd r24,Z+1
 2055               	.LVL129:
 432:quantum/rgblight.c **** }
 2056               		.loc 1 432 5 is_stmt 0 view .LVU471
 2057 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2058               	.LVL130:
 432:quantum/rgblight.c **** }
 2059               		.loc 1 432 5 view .LVU472
 2060               		.cfi_endproc
 2061               	.LFE131:
 2063               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 2064               	.global	rgblight_increase_val_noeeprom
 2066               	rgblight_increase_val_noeeprom:
 2067               	.LFB132:
 434:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2068               		.loc 1 434 43 is_stmt 1 view -0
 2069               		.cfi_startproc
 2070               	/* prologue: function */
 2071               	/* frame size = 0 */
 2072               	/* stack size = 0 */
 2073               	.L__stack_usage = 0
 434:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 2074               		.loc 1 434 45 view .LVU474
 2075 0000 80E0      		ldi r24,0
 2076 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2077               	.LVL131:
 2078               		.cfi_endproc
 2079               	.LFE132:
 2081               		.section	.text.rgblight_increase_val,"ax",@progbits
 2082               	.global	rgblight_increase_val
 2084               	rgblight_increase_val:
 2085               	.LFB133:
 435:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2086               		.loc 1 435 34 view -0
 2087               		.cfi_startproc
 2088               	/* prologue: function */
 2089               	/* frame size = 0 */
 2090               	/* stack size = 0 */
 2091               	.L__stack_usage = 0
 435:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 2092               		.loc 1 435 36 view .LVU476
 2093 0000 81E0      		ldi r24,lo8(1)
 2094 0002 0C94 0000 		jmp rgblight_increase_val_helper
 2095               	.LVL132:
 2096               		.cfi_endproc
 2097               	.LFE133:
 2099               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 2100               	.global	rgblight_decrease_val_helper
 2102               	rgblight_decrease_val_helper:
 2103               	.LVL133:
 2104               	.LFB134:
 436:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 2105               		.loc 1 436 57 view -0
 2106               		.cfi_startproc
 2107               	/* prologue: function */
 2108               	/* frame size = 0 */
 2109               	/* stack size = 0 */
 2110               	.L__stack_usage = 0
 437:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2111               		.loc 1 437 5 view .LVU478
 2112               	.LBB78:
 2113               	.LBI78:
  88:./lib/lib8tion/math8.h **** {
 2114               		.loc 2 88 34 view .LVU479
 2115               	.LBB79:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2116               		.loc 2 96 5 view .LVU480
 2117               	.LBE79:
 2118               	.LBE78:
 437:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 2119               		.loc 1 437 19 is_stmt 0 view .LVU481
 2120 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2121 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2122               	.LBB81:
 2123               	.LBB80:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 2124               		.loc 2 96 5 view .LVU482
 2125 0004 4381      		ldd r20,Z+3
 2126 0006 28E0      		ldi r18,lo8(8)
 2127               	/* #APP */
 2128               	 ;  96 "./lib/lib8tion/math8.h" 1
 2129 0008 421B      		sub r20, r18    
 2130 000a 00F4      		brcc L_1615     
 2131 000c 40E0      		ldi r20, 0x00  
 2132               		L_1615: 
 2133               	 ;  0 "" 2
 2134               	.LVL134:
 2135               		.loc 2 110 5 is_stmt 1 view .LVU483
 2136               		.loc 2 110 5 is_stmt 0 view .LVU484
 2137               	/* #NOAPP */
 2138               	.LBE80:
 2139               	.LBE81:
 438:quantum/rgblight.c **** }
 2140               		.loc 1 438 5 is_stmt 1 view .LVU485
 2141 000e 282F      		mov r18,r24
 2142 0010 6281      		ldd r22,Z+2
 2143 0012 8181      		ldd r24,Z+1
 2144               	.LVL135:
 438:quantum/rgblight.c **** }
 2145               		.loc 1 438 5 is_stmt 0 view .LVU486
 2146 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2147               	.LVL136:
 438:quantum/rgblight.c **** }
 2148               		.loc 1 438 5 view .LVU487
 2149               		.cfi_endproc
 2150               	.LFE134:
 2152               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 2153               	.global	rgblight_decrease_val_noeeprom
 2155               	rgblight_decrease_val_noeeprom:
 2156               	.LFB135:
 440:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2157               		.loc 1 440 43 is_stmt 1 view -0
 2158               		.cfi_startproc
 2159               	/* prologue: function */
 2160               	/* frame size = 0 */
 2161               	/* stack size = 0 */
 2162               	.L__stack_usage = 0
 440:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 2163               		.loc 1 440 45 view .LVU489
 2164 0000 80E0      		ldi r24,0
 2165 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2166               	.LVL137:
 2167               		.cfi_endproc
 2168               	.LFE135:
 2170               		.section	.text.rgblight_decrease_val,"ax",@progbits
 2171               	.global	rgblight_decrease_val
 2173               	rgblight_decrease_val:
 2174               	.LFB136:
 441:quantum/rgblight.c **** 
 2175               		.loc 1 441 34 view -0
 2176               		.cfi_startproc
 2177               	/* prologue: function */
 2178               	/* frame size = 0 */
 2179               	/* stack size = 0 */
 2180               	.L__stack_usage = 0
 441:quantum/rgblight.c **** 
 2181               		.loc 1 441 36 view .LVU491
 2182 0000 81E0      		ldi r24,lo8(1)
 2183 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2184               	.LVL138:
 2185               		.cfi_endproc
 2186               	.LFE136:
 2188               		.section	.text.rgblight_sethsv,"ax",@progbits
 2189               	.global	rgblight_sethsv
 2191               	rgblight_sethsv:
 2192               	.LVL139:
 2193               	.LFB145:
 543:quantum/rgblight.c **** 
 2194               		.loc 1 543 61 view -0
 2195               		.cfi_startproc
 2196               	/* prologue: function */
 2197               	/* frame size = 0 */
 2198               	/* stack size = 0 */
 2199               	.L__stack_usage = 0
 543:quantum/rgblight.c **** 
 2200               		.loc 1 543 63 view .LVU493
 2201 0000 21E0      		ldi r18,lo8(1)
 2202 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2203               	.LVL140:
 543:quantum/rgblight.c **** 
 2204               		.loc 1 543 63 is_stmt 0 view .LVU494
 2205               		.cfi_endproc
 2206               	.LFE145:
 2208               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2209               	.global	rgblight_sethsv_noeeprom
 2211               	rgblight_sethsv_noeeprom:
 2212               	.LVL141:
 2213               	.LFB146:
 545:quantum/rgblight.c **** 
 2214               		.loc 1 545 70 is_stmt 1 view -0
 2215               		.cfi_startproc
 2216               	/* prologue: function */
 2217               	/* frame size = 0 */
 2218               	/* stack size = 0 */
 2219               	.L__stack_usage = 0
 545:quantum/rgblight.c **** 
 2220               		.loc 1 545 72 view .LVU496
 2221 0000 20E0      		ldi r18,0
 2222 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2223               	.LVL142:
 545:quantum/rgblight.c **** 
 2224               		.loc 1 545 72 is_stmt 0 view .LVU497
 2225               		.cfi_endproc
 2226               	.LFE146:
 2228               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2229               	.global	rgblight_setrgb_at
 2231               	rgblight_setrgb_at:
 2232               	.LVL143:
 2233               	.LFB156:
 587:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2234               		.loc 1 587 73 is_stmt 1 view -0
 2235               		.cfi_startproc
 2236               	/* prologue: function */
 2237               	/* frame size = 0 */
 2238               	/* stack size = 0 */
 2239               	.L__stack_usage = 0
 588:quantum/rgblight.c ****         return;
 2240               		.loc 1 588 5 view .LVU499
 588:quantum/rgblight.c ****         return;
 2241               		.loc 1 588 25 is_stmt 0 view .LVU500
 2242 0000 9091 0000 		lds r25,rgblight_config
 588:quantum/rgblight.c ****         return;
 2243               		.loc 1 588 8 view .LVU501
 2244 0004 90FF      		sbrs r25,0
 2245 0006 00C0      		rjmp .L108
 588:quantum/rgblight.c ****         return;
 2246               		.loc 1 588 33 discriminator 1 view .LVU502
 2247 0008 2431      		cpi r18,lo8(20)
 2248 000a 00F4      		brsh .L108
 592:quantum/rgblight.c ****     led[index].g = g;
 2249               		.loc 1 592 5 is_stmt 1 view .LVU503
 592:quantum/rgblight.c ****     led[index].g = g;
 2250               		.loc 1 592 15 is_stmt 0 view .LVU504
 2251 000c 30E0      		ldi r19,0
 592:quantum/rgblight.c ****     led[index].g = g;
 2252               		.loc 1 592 18 view .LVU505
 2253 000e F901      		movw r30,r18
 2254 0010 EE0F      		lsl r30
 2255 0012 FF1F      		rol r31
 2256 0014 E20F      		add r30,r18
 2257 0016 F31F      		adc r31,r19
 2258 0018 E050      		subi r30,lo8(-(led))
 2259 001a F040      		sbci r31,hi8(-(led))
 2260 001c 8183      		std Z+1,r24
 593:quantum/rgblight.c ****     led[index].b = b;
 2261               		.loc 1 593 5 is_stmt 1 view .LVU506
 593:quantum/rgblight.c ****     led[index].b = b;
 2262               		.loc 1 593 18 is_stmt 0 view .LVU507
 2263 001e 6083      		st Z,r22
 594:quantum/rgblight.c **** #ifdef RGBW
 2264               		.loc 1 594 5 is_stmt 1 view .LVU508
 594:quantum/rgblight.c **** #ifdef RGBW
 2265               		.loc 1 594 18 is_stmt 0 view .LVU509
 2266 0020 4283      		std Z+2,r20
 598:quantum/rgblight.c **** }
 2267               		.loc 1 598 5 is_stmt 1 view .LVU510
 2268 0022 0C94 0000 		jmp rgblight_set
 2269               	.LVL144:
 2270               	.L108:
 2271               	/* epilogue start */
 599:quantum/rgblight.c **** 
 2272               		.loc 1 599 1 is_stmt 0 view .LVU511
 2273 0026 0895      		ret
 2274               		.cfi_endproc
 2275               	.LFE156:
 2277               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2278               	.global	rgblight_sethsv_at
 2280               	rgblight_sethsv_at:
 2281               	.LVL145:
 2282               	.LFB157:
 601:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2283               		.loc 1 601 79 is_stmt 1 view -0
 2284               		.cfi_startproc
 601:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2285               		.loc 1 601 79 is_stmt 0 view .LVU513
 2286 0000 1F93      		push r17
 2287               	.LCFI32:
 2288               		.cfi_def_cfa_offset 3
 2289               		.cfi_offset 17, -2
 2290 0002 CF93      		push r28
 2291               	.LCFI33:
 2292               		.cfi_def_cfa_offset 4
 2293               		.cfi_offset 28, -3
 2294 0004 DF93      		push r29
 2295               	.LCFI34:
 2296               		.cfi_def_cfa_offset 5
 2297               		.cfi_offset 29, -4
 2298 0006 00D0      		rcall .
 2299 0008 0F92      		push __tmp_reg__
 2300               	.LCFI35:
 2301               		.cfi_def_cfa_offset 8
 2302 000a CDB7      		in r28,__SP_L__
 2303 000c DEB7      		in r29,__SP_H__
 2304               	.LCFI36:
 2305               		.cfi_def_cfa_register 28
 2306               	/* prologue: function */
 2307               	/* frame size = 3 */
 2308               	/* stack size = 6 */
 2309               	.L__stack_usage = 6
 2310 000e 122F      		mov r17,r18
 602:quantum/rgblight.c ****         return;
 2311               		.loc 1 602 5 is_stmt 1 view .LVU514
 602:quantum/rgblight.c ****         return;
 2312               		.loc 1 602 25 is_stmt 0 view .LVU515
 2313 0010 9091 0000 		lds r25,rgblight_config
 602:quantum/rgblight.c ****         return;
 2314               		.loc 1 602 8 view .LVU516
 2315 0014 90FF      		sbrs r25,0
 2316 0016 00C0      		rjmp .L113
 606:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2317               		.loc 1 606 5 is_stmt 1 view .LVU517
 607:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2318               		.loc 1 607 5 view .LVU518
 2319               	.LVL146:
 2320               	.LBB84:
 2321               	.LBI84:
 154:quantum/rgblight.c **** 
 2322               		.loc 1 154 6 view .LVU519
 2323               	.LBB85:
 154:quantum/rgblight.c **** 
 2324               		.loc 1 154 70 view .LVU520
 2325 0018 9E01      		movw r18,r28
 2326               	.LVL147:
 154:quantum/rgblight.c **** 
 2327               		.loc 1 154 70 is_stmt 0 view .LVU521
 2328 001a 2F5F      		subi r18,-1
 2329 001c 3F4F      		sbci r19,-1
 2330 001e 0E94 0000 		call sethsv_raw
 2331               	.LVL148:
 154:quantum/rgblight.c **** 
 2332               		.loc 1 154 70 view .LVU522
 2333               	.LBE85:
 2334               	.LBE84:
 608:quantum/rgblight.c **** }
 2335               		.loc 1 608 5 is_stmt 1 view .LVU523
 2336 0022 212F      		mov r18,r17
 2337 0024 4B81      		ldd r20,Y+3
 2338 0026 6981      		ldd r22,Y+1
 2339 0028 8A81      		ldd r24,Y+2
 2340 002a 0E94 0000 		call rgblight_setrgb_at
 2341               	.LVL149:
 2342               	.L113:
 2343               	/* epilogue start */
 609:quantum/rgblight.c **** 
 2344               		.loc 1 609 1 is_stmt 0 view .LVU524
 2345 002e 0F90      		pop __tmp_reg__
 2346 0030 0F90      		pop __tmp_reg__
 2347 0032 0F90      		pop __tmp_reg__
 2348 0034 DF91      		pop r29
 2349 0036 CF91      		pop r28
 2350 0038 1F91      		pop r17
 2351               	.LVL150:
 609:quantum/rgblight.c **** 
 2352               		.loc 1 609 1 view .LVU525
 2353 003a 0895      		ret
 2354               		.cfi_endproc
 2355               	.LFE157:
 2357               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2358               	.global	rgblight_setrgb_range
 2360               	rgblight_setrgb_range:
 2361               	.LVL151:
 2362               	.LFB159:
 623:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2363               		.loc 1 623 89 is_stmt 1 view -0
 2364               		.cfi_startproc
 623:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2365               		.loc 1 623 89 is_stmt 0 view .LVU527
 2366 0000 0F93      		push r16
 2367               	.LCFI37:
 2368               		.cfi_def_cfa_offset 3
 2369               		.cfi_offset 16, -2
 2370               	/* prologue: function */
 2371               	/* frame size = 0 */
 2372               	/* stack size = 1 */
 2373               	.L__stack_usage = 1
 624:quantum/rgblight.c ****         return;
 2374               		.loc 1 624 5 is_stmt 1 view .LVU528
 624:quantum/rgblight.c ****         return;
 2375               		.loc 1 624 25 is_stmt 0 view .LVU529
 2376 0002 9091 0000 		lds r25,rgblight_config
 624:quantum/rgblight.c ****         return;
 2377               		.loc 1 624 8 view .LVU530
 2378 0006 90FF      		sbrs r25,0
 2379 0008 00C0      		rjmp .L116
 624:quantum/rgblight.c ****         return;
 2380               		.loc 1 624 46 discriminator 1 view .LVU531
 2381 000a 2017      		cp r18,r16
 2382 000c 00F4      		brsh .L116
 624:quantum/rgblight.c ****         return;
 2383               		.loc 1 624 62 discriminator 2 view .LVU532
 2384 000e 0531      		cpi r16,lo8(21)
 2385 0010 00F4      		brsh .L116
 2386 0012 93E0      		ldi r25,lo8(3)
 2387 0014 299F      		mul r18,r25
 2388 0016 F001      		movw r30,r0
 2389 0018 1124      		clr __zero_reg__
 2390 001a E050      		subi r30,lo8(-(led))
 2391 001c F040      		sbci r31,hi8(-(led))
 2392               	.LVL152:
 2393               	.L118:
 2394               	.LBB86:
 629:quantum/rgblight.c ****         led[i].g = g;
 2395               		.loc 1 629 9 is_stmt 1 discriminator 3 view .LVU533
 629:quantum/rgblight.c ****         led[i].g = g;
 2396               		.loc 1 629 18 is_stmt 0 discriminator 3 view .LVU534
 2397 001e 8183      		std Z+1,r24
 630:quantum/rgblight.c ****         led[i].b = b;
 2398               		.loc 1 630 9 is_stmt 1 discriminator 3 view .LVU535
 630:quantum/rgblight.c ****         led[i].b = b;
 2399               		.loc 1 630 18 is_stmt 0 discriminator 3 view .LVU536
 2400 0020 6083      		st Z,r22
 631:quantum/rgblight.c **** #ifdef RGBW
 2401               		.loc 1 631 9 is_stmt 1 discriminator 3 view .LVU537
 631:quantum/rgblight.c **** #ifdef RGBW
 2402               		.loc 1 631 18 is_stmt 0 discriminator 3 view .LVU538
 2403 0022 4283      		std Z+2,r20
 628:quantum/rgblight.c ****         led[i].r = r;
 2404               		.loc 1 628 38 is_stmt 1 discriminator 3 view .LVU539
 628:quantum/rgblight.c ****         led[i].r = r;
 2405               		.loc 1 628 39 is_stmt 0 discriminator 3 view .LVU540
 2406 0024 2F5F      		subi r18,lo8(-(1))
 2407               	.LVL153:
 628:quantum/rgblight.c ****         led[i].r = r;
 2408               		.loc 1 628 29 is_stmt 1 discriminator 3 view .LVU541
 2409 0026 3396      		adiw r30,3
 628:quantum/rgblight.c ****         led[i].r = r;
 2410               		.loc 1 628 5 is_stmt 0 discriminator 3 view .LVU542
 2411 0028 0213      		cpse r16,r18
 2412 002a 00C0      		rjmp .L118
 628:quantum/rgblight.c ****         led[i].r = r;
 2413               		.loc 1 628 5 discriminator 3 view .LVU543
 2414               	.LBE86:
 636:quantum/rgblight.c ****     wait_ms(1);
 2415               		.loc 1 636 5 is_stmt 1 view .LVU544
 2416 002c 0E94 0000 		call rgblight_set
 2417               	.LVL154:
 637:quantum/rgblight.c **** }
 2418               		.loc 1 637 5 view .LVU545
 2419               	.LBB87:
 2420               	.LBI87:
 2421               		.file 3 "e:\\game\\msys2\\mingw64\\avr\\include\\util\\delay.h"
   1:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:e:\game\msys2\mingw64\avr\include\util\delay.h ****    All rights reserved.
   5:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
   6:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:e:\game\msys2\mingw64\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
   9:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:e:\game\msys2\mingw64\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  12:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:e:\game\msys2\mingw64\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:e:\game\msys2\mingw64\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:e:\game\msys2\mingw64\avr\include\util\delay.h ****      distribution.
  16:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  17:e:\game\msys2\mingw64\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:e:\game\msys2\mingw64\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:e:\game\msys2\mingw64\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  21:e:\game\msys2\mingw64\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:e:\game\msys2\mingw64\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:e:\game\msys2\mingw64\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:e:\game\msys2\mingw64\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:e:\game\msys2\mingw64\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:e:\game\msys2\mingw64\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:e:\game\msys2\mingw64\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:e:\game\msys2\mingw64\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:e:\game\msys2\mingw64\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:e:\game\msys2\mingw64\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:e:\game\msys2\mingw64\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  33:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  35:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:e:\game\msys2\mingw64\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  38:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:e:\game\msys2\mingw64\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  endif
  42:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  44:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <inttypes.h>
  45:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:e:\game\msys2\mingw64\avr\include\util\delay.h **** #include <math.h>
  47:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  48:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \file */
  49:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \code
  51:e:\game\msys2\mingw64\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:e:\game\msys2\mingw64\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:e:\game\msys2\mingw64\avr\include\util\delay.h ****     #include <util/delay.h>
  54:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \endcode
  55:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  56:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:e:\game\msys2\mingw64\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:e:\game\msys2\mingw64\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:e:\game\msys2\mingw64\avr\include\util\delay.h ****     used.
  60:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  61:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:e:\game\msys2\mingw64\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:e:\game\msys2\mingw64\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:e:\game\msys2\mingw64\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:e:\game\msys2\mingw64\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:e:\game\msys2\mingw64\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:e:\game\msys2\mingw64\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:e:\game\msys2\mingw64\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  70:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:e:\game\msys2\mingw64\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:e:\game\msys2\mingw64\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:e:\game\msys2\mingw64\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:e:\game\msys2\mingw64\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:e:\game\msys2\mingw64\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:e:\game\msys2\mingw64\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:e:\game\msys2\mingw64\avr\include\util\delay.h ****     routines linked into the application.
  78:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  79:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:e:\game\msys2\mingw64\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:e:\game\msys2\mingw64\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  83:e:\game\msys2\mingw64\avr\include\util\delay.h **** */
  84:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  85:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:e:\game\msys2\mingw64\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:e:\game\msys2\mingw64\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
  89:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  90:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef F_CPU
  91:e:\game\msys2\mingw64\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:e:\game\msys2\mingw64\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:e:\game\msys2\mingw64\avr\include\util\delay.h **** /** \ingroup util_delay
  94:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \def F_CPU
  95:e:\game\msys2\mingw64\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
  97:e:\game\msys2\mingw64\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:e:\game\msys2\mingw64\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:e:\game\msys2\mingw64\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:e:\game\msys2\mingw64\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:e:\game\msys2\mingw64\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 103:e:\game\msys2\mingw64\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:e:\game\msys2\mingw64\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:e:\game\msys2\mingw64\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:e:\game\msys2\mingw64\avr\include\util\delay.h ****     integer value.
 107:e:\game\msys2\mingw64\avr\include\util\delay.h ****  */
 108:e:\game\msys2\mingw64\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 110:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 111:e:\game\msys2\mingw64\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:e:\game\msys2\mingw64\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 114:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 115:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:e:\game\msys2\mingw64\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:e:\game\msys2\mingw64\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:e:\game\msys2\mingw64\avr\include\util\delay.h **** #  include <math.h>
 119:e:\game\msys2\mingw64\avr\include\util\delay.h **** #endif
 120:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 121:e:\game\msys2\mingw64\avr\include\util\delay.h **** /**
 122:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \ingroup util_delay
 123:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 124:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 126:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:e:\game\msys2\mingw64\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 129:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 131:e:\game\msys2\mingw64\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:e:\game\msys2\mingw64\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:e:\game\msys2\mingw64\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:e:\game\msys2\mingw64\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:e:\game\msys2\mingw64\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 137:e:\game\msys2\mingw64\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:e:\game\msys2\mingw64\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:e:\game\msys2\mingw64\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:e:\game\msys2\mingw64\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 142:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:e:\game\msys2\mingw64\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:e:\game\msys2\mingw64\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:e:\game\msys2\mingw64\avr\include\util\delay.h ****    microseconds of delay.
 146:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 147:e:\game\msys2\mingw64\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:e:\game\msys2\mingw64\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:e:\game\msys2\mingw64\avr\include\util\delay.h ****    respectively.
 151:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 152:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \note
 153:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 154:e:\game\msys2\mingw64\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:e:\game\msys2\mingw64\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:e:\game\msys2\mingw64\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:e:\game\msys2\mingw64\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:e:\game\msys2\mingw64\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:e:\game\msys2\mingw64\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:e:\game\msys2\mingw64\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:e:\game\msys2\mingw64\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:e:\game\msys2\mingw64\avr\include\util\delay.h ****    not available to the compiler then.
 163:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 164:e:\game\msys2\mingw64\avr\include\util\delay.h ****  */
 165:e:\game\msys2\mingw64\avr\include\util\delay.h **** void
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** _delay_ms(double __ms)
 2422               		.loc 3 166 1 view .LVU546
 2423               	.LBB88:
 167:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	double __tmp ;
 2424               		.loc 3 168 2 view .LVU547
 169:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:e:\game\msys2\mingw64\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:e:\game\msys2\mingw64\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 2425               		.loc 3 172 2 view .LVU548
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2426               		.loc 3 173 2 view .LVU549
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2427               		.loc 3 174 2 view .LVU550
 175:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 176:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 179:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 182:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#else
 183:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		//round up by default
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2428               		.loc 3 184 3 view .LVU551
 185:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 186:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 187:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2429               		.loc 3 187 2 view .LVU552
 2430 0030 8FE9      		ldi r24,lo8(3999)
 2431 0032 9FE0      		ldi r25,hi8(3999)
 2432 0034 0197      	1:	sbiw r24,1
 2433 0036 01F4      		brne 1b
 2434 0038 00C0      		rjmp .
 2435 003a 0000      		nop
 2436               	.LVL155:
 2437               	.L116:
 2438               	/* epilogue start */
 2439               		.loc 3 187 2 is_stmt 0 view .LVU553
 2440               	.LBE88:
 2441               	.LBE87:
 638:quantum/rgblight.c **** 
 2442               		.loc 1 638 1 view .LVU554
 2443 003c 0F91      		pop r16
 2444               	.LVL156:
 638:quantum/rgblight.c **** 
 2445               		.loc 1 638 1 view .LVU555
 2446 003e 0895      		ret
 2447               		.cfi_endproc
 2448               	.LFE159:
 2450               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2451               	.global	rgblight_sethsv_range
 2453               	rgblight_sethsv_range:
 2454               	.LVL157:
 2455               	.LFB160:
 640:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2456               		.loc 1 640 95 is_stmt 1 view -0
 2457               		.cfi_startproc
 640:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2458               		.loc 1 640 95 is_stmt 0 view .LVU557
 2459 0000 0F93      		push r16
 2460               	.LCFI38:
 2461               		.cfi_def_cfa_offset 3
 2462               		.cfi_offset 16, -2
 2463 0002 1F93      		push r17
 2464               	.LCFI39:
 2465               		.cfi_def_cfa_offset 4
 2466               		.cfi_offset 17, -3
 2467 0004 CF93      		push r28
 2468               	.LCFI40:
 2469               		.cfi_def_cfa_offset 5
 2470               		.cfi_offset 28, -4
 2471 0006 DF93      		push r29
 2472               	.LCFI41:
 2473               		.cfi_def_cfa_offset 6
 2474               		.cfi_offset 29, -5
 2475 0008 00D0      		rcall .
 2476 000a 0F92      		push __tmp_reg__
 2477               	.LCFI42:
 2478               		.cfi_def_cfa_offset 9
 2479 000c CDB7      		in r28,__SP_L__
 2480 000e DEB7      		in r29,__SP_H__
 2481               	.LCFI43:
 2482               		.cfi_def_cfa_register 28
 2483               	/* prologue: function */
 2484               	/* frame size = 3 */
 2485               	/* stack size = 7 */
 2486               	.L__stack_usage = 7
 2487 0010 122F      		mov r17,r18
 641:quantum/rgblight.c ****         return;
 2488               		.loc 1 641 5 is_stmt 1 view .LVU558
 641:quantum/rgblight.c ****         return;
 2489               		.loc 1 641 25 is_stmt 0 view .LVU559
 2490 0012 9091 0000 		lds r25,rgblight_config
 641:quantum/rgblight.c ****         return;
 2491               		.loc 1 641 8 view .LVU560
 2492 0016 90FF      		sbrs r25,0
 2493 0018 00C0      		rjmp .L123
 645:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2494               		.loc 1 645 5 is_stmt 1 view .LVU561
 646:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2495               		.loc 1 646 5 view .LVU562
 2496               	.LVL158:
 2497               	.LBB91:
 2498               	.LBI91:
 154:quantum/rgblight.c **** 
 2499               		.loc 1 154 6 view .LVU563
 2500               	.LBB92:
 154:quantum/rgblight.c **** 
 2501               		.loc 1 154 70 view .LVU564
 2502 001a 9E01      		movw r18,r28
 2503               	.LVL159:
 154:quantum/rgblight.c **** 
 2504               		.loc 1 154 70 is_stmt 0 view .LVU565
 2505 001c 2F5F      		subi r18,-1
 2506 001e 3F4F      		sbci r19,-1
 2507 0020 0E94 0000 		call sethsv_raw
 2508               	.LVL160:
 154:quantum/rgblight.c **** 
 2509               		.loc 1 154 70 view .LVU566
 2510               	.LBE92:
 2511               	.LBE91:
 647:quantum/rgblight.c **** }
 2512               		.loc 1 647 5 is_stmt 1 view .LVU567
 2513 0024 212F      		mov r18,r17
 2514 0026 4B81      		ldd r20,Y+3
 2515 0028 6981      		ldd r22,Y+1
 2516 002a 8A81      		ldd r24,Y+2
 2517 002c 0E94 0000 		call rgblight_setrgb_range
 2518               	.LVL161:
 2519               	.L123:
 2520               	/* epilogue start */
 648:quantum/rgblight.c **** 
 2521               		.loc 1 648 1 is_stmt 0 view .LVU568
 2522 0030 0F90      		pop __tmp_reg__
 2523 0032 0F90      		pop __tmp_reg__
 2524 0034 0F90      		pop __tmp_reg__
 2525 0036 DF91      		pop r29
 2526 0038 CF91      		pop r28
 2527 003a 1F91      		pop r17
 2528               	.LVL162:
 648:quantum/rgblight.c **** 
 2529               		.loc 1 648 1 view .LVU569
 2530 003c 0F91      		pop r16
 2531               	.LVL163:
 648:quantum/rgblight.c **** 
 2532               		.loc 1 648 1 view .LVU570
 2533 003e 0895      		ret
 2534               		.cfi_endproc
 2535               	.LFE160:
 2537               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2538               	.global	rgblight_sethsv_master
 2540               	rgblight_sethsv_master:
 2541               	.LVL164:
 2542               	.LFB163:
 655:quantum/rgblight.c **** 
 2543               		.loc 1 655 68 is_stmt 1 view -0
 2544               		.cfi_startproc
 655:quantum/rgblight.c **** 
 2545               		.loc 1 655 68 is_stmt 0 view .LVU572
 2546 0000 0F93      		push r16
 2547               	.LCFI44:
 2548               		.cfi_def_cfa_offset 3
 2549               		.cfi_offset 16, -2
 2550               	/* prologue: function */
 2551               	/* frame size = 0 */
 2552               	/* stack size = 1 */
 2553               	.L__stack_usage = 1
 655:quantum/rgblight.c **** 
 2554               		.loc 1 655 70 is_stmt 1 view .LVU573
 2555 0002 0AE0      		ldi r16,lo8(10)
 2556 0004 20E0      		ldi r18,0
 2557 0006 0E94 0000 		call rgblight_sethsv_range
 2558               	.LVL165:
 2559               	/* epilogue start */
 655:quantum/rgblight.c **** 
 2560               		.loc 1 655 1 is_stmt 0 view .LVU574
 2561 000a 0F91      		pop r16
 2562 000c 0895      		ret
 2563               		.cfi_endproc
 2564               	.LFE163:
 2566               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2567               	.global	rgblight_sethsv_slave
 2569               	rgblight_sethsv_slave:
 2570               	.LVL166:
 2571               	.LFB164:
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2572               		.loc 1 657 67 is_stmt 1 view -0
 2573               		.cfi_startproc
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2574               		.loc 1 657 67 is_stmt 0 view .LVU576
 2575 0000 0F93      		push r16
 2576               	.LCFI45:
 2577               		.cfi_def_cfa_offset 3
 2578               		.cfi_offset 16, -2
 2579               	/* prologue: function */
 2580               	/* frame size = 0 */
 2581               	/* stack size = 1 */
 2582               	.L__stack_usage = 1
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2583               		.loc 1 657 69 is_stmt 1 view .LVU577
 2584 0002 04E1      		ldi r16,lo8(20)
 2585 0004 2AE0      		ldi r18,lo8(10)
 2586 0006 0E94 0000 		call rgblight_sethsv_range
 2587               	.LVL167:
 2588               	/* epilogue start */
 657:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2589               		.loc 1 657 1 is_stmt 0 view .LVU578
 2590 000a 0F91      		pop r16
 2591 000c 0895      		ret
 2592               		.cfi_endproc
 2593               	.LFE164:
 2595               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2596               	.global	rgblight_setrgb_master
 2598               	rgblight_setrgb_master:
 2599               	.LVL168:
 2600               	.LFB161:
 651:quantum/rgblight.c **** 
 2601               		.loc 1 651 62 is_stmt 1 view -0
 2602               		.cfi_startproc
 651:quantum/rgblight.c **** 
 2603               		.loc 1 651 62 is_stmt 0 view .LVU580
 2604 0000 0F93      		push r16
 2605               	.LCFI46:
 2606               		.cfi_def_cfa_offset 3
 2607               		.cfi_offset 16, -2
 2608               	/* prologue: function */
 2609               	/* frame size = 0 */
 2610               	/* stack size = 1 */
 2611               	.L__stack_usage = 1
 651:quantum/rgblight.c **** 
 2612               		.loc 1 651 64 is_stmt 1 view .LVU581
 2613 0002 0AE0      		ldi r16,lo8(10)
 2614 0004 20E0      		ldi r18,0
 2615 0006 0E94 0000 		call rgblight_setrgb_range
 2616               	.LVL169:
 2617               	/* epilogue start */
 651:quantum/rgblight.c **** 
 2618               		.loc 1 651 1 is_stmt 0 view .LVU582
 2619 000a 0F91      		pop r16
 2620 000c 0895      		ret
 2621               		.cfi_endproc
 2622               	.LFE161:
 2624               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2625               	.global	rgblight_setrgb_slave
 2627               	rgblight_setrgb_slave:
 2628               	.LVL170:
 2629               	.LFB162:
 653:quantum/rgblight.c **** 
 2630               		.loc 1 653 61 is_stmt 1 view -0
 2631               		.cfi_startproc
 653:quantum/rgblight.c **** 
 2632               		.loc 1 653 61 is_stmt 0 view .LVU584
 2633 0000 0F93      		push r16
 2634               	.LCFI47:
 2635               		.cfi_def_cfa_offset 3
 2636               		.cfi_offset 16, -2
 2637               	/* prologue: function */
 2638               	/* frame size = 0 */
 2639               	/* stack size = 1 */
 2640               	.L__stack_usage = 1
 653:quantum/rgblight.c **** 
 2641               		.loc 1 653 63 is_stmt 1 view .LVU585
 2642 0002 04E1      		ldi r16,lo8(20)
 2643 0004 2AE0      		ldi r18,lo8(10)
 2644 0006 0E94 0000 		call rgblight_setrgb_range
 2645               	.LVL171:
 2646               	/* epilogue start */
 653:quantum/rgblight.c **** 
 2647               		.loc 1 653 1 is_stmt 0 view .LVU586
 2648 000a 0F91      		pop r16
 2649 000c 0895      		ret
 2650               		.cfi_endproc
 2651               	.LFE162:
 2653               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2654               	.global	rgblight_effect_rainbow_swirl
 2656               	rgblight_effect_rainbow_swirl:
 2657               	.LVL172:
 2658               	.LFB179:
1095:quantum/rgblight.c ****     uint8_t hue;
 2659               		.loc 1 1095 62 is_stmt 1 view -0
 2660               		.cfi_startproc
1095:quantum/rgblight.c ****     uint8_t hue;
 2661               		.loc 1 1095 62 is_stmt 0 view .LVU588
 2662 0000 EF92      		push r14
 2663               	.LCFI48:
 2664               		.cfi_def_cfa_offset 3
 2665               		.cfi_offset 14, -2
 2666 0002 FF92      		push r15
 2667               	.LCFI49:
 2668               		.cfi_def_cfa_offset 4
 2669               		.cfi_offset 15, -3
 2670 0004 1F93      		push r17
 2671               	.LCFI50:
 2672               		.cfi_def_cfa_offset 5
 2673               		.cfi_offset 17, -4
 2674 0006 CF93      		push r28
 2675               	.LCFI51:
 2676               		.cfi_def_cfa_offset 6
 2677               		.cfi_offset 28, -5
 2678 0008 DF93      		push r29
 2679               	.LCFI52:
 2680               		.cfi_def_cfa_offset 7
 2681               		.cfi_offset 29, -6
 2682               	/* prologue: function */
 2683               	/* frame size = 0 */
 2684               	/* stack size = 5 */
 2685               	.L__stack_usage = 5
 2686 000a EC01      		movw r28,r24
1096:quantum/rgblight.c ****     uint8_t i;
 2687               		.loc 1 1096 5 is_stmt 1 view .LVU589
1097:quantum/rgblight.c **** 
 2688               		.loc 1 1097 5 view .LVU590
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2689               		.loc 1 1099 5 view .LVU591
 2690               	.LVL173:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2691               		.loc 1 1099 12 is_stmt 0 view .LVU592
 2692 000c 10E0      		ldi r17,0
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2693               		.loc 1 1100 45 view .LVU593
 2694 000e EE24      		clr r14
 2695 0010 EA94      		dec r14
 2696 0012 F12C      		mov r15,__zero_reg__
 2697               	.LVL174:
 2698               	.L131:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2699               		.loc 1 1099 17 is_stmt 1 discriminator 1 view .LVU594
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2700               		.loc 1 1099 36 is_stmt 0 discriminator 1 view .LVU595
 2701 0014 6091 0000 		lds r22,rgblight_ranges+4
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2702               		.loc 1 1099 5 discriminator 1 view .LVU596
 2703 0018 1617      		cp r17,r22
 2704 001a 00F0      		brlo .L132
1103:quantum/rgblight.c **** 
 2705               		.loc 1 1103 5 is_stmt 1 view .LVU597
 2706 001c 0E94 0000 		call rgblight_set
 2707               	.LVL175:
1105:quantum/rgblight.c ****         anim->current_hue++;
 2708               		.loc 1 1105 5 view .LVU598
1105:quantum/rgblight.c ****         anim->current_hue++;
 2709               		.loc 1 1105 9 is_stmt 0 view .LVU599
 2710 0020 9A81      		ldd r25,Y+2
 2711 0022 8C81      		ldd r24,Y+4
1105:quantum/rgblight.c ****         anim->current_hue++;
 2712               		.loc 1 1105 8 view .LVU600
 2713 0024 90FF      		sbrs r25,0
 2714 0026 00C0      		rjmp .L133
1106:quantum/rgblight.c ****     } else {
 2715               		.loc 1 1106 9 is_stmt 1 view .LVU601
1106:quantum/rgblight.c ****     } else {
 2716               		.loc 1 1106 26 is_stmt 0 view .LVU602
 2717 0028 8F5F      		subi r24,lo8(-(1))
 2718               	.L135:
1108:quantum/rgblight.c ****     }
 2719               		.loc 1 1108 26 view .LVU603
 2720 002a 8C83      		std Y+4,r24
 2721               	/* epilogue start */
1110:quantum/rgblight.c **** #endif
 2722               		.loc 1 1110 1 view .LVU604
 2723 002c DF91      		pop r29
 2724 002e CF91      		pop r28
 2725               	.LVL176:
1110:quantum/rgblight.c **** #endif
 2726               		.loc 1 1110 1 view .LVU605
 2727 0030 1F91      		pop r17
 2728               	.LVL177:
1110:quantum/rgblight.c **** #endif
 2729               		.loc 1 1110 1 view .LVU606
 2730 0032 FF90      		pop r15
 2731 0034 EF90      		pop r14
 2732 0036 0895      		ret
 2733               	.LVL178:
 2734               	.L132:
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2735               		.loc 1 1100 9 is_stmt 1 discriminator 3 view .LVU607
1101:quantum/rgblight.c ****     }
 2736               		.loc 1 1101 9 discriminator 3 view .LVU608
 2737               	.LBB95:
 2738               	.LBI95:
 154:quantum/rgblight.c **** 
 2739               		.loc 1 154 6 discriminator 3 view .LVU609
 2740               	.LBB96:
 154:quantum/rgblight.c **** 
 2741               		.loc 1 154 70 discriminator 3 view .LVU610
 2742               	.LBE96:
 2743               	.LBE95:
1101:quantum/rgblight.c ****     }
 2744               		.loc 1 1101 99 is_stmt 0 discriminator 3 view .LVU611
 2745 0038 2091 0000 		lds r18,rgblight_ranges+2
1101:quantum/rgblight.c ****     }
 2746               		.loc 1 1101 82 discriminator 3 view .LVU612
 2747 003c 422F      		mov r20,r18
 2748 003e 410F      		add r20,r17
 2749 0040 5527      		clr r21
 2750 0042 551F      		rol r21
 2751 0044 CA01      		movw r24,r20
1101:quantum/rgblight.c ****     }
 2752               		.loc 1 1101 9 discriminator 3 view .LVU613
 2753 0046 9A01      		movw r18,r20
 2754 0048 220F      		lsl r18
 2755 004a 331F      		rol r19
 2756 004c 280F      		add r18,r24
 2757 004e 391F      		adc r19,r25
 2758 0050 2050      		subi r18,lo8(-(led))
 2759 0052 3040      		sbci r19,hi8(-(led))
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2760               		.loc 1 1100 62 discriminator 3 view .LVU614
 2761 0054 70E0      		ldi r23,0
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2762               		.loc 1 1100 45 discriminator 3 view .LVU615
 2763 0056 C701      		movw r24,r14
 2764 0058 0E94 0000 		call __divmodhi4
 2765               	.LVL179:
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2766               		.loc 1 1100 45 discriminator 3 view .LVU616
 2767 005c 962F      		mov r25,r22
1100:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + rgblight_ranges.
 2768               		.loc 1 1100 13 discriminator 3 view .LVU617
 2769 005e 8C81      		ldd r24,Y+4
 2770               	.LBB98:
 2771               	.LBB97:
 154:quantum/rgblight.c **** 
 2772               		.loc 1 154 70 discriminator 3 view .LVU618
 2773 0060 4091 0000 		lds r20,rgblight_config+3
 2774 0064 6091 0000 		lds r22,rgblight_config+2
 2775 0068 199F      		mul r17,r25
 2776 006a 800D      		add r24,r0
 2777 006c 1124      		clr __zero_reg__
 2778 006e 0E94 0000 		call sethsv_raw
 2779               	.LVL180:
 154:quantum/rgblight.c **** 
 2780               		.loc 1 154 70 discriminator 3 view .LVU619
 2781               	.LBE97:
 2782               	.LBE98:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2783               		.loc 1 1099 54 is_stmt 1 discriminator 3 view .LVU620
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2784               		.loc 1 1099 55 is_stmt 0 discriminator 3 view .LVU621
 2785 0072 1F5F      		subi r17,lo8(-(1))
 2786               	.LVL181:
1099:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / rgblight_ranges.effect_num_leds * i + anim->current_h
 2787               		.loc 1 1099 55 discriminator 3 view .LVU622
 2788 0074 00C0      		rjmp .L131
 2789               	.L133:
1108:quantum/rgblight.c ****     }
 2790               		.loc 1 1108 9 is_stmt 1 view .LVU623
1108:quantum/rgblight.c ****     }
 2791               		.loc 1 1108 26 is_stmt 0 view .LVU624
 2792 0076 8150      		subi r24,lo8(-(-1))
 2793 0078 00C0      		rjmp .L135
 2794               		.cfi_endproc
 2795               	.LFE179:
 2797               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2798               	.global	rgblight_effect_snake
 2800               	rgblight_effect_snake:
 2801               	.LVL182:
 2802               	.LFB180:
1116:quantum/rgblight.c ****     static uint8_t pos = 0;
 2803               		.loc 1 1116 54 is_stmt 1 view -0
 2804               		.cfi_startproc
1116:quantum/rgblight.c ****     static uint8_t pos = 0;
 2805               		.loc 1 1116 54 is_stmt 0 view .LVU626
 2806 0000 AF92      		push r10
 2807               	.LCFI53:
 2808               		.cfi_def_cfa_offset 3
 2809               		.cfi_offset 10, -2
 2810 0002 BF92      		push r11
 2811               	.LCFI54:
 2812               		.cfi_def_cfa_offset 4
 2813               		.cfi_offset 11, -3
 2814 0004 CF92      		push r12
 2815               	.LCFI55:
 2816               		.cfi_def_cfa_offset 5
 2817               		.cfi_offset 12, -4
 2818 0006 DF92      		push r13
 2819               	.LCFI56:
 2820               		.cfi_def_cfa_offset 6
 2821               		.cfi_offset 13, -5
 2822 0008 EF92      		push r14
 2823               	.LCFI57:
 2824               		.cfi_def_cfa_offset 7
 2825               		.cfi_offset 14, -6
 2826 000a FF92      		push r15
 2827               	.LCFI58:
 2828               		.cfi_def_cfa_offset 8
 2829               		.cfi_offset 15, -7
 2830 000c 0F93      		push r16
 2831               	.LCFI59:
 2832               		.cfi_def_cfa_offset 9
 2833               		.cfi_offset 16, -8
 2834 000e 1F93      		push r17
 2835               	.LCFI60:
 2836               		.cfi_def_cfa_offset 10
 2837               		.cfi_offset 17, -9
 2838 0010 CF93      		push r28
 2839               	.LCFI61:
 2840               		.cfi_def_cfa_offset 11
 2841               		.cfi_offset 28, -10
 2842 0012 DF93      		push r29
 2843               	.LCFI62:
 2844               		.cfi_def_cfa_offset 12
 2845               		.cfi_offset 29, -11
 2846               	/* prologue: function */
 2847               	/* frame size = 0 */
 2848               	/* stack size = 10 */
 2849               	.L__stack_usage = 10
1117:quantum/rgblight.c ****     uint8_t        i, j;
 2850               		.loc 1 1117 5 is_stmt 1 view .LVU627
1118:quantum/rgblight.c ****     int8_t         k;
 2851               		.loc 1 1118 5 view .LVU628
1119:quantum/rgblight.c ****     int8_t         increment = 1;
 2852               		.loc 1 1119 5 view .LVU629
1120:quantum/rgblight.c **** 
 2853               		.loc 1 1120 5 view .LVU630
 2854               	.LVL183:
1122:quantum/rgblight.c ****         increment = -1;
 2855               		.loc 1 1122 5 view .LVU631
1122:quantum/rgblight.c ****         increment = -1;
 2856               		.loc 1 1122 9 is_stmt 0 view .LVU632
 2857 0014 FC01      		movw r30,r24
 2858 0016 8281      		ldd r24,Z+2
 2859               	.LVL184:
1123:quantum/rgblight.c ****     }
 2860               		.loc 1 1123 19 view .LVU633
 2861 0018 0FEF      		ldi r16,lo8(-1)
1122:quantum/rgblight.c ****         increment = -1;
 2862               		.loc 1 1122 8 view .LVU634
 2863 001a 80FF      		sbrs r24,0
1120:quantum/rgblight.c **** 
 2864               		.loc 1 1120 20 view .LVU635
 2865 001c 01E0      		ldi r16,lo8(1)
 2866               	.L137:
 2867               	.LVL185:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2868               		.loc 1 1137 5 is_stmt 1 view .LVU636
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2869               		.loc 1 1137 12 is_stmt 0 view .LVU637
 2870 001e 10E0      		ldi r17,0
 2871               	.LBB102:
1148:quantum/rgblight.c ****             }
 2872               		.loc 1 1148 19 view .LVU638
 2873 0020 44E1      		ldi r20,lo8(20)
 2874 0022 A42E      		mov r10,r20
 2875               	.LVL186:
 2876               	.L138:
1148:quantum/rgblight.c ****             }
 2877               		.loc 1 1148 19 view .LVU639
 2878               	.LBE102:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2879               		.loc 1 1137 17 is_stmt 1 discriminator 1 view .LVU640
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 2880               		.loc 1 1137 5 is_stmt 0 discriminator 1 view .LVU641
 2881 0024 8091 0000 		lds r24,rgblight_ranges+4
 2882 0028 1817      		cp r17,r24
 2883 002a 00F0      		brlo .L143
1158:quantum/rgblight.c ****     if (increment == 1) {
 2884               		.loc 1 1158 5 is_stmt 1 view .LVU642
 2885 002c 0E94 0000 		call rgblight_set
 2886               	.LVL187:
1159:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2887               		.loc 1 1159 5 view .LVU643
 2888 0030 8091 0000 		lds r24,pos.3432
1159:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2889               		.loc 1 1159 8 is_stmt 0 view .LVU644
 2890 0034 0130      		cpi r16,lo8(1)
 2891 0036 01F0      		breq .+2
 2892 0038 00C0      		rjmp .L144
1160:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2893               		.loc 1 1160 9 is_stmt 1 view .LVU645
1160:quantum/rgblight.c ****             pos = rgblight_ranges.effect_num_leds - 1;
 2894               		.loc 1 1160 12 is_stmt 0 view .LVU646
 2895 003a 8111      		cpse r24,__zero_reg__
 2896 003c 00C0      		rjmp .L145
1161:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2897               		.loc 1 1161 13 is_stmt 1 view .LVU647
1161:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2898               		.loc 1 1161 51 is_stmt 0 view .LVU648
 2899 003e 8091 0000 		lds r24,rgblight_ranges+4
 2900               	.L145:
1166:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2901               		.loc 1 1166 13 is_stmt 1 view .LVU649
1166:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2902               		.loc 1 1166 17 is_stmt 0 view .LVU650
 2903 0042 8150      		subi r24,lo8(-(-1))
 2904               	.L149:
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2905               		.loc 1 1172 13 view .LVU651
 2906 0044 8093 0000 		sts pos.3432,r24
 2907               	/* epilogue start */
1177:quantum/rgblight.c **** #endif
 2908               		.loc 1 1177 1 view .LVU652
 2909 0048 DF91      		pop r29
 2910 004a CF91      		pop r28
 2911 004c 1F91      		pop r17
 2912               	.LVL188:
1177:quantum/rgblight.c **** #endif
 2913               		.loc 1 1177 1 view .LVU653
 2914 004e 0F91      		pop r16
 2915               	.LVL189:
1177:quantum/rgblight.c **** #endif
 2916               		.loc 1 1177 1 view .LVU654
 2917 0050 FF90      		pop r15
 2918 0052 EF90      		pop r14
 2919 0054 DF90      		pop r13
 2920 0056 CF90      		pop r12
 2921 0058 BF90      		pop r11
 2922 005a AF90      		pop r10
 2923 005c 0895      		ret
 2924               	.LVL190:
 2925               	.L143:
 2926               	.LBB107:
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2927               		.loc 1 1138 9 is_stmt 1 view .LVU655
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2928               		.loc 1 1138 34 is_stmt 0 view .LVU656
 2929 005e C091 0000 		lds r28,rgblight_ranges+2
 2930 0062 C12E      		mov r12,r17
 2931 0064 D12C      		mov r13,__zero_reg__
 2932 0066 CC0D      		add r28,r12
 2933 0068 DD2D      		mov r29,r13
 2934 006a D11D      		adc r29,__zero_reg__
 2935 006c CE01      		movw r24,r28
 2936 006e 880F      		lsl r24
 2937 0070 991F      		rol r25
 2938 0072 C80F      		add r28,r24
 2939 0074 D91F      		adc r29,r25
1138:quantum/rgblight.c ****         ledp->r        = 0;
 2940               		.loc 1 1138 19 view .LVU657
 2941 0076 C050      		subi r28,lo8(-(led))
 2942 0078 D040      		sbci r29,hi8(-(led))
 2943               	.LVL191:
1139:quantum/rgblight.c ****         ledp->g        = 0;
 2944               		.loc 1 1139 9 is_stmt 1 view .LVU658
1139:quantum/rgblight.c ****         ledp->g        = 0;
 2945               		.loc 1 1139 24 is_stmt 0 view .LVU659
 2946 007a 1982      		std Y+1,__zero_reg__
1140:quantum/rgblight.c ****         ledp->b        = 0;
 2947               		.loc 1 1140 9 is_stmt 1 view .LVU660
1140:quantum/rgblight.c ****         ledp->b        = 0;
 2948               		.loc 1 1140 24 is_stmt 0 view .LVU661
 2949 007c 1882      		st Y,__zero_reg__
1141:quantum/rgblight.c **** #    ifdef RGBW
 2950               		.loc 1 1141 9 is_stmt 1 view .LVU662
1141:quantum/rgblight.c **** #    ifdef RGBW
 2951               		.loc 1 1141 24 is_stmt 0 view .LVU663
 2952 007e 1A82      		std Y+2,__zero_reg__
1145:quantum/rgblight.c ****             k = pos + j * increment;
 2953               		.loc 1 1145 9 is_stmt 1 view .LVU664
 2954               	.LVL192:
1145:quantum/rgblight.c ****             k = pos + j * increment;
 2955               		.loc 1 1145 21 view .LVU665
1141:quantum/rgblight.c **** #    ifdef RGBW
 2956               		.loc 1 1141 24 is_stmt 0 view .LVU666
 2957 0080 34E0      		ldi r19,lo8(4)
 2958 0082 E32E      		mov r14,r19
 2959 0084 F12C      		mov r15,__zero_reg__
 2960 0086 B12C      		mov r11,__zero_reg__
 2961               	.LVL193:
 2962               	.L142:
1146:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2963               		.loc 1 1146 13 is_stmt 1 view .LVU667
1146:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2964               		.loc 1 1146 21 is_stmt 0 view .LVU668
 2965 0088 8091 0000 		lds r24,pos.3432
 2966 008c 8B0D      		add r24,r11
 2967               	.LVL194:
1147:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2968               		.loc 1 1147 13 is_stmt 1 view .LVU669
1147:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2969               		.loc 1 1147 16 is_stmt 0 view .LVU670
 2970 008e 8531      		cpi r24,lo8(21)
 2971 0090 04F0      		brlt .L139
1148:quantum/rgblight.c ****             }
 2972               		.loc 1 1148 17 is_stmt 1 view .LVU671
1148:quantum/rgblight.c ****             }
 2973               		.loc 1 1148 19 is_stmt 0 view .LVU672
 2974 0092 6A2D      		mov r22,r10
 2975 0094 0E94 0000 		call __divmodqi4
 2976               	.LVL195:
1148:quantum/rgblight.c ****             }
 2977               		.loc 1 1148 19 view .LVU673
 2978 0098 892F      		mov r24,r25
 2979               	.LVL196:
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 2980               		.loc 1 1150 13 is_stmt 1 view .LVU674
 2981               	.L140:
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2982               		.loc 1 1153 13 view .LVU675
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2983               		.loc 1 1153 19 is_stmt 0 view .LVU676
 2984 009a 082E      		mov __tmp_reg__,r24
 2985 009c 000C      		lsl r0
 2986 009e 990B      		sbc r25,r25
1153:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2987               		.loc 1 1153 16 view .LVU677
 2988 00a0 C816      		cp r12,r24
 2989 00a2 D906      		cpc r13,r25
 2990 00a4 01F4      		brne .L141
1154:quantum/rgblight.c ****             }
 2991               		.loc 1 1154 17 is_stmt 1 view .LVU678
 2992               	.LVL197:
 2993               	.LBB103:
 2994               	.LBI103:
 154:quantum/rgblight.c **** 
 2995               		.loc 1 154 6 view .LVU679
 2996               	.LBB104:
 154:quantum/rgblight.c **** 
 2997               		.loc 1 154 70 view .LVU680
 2998               	.LBE104:
 2999               	.LBE103:
1154:quantum/rgblight.c ****             }
 3000               		.loc 1 1154 91 is_stmt 0 view .LVU681
 3001 00a6 8091 0000 		lds r24,rgblight_config+3
 3002               	.LVL198:
1154:quantum/rgblight.c ****             }
 3003               		.loc 1 1154 96 view .LVU682
 3004 00aa 8E9D      		mul r24,r14
 3005 00ac A001      		movw r20,r0
 3006 00ae 8F9D      		mul r24,r15
 3007 00b0 500D      		add r21,r0
 3008 00b2 1124      		clr __zero_reg__
1154:quantum/rgblight.c ****             }
 3009               		.loc 1 1154 133 view .LVU683
 3010 00b4 5595      		asr r21
 3011 00b6 4795      		ror r20
 3012 00b8 5595      		asr r21
 3013 00ba 4795      		ror r20
 3014               	.LBB106:
 3015               	.LBB105:
 154:quantum/rgblight.c **** 
 3016               		.loc 1 154 70 view .LVU684
 3017 00bc 9E01      		movw r18,r28
 3018 00be 6091 0000 		lds r22,rgblight_config+2
 3019 00c2 8091 0000 		lds r24,rgblight_config+1
 3020 00c6 0E94 0000 		call sethsv_raw
 3021               	.LVL199:
 3022               	.L141:
 154:quantum/rgblight.c **** 
 3023               		.loc 1 154 70 view .LVU685
 3024               	.LBE105:
 3025               	.LBE106:
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3026               		.loc 1 1145 55 is_stmt 1 discriminator 2 view .LVU686
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3027               		.loc 1 1145 21 discriminator 2 view .LVU687
 3028 00ca B00E      		add r11,r16
 3029 00cc F1E0      		ldi r31,1
 3030 00ce EF1A      		sub r14,r31
 3031 00d0 F108      		sbc r15,__zero_reg__
1145:quantum/rgblight.c ****             k = pos + j * increment;
 3032               		.loc 1 1145 9 is_stmt 0 discriminator 2 view .LVU688
 3033 00d2 01F4      		brne .L142
 3034               	.LBE107:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3035               		.loc 1 1137 54 is_stmt 1 discriminator 2 view .LVU689
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3036               		.loc 1 1137 55 is_stmt 0 discriminator 2 view .LVU690
 3037 00d4 1F5F      		subi r17,lo8(-(1))
 3038               	.LVL200:
1137:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3039               		.loc 1 1137 55 discriminator 2 view .LVU691
 3040 00d6 00C0      		rjmp .L138
 3041               	.LVL201:
 3042               	.L139:
 3043               	.LBB108:
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3044               		.loc 1 1150 13 is_stmt 1 view .LVU692
1150:quantum/rgblight.c ****                 k = k + rgblight_ranges.effect_num_leds;
 3045               		.loc 1 1150 16 is_stmt 0 view .LVU693
 3046 00d8 87FF      		sbrs r24,7
 3047 00da 00C0      		rjmp .L140
1151:quantum/rgblight.c ****             }
 3048               		.loc 1 1151 17 is_stmt 1 view .LVU694
1151:quantum/rgblight.c ****             }
 3049               		.loc 1 1151 23 is_stmt 0 view .LVU695
 3050 00dc 9091 0000 		lds r25,rgblight_ranges+4
 3051 00e0 890F      		add r24,r25
 3052               	.LVL202:
1151:quantum/rgblight.c ****             }
 3053               		.loc 1 1151 23 view .LVU696
 3054 00e2 00C0      		rjmp .L140
 3055               	.LVL203:
 3056               	.L144:
1151:quantum/rgblight.c ****             }
 3057               		.loc 1 1151 23 view .LVU697
 3058               	.LBE108:
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3059               		.loc 1 1172 9 is_stmt 1 view .LVU698
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3060               		.loc 1 1172 20 is_stmt 0 view .LVU699
 3061 00e4 90E0      		ldi r25,0
 3062 00e6 0196      		adiw r24,1
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3063               		.loc 1 1172 42 view .LVU700
 3064 00e8 6091 0000 		lds r22,rgblight_ranges+4
 3065 00ec 70E0      		ldi r23,0
1172:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3066               		.loc 1 1172 25 view .LVU701
 3067 00ee 0E94 0000 		call __divmodhi4
 3068 00f2 00C0      		rjmp .L149
 3069               		.cfi_endproc
 3070               	.LFE180:
 3072               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3073               	.global	rgblight_effect_knight
 3075               	rgblight_effect_knight:
 3076               	.LVL204:
 3077               	.LFB181:
1183:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3078               		.loc 1 1183 55 is_stmt 1 view -0
 3079               		.cfi_startproc
1183:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 3080               		.loc 1 1183 55 is_stmt 0 view .LVU703
 3081 0000 0F93      		push r16
 3082               	.LCFI63:
 3083               		.cfi_def_cfa_offset 3
 3084               		.cfi_offset 16, -2
 3085 0002 1F93      		push r17
 3086               	.LCFI64:
 3087               		.cfi_def_cfa_offset 4
 3088               		.cfi_offset 17, -3
 3089 0004 CF93      		push r28
 3090               	.LCFI65:
 3091               		.cfi_def_cfa_offset 5
 3092               		.cfi_offset 28, -4
 3093 0006 DF93      		push r29
 3094               	.LCFI66:
 3095               		.cfi_def_cfa_offset 6
 3096               		.cfi_offset 29, -5
 3097               	/* prologue: function */
 3098               	/* frame size = 0 */
 3099               	/* stack size = 4 */
 3100               	.L__stack_usage = 4
1184:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3101               		.loc 1 1184 5 is_stmt 1 view .LVU704
1185:quantum/rgblight.c ****     static int8_t increment  = 1;
 3102               		.loc 1 1185 5 view .LVU705
1186:quantum/rgblight.c ****     uint8_t       i, cur;
 3103               		.loc 1 1186 5 view .LVU706
1187:quantum/rgblight.c **** 
 3104               		.loc 1 1187 5 view .LVU707
1198:quantum/rgblight.c ****         led[i].r = 0;
 3105               		.loc 1 1198 5 view .LVU708
1198:quantum/rgblight.c ****         led[i].r = 0;
 3106               		.loc 1 1198 12 is_stmt 0 view .LVU709
 3107 0008 8091 0000 		lds r24,rgblight_ranges+2
 3108               	.LVL205:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3109               		.loc 1 1198 67 view .LVU710
 3110 000c 9091 0000 		lds r25,rgblight_ranges+3
 3111 0010 23E0      		ldi r18,lo8(3)
 3112 0012 829F      		mul r24,r18
 3113 0014 F001      		movw r30,r0
 3114 0016 1124      		clr __zero_reg__
 3115 0018 E050      		subi r30,lo8(-(led))
 3116 001a F040      		sbci r31,hi8(-(led))
 3117               	.L151:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3118               		.loc 1 1198 48 is_stmt 1 discriminator 1 view .LVU711
1198:quantum/rgblight.c ****         led[i].r = 0;
 3119               		.loc 1 1198 5 is_stmt 0 discriminator 1 view .LVU712
 3120 001c 8917      		cp r24,r25
 3121 001e 00F0      		brlo .L152
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3122               		.loc 1 1207 12 view .LVU713
 3123 0020 C0E0      		ldi r28,0
1211:quantum/rgblight.c ****         } else {
 3124               		.loc 1 1211 13 view .LVU714
 3125 0022 D3E0      		ldi r29,lo8(3)
 3126               	.LVL206:
 3127               	.L153:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3128               		.loc 1 1207 17 is_stmt 1 discriminator 1 view .LVU715
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3129               		.loc 1 1207 21 is_stmt 0 discriminator 1 view .LVU716
 3130 0024 6091 0000 		lds r22,rgblight_ranges+4
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3131               		.loc 1 1207 5 discriminator 1 view .LVU717
 3132 0028 C617      		cp r28,r22
 3133 002a 00F0      		brlo .L156
1221:quantum/rgblight.c **** 
 3134               		.loc 1 1221 5 is_stmt 1 view .LVU718
 3135 002c 0E94 0000 		call rgblight_set
 3136               	.LVL207:
1225:quantum/rgblight.c ****     high_bound += increment;
 3137               		.loc 1 1225 5 view .LVU719
1225:quantum/rgblight.c ****     high_bound += increment;
 3138               		.loc 1 1225 15 is_stmt 0 view .LVU720
 3139 0030 2091 0000 		lds r18,increment.3450
 3140 0034 8091 0000 		lds r24,low_bound.3448
 3141 0038 820F      		add r24,r18
 3142 003a 8093 0000 		sts low_bound.3448,r24
1226:quantum/rgblight.c **** 
 3143               		.loc 1 1226 5 is_stmt 1 view .LVU721
1226:quantum/rgblight.c **** 
 3144               		.loc 1 1226 16 is_stmt 0 view .LVU722
 3145 003e 9091 0000 		lds r25,high_bound.3449
 3146 0042 920F      		add r25,r18
 3147 0044 9093 0000 		sts high_bound.3449,r25
1228:quantum/rgblight.c ****         increment = -increment;
 3148               		.loc 1 1228 5 is_stmt 1 view .LVU723
1228:quantum/rgblight.c ****         increment = -increment;
 3149               		.loc 1 1228 8 is_stmt 0 view .LVU724
 3150 0048 1916      		cp __zero_reg__,r25
 3151 004a 04F4      		brge .L157
1228:quantum/rgblight.c ****         increment = -increment;
 3152               		.loc 1 1228 38 discriminator 1 view .LVU725
 3153 004c 082E      		mov __tmp_reg__,r24
 3154 004e 000C      		lsl r0
 3155 0050 990B      		sbc r25,r25
1228:quantum/rgblight.c ****         increment = -increment;
 3156               		.loc 1 1228 41 discriminator 1 view .LVU726
 3157 0052 4091 0000 		lds r20,rgblight_ranges+4
1228:quantum/rgblight.c ****         increment = -increment;
 3158               		.loc 1 1228 72 discriminator 1 view .LVU727
 3159 0056 4150      		subi r20,1
 3160 0058 550B      		sbc r21,r21
1228:quantum/rgblight.c ****         increment = -increment;
 3161               		.loc 1 1228 25 discriminator 1 view .LVU728
 3162 005a 8417      		cp r24,r20
 3163 005c 9507      		cpc r25,r21
 3164 005e 04F0      		brlt .L150
 3165               	.L157:
1229:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3166               		.loc 1 1229 9 is_stmt 1 view .LVU729
1229:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3167               		.loc 1 1229 19 is_stmt 0 view .LVU730
 3168 0060 2195      		neg r18
 3169 0062 2093 0000 		sts increment.3450,r18
 3170               	.L150:
 3171               	/* epilogue start */
1236:quantum/rgblight.c **** #endif
 3172               		.loc 1 1236 1 view .LVU731
 3173 0066 DF91      		pop r29
 3174 0068 CF91      		pop r28
 3175               	.LVL208:
1236:quantum/rgblight.c **** #endif
 3176               		.loc 1 1236 1 view .LVU732
 3177 006a 1F91      		pop r17
 3178 006c 0F91      		pop r16
 3179 006e 0895      		ret
 3180               	.LVL209:
 3181               	.L152:
1199:quantum/rgblight.c ****         led[i].g = 0;
 3182               		.loc 1 1199 9 is_stmt 1 discriminator 3 view .LVU733
1199:quantum/rgblight.c ****         led[i].g = 0;
 3183               		.loc 1 1199 18 is_stmt 0 discriminator 3 view .LVU734
 3184 0070 1182      		std Z+1,__zero_reg__
1200:quantum/rgblight.c ****         led[i].b = 0;
 3185               		.loc 1 1200 9 is_stmt 1 discriminator 3 view .LVU735
1200:quantum/rgblight.c ****         led[i].b = 0;
 3186               		.loc 1 1200 18 is_stmt 0 discriminator 3 view .LVU736
 3187 0072 1082      		st Z,__zero_reg__
1201:quantum/rgblight.c **** #    ifdef RGBW
 3188               		.loc 1 1201 9 is_stmt 1 discriminator 3 view .LVU737
1201:quantum/rgblight.c **** #    ifdef RGBW
 3189               		.loc 1 1201 18 is_stmt 0 discriminator 3 view .LVU738
 3190 0074 1282      		std Z+2,__zero_reg__
1198:quantum/rgblight.c ****         led[i].r = 0;
 3191               		.loc 1 1198 84 is_stmt 1 discriminator 3 view .LVU739
1198:quantum/rgblight.c ****         led[i].r = 0;
 3192               		.loc 1 1198 85 is_stmt 0 discriminator 3 view .LVU740
 3193 0076 8F5F      		subi r24,lo8(-(1))
 3194               	.LVL210:
1198:quantum/rgblight.c ****         led[i].r = 0;
 3195               		.loc 1 1198 85 discriminator 3 view .LVU741
 3196 0078 3396      		adiw r30,3
 3197 007a 00C0      		rjmp .L151
 3198               	.LVL211:
 3199               	.L156:
1208:quantum/rgblight.c **** 
 3200               		.loc 1 1208 9 is_stmt 1 view .LVU742
1208:quantum/rgblight.c **** 
 3201               		.loc 1 1208 18 is_stmt 0 view .LVU743
 3202 007c 0C2F      		mov r16,r28
 3203 007e 10E0      		ldi r17,0
1208:quantum/rgblight.c **** 
 3204               		.loc 1 1208 68 view .LVU744
 3205 0080 70E0      		ldi r23,0
1208:quantum/rgblight.c **** 
 3206               		.loc 1 1208 51 view .LVU745
 3207 0082 C801      		movw r24,r16
 3208 0084 0E94 0000 		call __divmodhi4
1208:quantum/rgblight.c **** 
 3209               		.loc 1 1208 13 view .LVU746
 3210 0088 2091 0000 		lds r18,rgblight_ranges+2
 3211 008c 820F      		add r24,r18
 3212               	.LVL212:
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3213               		.loc 1 1210 9 is_stmt 1 view .LVU747
 3214 008e 482F      		mov r20,r24
 3215 0090 50E0      		ldi r21,0
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3216               		.loc 1 1210 15 is_stmt 0 view .LVU748
 3217 0092 2091 0000 		lds r18,low_bound.3448
 3218 0096 022E      		mov __tmp_reg__,r18
 3219 0098 000C      		lsl r0
 3220 009a 330B      		sbc r19,r19
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3221               		.loc 1 1210 12 view .LVU749
 3222 009c 0217      		cp r16,r18
 3223 009e 1307      		cpc r17,r19
 3224 00a0 04F0      		brlt .L154
 3225               	.LVL213:
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3226               		.loc 1 1210 33 discriminator 1 view .LVU750
 3227 00a2 2091 0000 		lds r18,high_bound.3449
 3228 00a6 022E      		mov __tmp_reg__,r18
 3229 00a8 000C      		lsl r0
 3230 00aa 330B      		sbc r19,r19
1210:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3231               		.loc 1 1210 28 discriminator 1 view .LVU751
 3232 00ac 2017      		cp r18,r16
 3233 00ae 3107      		cpc r19,r17
 3234 00b0 04F0      		brlt .L154
1211:quantum/rgblight.c ****         } else {
 3235               		.loc 1 1211 13 is_stmt 1 view .LVU752
 3236               	.LVL214:
 3237               	.LBB111:
 3238               	.LBI111:
 154:quantum/rgblight.c **** 
 3239               		.loc 1 154 6 view .LVU753
 3240               	.LBB112:
 154:quantum/rgblight.c **** 
 3241               		.loc 1 154 70 view .LVU754
 3242               	.LBE112:
 3243               	.LBE111:
1211:quantum/rgblight.c ****         } else {
 3244               		.loc 1 1211 13 is_stmt 0 view .LVU755
 3245 00b2 8D9F      		mul r24,r29
 3246 00b4 9001      		movw r18,r0
 3247 00b6 1124      		clr __zero_reg__
 3248 00b8 2050      		subi r18,lo8(-(led))
 3249 00ba 3040      		sbci r19,hi8(-(led))
 3250               	.LBB114:
 3251               	.LBB113:
 154:quantum/rgblight.c **** 
 3252               		.loc 1 154 70 view .LVU756
 3253 00bc 4091 0000 		lds r20,rgblight_config+3
 3254 00c0 6091 0000 		lds r22,rgblight_config+2
 3255 00c4 8091 0000 		lds r24,rgblight_config+1
 3256               	.LVL215:
 154:quantum/rgblight.c **** 
 3257               		.loc 1 154 70 view .LVU757
 3258 00c8 0E94 0000 		call sethsv_raw
 3259               	.LVL216:
 3260               	.L155:
 154:quantum/rgblight.c **** 
 3261               		.loc 1 154 70 view .LVU758
 3262               	.LBE113:
 3263               	.LBE114:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3264               		.loc 1 1207 53 is_stmt 1 discriminator 2 view .LVU759
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3265               		.loc 1 1207 54 is_stmt 0 discriminator 2 view .LVU760
 3266 00cc CF5F      		subi r28,lo8(-(1))
 3267               	.LVL217:
1207:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % rgblight_ranges.effect_num_leds + rgblight_rang
 3268               		.loc 1 1207 54 discriminator 2 view .LVU761
 3269 00ce 00C0      		rjmp .L153
 3270               	.LVL218:
 3271               	.L154:
1213:quantum/rgblight.c ****             led[cur].g = 0;
 3272               		.loc 1 1213 13 is_stmt 1 view .LVU762
1213:quantum/rgblight.c ****             led[cur].g = 0;
 3273               		.loc 1 1213 24 is_stmt 0 view .LVU763
 3274 00d0 FA01      		movw r30,r20
 3275 00d2 EE0F      		lsl r30
 3276 00d4 FF1F      		rol r31
 3277 00d6 E40F      		add r30,r20
 3278 00d8 F51F      		adc r31,r21
 3279 00da E050      		subi r30,lo8(-(led))
 3280 00dc F040      		sbci r31,hi8(-(led))
 3281 00de 1182      		std Z+1,__zero_reg__
1214:quantum/rgblight.c ****             led[cur].b = 0;
 3282               		.loc 1 1214 13 is_stmt 1 view .LVU764
1214:quantum/rgblight.c ****             led[cur].b = 0;
 3283               		.loc 1 1214 24 is_stmt 0 view .LVU765
 3284 00e0 1082      		st Z,__zero_reg__
1215:quantum/rgblight.c **** #    ifdef RGBW
 3285               		.loc 1 1215 13 is_stmt 1 view .LVU766
1215:quantum/rgblight.c **** #    ifdef RGBW
 3286               		.loc 1 1215 24 is_stmt 0 view .LVU767
 3287 00e2 1282      		std Z+2,__zero_reg__
 3288 00e4 00C0      		rjmp .L155
 3289               		.cfi_endproc
 3290               	.LFE181:
 3292               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3293               	.global	rgblight_effect_christmas
 3295               	rgblight_effect_christmas:
 3296               	.LVL219:
 3297               	.LFB182:
1245:quantum/rgblight.c ****     static int8_t increment = 1;
 3298               		.loc 1 1245 58 is_stmt 1 view -0
 3299               		.cfi_startproc
1245:quantum/rgblight.c ****     static int8_t increment = 1;
 3300               		.loc 1 1245 58 is_stmt 0 view .LVU769
 3301 0000 8F92      		push r8
 3302               	.LCFI67:
 3303               		.cfi_def_cfa_offset 3
 3304               		.cfi_offset 8, -2
 3305 0002 9F92      		push r9
 3306               	.LCFI68:
 3307               		.cfi_def_cfa_offset 4
 3308               		.cfi_offset 9, -3
 3309 0004 AF92      		push r10
 3310               	.LCFI69:
 3311               		.cfi_def_cfa_offset 5
 3312               		.cfi_offset 10, -4
 3313 0006 BF92      		push r11
 3314               	.LCFI70:
 3315               		.cfi_def_cfa_offset 6
 3316               		.cfi_offset 11, -5
 3317 0008 CF92      		push r12
 3318               	.LCFI71:
 3319               		.cfi_def_cfa_offset 7
 3320               		.cfi_offset 12, -6
 3321 000a DF92      		push r13
 3322               	.LCFI72:
 3323               		.cfi_def_cfa_offset 8
 3324               		.cfi_offset 13, -7
 3325 000c EF92      		push r14
 3326               	.LCFI73:
 3327               		.cfi_def_cfa_offset 9
 3328               		.cfi_offset 14, -8
 3329 000e FF92      		push r15
 3330               	.LCFI74:
 3331               		.cfi_def_cfa_offset 10
 3332               		.cfi_offset 15, -9
 3333 0010 0F93      		push r16
 3334               	.LCFI75:
 3335               		.cfi_def_cfa_offset 11
 3336               		.cfi_offset 16, -10
 3337 0012 1F93      		push r17
 3338               	.LCFI76:
 3339               		.cfi_def_cfa_offset 12
 3340               		.cfi_offset 17, -11
 3341 0014 CF93      		push r28
 3342               	.LCFI77:
 3343               		.cfi_def_cfa_offset 13
 3344               		.cfi_offset 28, -12
 3345 0016 DF93      		push r29
 3346               	.LCFI78:
 3347               		.cfi_def_cfa_offset 14
 3348               		.cfi_offset 29, -13
 3349               	/* prologue: function */
 3350               	/* frame size = 0 */
 3351               	/* stack size = 12 */
 3352               	.L__stack_usage = 12
 3353 0018 EC01      		movw r28,r24
1246:quantum/rgblight.c ****     const uint8_t max_pos   = 32;
 3354               		.loc 1 1246 5 is_stmt 1 view .LVU770
1247:quantum/rgblight.c ****     const uint8_t hue_green = 85;
 3355               		.loc 1 1247 5 view .LVU771
 3356               	.LVL220:
1248:quantum/rgblight.c **** 
 3357               		.loc 1 1248 5 view .LVU772
1250:quantum/rgblight.c ****     uint8_t  hue, val;
 3358               		.loc 1 1250 5 view .LVU773
1251:quantum/rgblight.c ****     uint8_t  i;
 3359               		.loc 1 1251 5 view .LVU774
1252:quantum/rgblight.c **** 
 3360               		.loc 1 1252 5 view .LVU775
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3361               		.loc 1 1256 5 view .LVU776
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3362               		.loc 1 1256 11 is_stmt 0 view .LVU777
 3363 001a 4C81      		ldd r20,Y+4
 3364 001c 042F      		mov r16,r20
 3365 001e 10E0      		ldi r17,0
 3366 0020 9801      		movw r18,r16
 3367 0022 D801      		movw r26,r16
 3368 0024 0E94 0000 		call __umulhisi3
1256:quantum/rgblight.c ****     hue = ((uint32_t)hue_green) * xa / (xa + CUBED((uint32_t)(max_pos - anim->pos)));
 3369               		.loc 1 1256 9 view .LVU778
 3370 0028 9B01      		movw r18,r22
 3371 002a AC01      		movw r20,r24
 3372 002c 0E94 0000 		call __muluhisi3
 3373 0030 4B01      		movw r8,r22
 3374 0032 5C01      		movw r10,r24
 3375               	.LVL221:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3376               		.loc 1 1257 5 is_stmt 1 view .LVU779
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3377               		.loc 1 1257 46 is_stmt 0 view .LVU780
 3378 0034 E0E2      		ldi r30,lo8(32)
 3379 0036 F0E0      		ldi r31,0
 3380 0038 E01B      		sub r30,r16
 3381 003a F10B      		sbc r31,r17
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3382               		.loc 1 1257 33 view .LVU781
 3383 003c A5E5      		ldi r26,lo8(85)
 3384 003e B0E0      		ldi r27,0
 3385 0040 AC01      		movw r20,r24
 3386 0042 9B01      		movw r18,r22
 3387 0044 0E94 0000 		call __muluhisi3
 3388 0048 6B01      		movw r12,r22
 3389 004a 7C01      		movw r14,r24
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3390               		.loc 1 1257 46 view .LVU782
 3391 004c 9F01      		movw r18,r30
 3392 004e DF01      		movw r26,r30
 3393 0050 0E94 0000 		call __mulhisi3
 3394 0054 9B01      		movw r18,r22
 3395 0056 AC01      		movw r20,r24
 3396 0058 0E94 0000 		call __mulshisi3
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3397               		.loc 1 1257 44 view .LVU783
 3398 005c 9B01      		movw r18,r22
 3399 005e AC01      		movw r20,r24
 3400 0060 280D      		add r18,r8
 3401 0062 391D      		adc r19,r9
 3402 0064 4A1D      		adc r20,r10
 3403 0066 5B1D      		adc r21,r11
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3404               		.loc 1 1257 38 view .LVU784
 3405 0068 C701      		movw r24,r14
 3406               	.LVL222:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3407               		.loc 1 1257 38 view .LVU785
 3408 006a B601      		movw r22,r12
 3409 006c 0E94 0000 		call __udivmodsi4
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3410               		.loc 1 1257 9 view .LVU786
 3411 0070 F22E      		mov r15,r18
 3412               	.LVL223:
1259:quantum/rgblight.c **** 
 3413               		.loc 1 1259 5 is_stmt 1 view .LVU787
 3414 0072 822F      		mov r24,r18
 3415 0074 90E0      		ldi r25,0
1259:quantum/rgblight.c **** 
 3416               		.loc 1 1259 9 is_stmt 0 view .LVU788
 3417 0076 39E2      		ldi r19,lo8(41)
 3418 0078 3F15      		cp r19,r15
 3419 007a 00F0      		brlo .L160
 3420               	.LVL224:
1259:quantum/rgblight.c **** 
 3421               		.loc 1 1259 20 discriminator 1 view .LVU789
 3422 007c 43E0      		ldi r20,lo8(3)
 3423 007e 249F      		mul r18,r20
 3424 0080 9001      		movw r18,r0
 3425 0082 1124      		clr __zero_reg__
 3426               	.L163:
1259:quantum/rgblight.c **** 
 3427               		.loc 1 1259 68 discriminator 2 view .LVU790
 3428 0084 3595      		asr r19
 3429 0086 2795      		ror r18
1259:quantum/rgblight.c **** 
 3430               		.loc 1 1259 9 discriminator 2 view .LVU791
 3431 0088 122F      		mov r17,r18
 3432 008a 1095      		com r17
 3433               	.LVL225:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3434               		.loc 1 1261 5 is_stmt 1 discriminator 2 view .LVU792
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3435               		.loc 1 1261 12 is_stmt 0 discriminator 2 view .LVU793
 3436 008c 00E0      		ldi r16,0
 3437               	.LBB118:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3438               		.loc 1 1262 17 discriminator 2 view .LVU794
 3439 008e 85E5      		ldi r24,lo8(85)
 3440 0090 E82E      		mov r14,r24
 3441 0092 EF18      		sub r14,r15
 3442               	.LVL226:
 3443               	.L164:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3444               		.loc 1 1262 17 discriminator 2 view .LVU795
 3445               	.LBE118:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3446               		.loc 1 1261 17 is_stmt 1 discriminator 2 view .LVU796
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3447               		.loc 1 1261 5 is_stmt 0 discriminator 2 view .LVU797
 3448 0094 8091 0000 		lds r24,rgblight_ranges+4
 3449 0098 0817      		cp r16,r24
 3450 009a 00F0      		brlo .L166
1265:quantum/rgblight.c **** 
 3451               		.loc 1 1265 5 is_stmt 1 view .LVU798
 3452 009c 0E94 0000 		call rgblight_set
 3453               	.LVL227:
1267:quantum/rgblight.c ****         increment = 1;
 3454               		.loc 1 1267 5 view .LVU799
1267:quantum/rgblight.c ****         increment = 1;
 3455               		.loc 1 1267 13 is_stmt 0 view .LVU800
 3456 00a0 9C81      		ldd r25,Y+4
1268:quantum/rgblight.c ****     } else if (anim->pos == max_pos) {
 3457               		.loc 1 1268 19 view .LVU801
 3458 00a2 81E0      		ldi r24,lo8(1)
1267:quantum/rgblight.c ****         increment = 1;
 3459               		.loc 1 1267 8 view .LVU802
 3460 00a4 9923      		tst r25
 3461 00a6 01F0      		breq .L170
1269:quantum/rgblight.c ****         increment = -1;
 3462               		.loc 1 1269 12 is_stmt 1 view .LVU803
1269:quantum/rgblight.c ****         increment = -1;
 3463               		.loc 1 1269 15 is_stmt 0 view .LVU804
 3464 00a8 9032      		cpi r25,lo8(32)
 3465 00aa 01F4      		brne .L168
1270:quantum/rgblight.c ****     }
 3466               		.loc 1 1270 9 is_stmt 1 view .LVU805
1270:quantum/rgblight.c ****     }
 3467               		.loc 1 1270 19 is_stmt 0 view .LVU806
 3468 00ac 8FEF      		ldi r24,lo8(-1)
 3469               	.L170:
 3470 00ae 8093 0000 		sts increment.3462,r24
 3471               	.L168:
1272:quantum/rgblight.c **** }
 3472               		.loc 1 1272 5 is_stmt 1 view .LVU807
1272:quantum/rgblight.c **** }
 3473               		.loc 1 1272 15 is_stmt 0 view .LVU808
 3474 00b2 8091 0000 		lds r24,increment.3462
 3475 00b6 890F      		add r24,r25
 3476 00b8 8C83      		std Y+4,r24
 3477               	/* epilogue start */
1273:quantum/rgblight.c **** #endif
 3478               		.loc 1 1273 1 view .LVU809
 3479 00ba DF91      		pop r29
 3480 00bc CF91      		pop r28
 3481 00be 1F91      		pop r17
 3482               	.LVL228:
1273:quantum/rgblight.c **** #endif
 3483               		.loc 1 1273 1 view .LVU810
 3484 00c0 0F91      		pop r16
 3485               	.LVL229:
1273:quantum/rgblight.c **** #endif
 3486               		.loc 1 1273 1 view .LVU811
 3487 00c2 FF90      		pop r15
 3488               	.LVL230:
1273:quantum/rgblight.c **** #endif
 3489               		.loc 1 1273 1 view .LVU812
 3490 00c4 EF90      		pop r14
 3491 00c6 DF90      		pop r13
 3492 00c8 CF90      		pop r12
 3493 00ca BF90      		pop r11
 3494 00cc AF90      		pop r10
 3495               	.LVL231:
1273:quantum/rgblight.c **** #endif
 3496               		.loc 1 1273 1 view .LVU813
 3497 00ce 9F90      		pop r9
 3498 00d0 8F90      		pop r8
 3499               	.LVL232:
1273:quantum/rgblight.c **** #endif
 3500               		.loc 1 1273 1 view .LVU814
 3501 00d2 0895      		ret
 3502               	.LVL233:
 3503               	.L160:
1259:quantum/rgblight.c **** 
 3504               		.loc 1 1259 61 discriminator 2 view .LVU815
 3505 00d4 25E5      		ldi r18,lo8(85)
 3506 00d6 30E0      		ldi r19,0
 3507 00d8 B901      		movw r22,r18
 3508 00da 681B      		sub r22,r24
 3509 00dc 790B      		sbc r23,r25
1259:quantum/rgblight.c **** 
 3510               		.loc 1 1259 20 discriminator 2 view .LVU816
 3511 00de 9B01      		movw r18,r22
 3512 00e0 220F      		lsl r18
 3513 00e2 331F      		rol r19
 3514 00e4 260F      		add r18,r22
 3515 00e6 371F      		adc r19,r23
1259:quantum/rgblight.c **** 
 3516               		.loc 1 1259 68 discriminator 2 view .LVU817
 3517 00e8 37FF      		sbrs r19,7
 3518 00ea 00C0      		rjmp .L163
 3519 00ec 2F5F      		subi r18,-1
 3520 00ee 3F4F      		sbci r19,-1
 3521 00f0 00C0      		rjmp .L163
 3522               	.LVL234:
 3523               	.L166:
 3524               	.LBB123:
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3525               		.loc 1 1262 9 is_stmt 1 view .LVU818
1262:quantum/rgblight.c ****         sethsv(local_hue, rgblight_config.sat, val, (LED_TYPE *)&led[i + rgblight_ranges.effect_sta
 3526               		.loc 1 1262 17 is_stmt 0 view .LVU819
 3527 00f2 8E2D      		mov r24,r14
 3528 00f4 01FD      		sbrc r16,1
 3529               	.LBE123:
1257:quantum/rgblight.c ****     // Additionally, these interpolated colors get shown with a slightly darker value, to make them
 3530               		.loc 1 1257 9 view .LVU820
 3531 00f6 8F2D      		mov r24,r15
 3532               	.L165:
 3533               	.LVL235:
 3534               	.LBB124:
1263:quantum/rgblight.c ****     }
 3535               		.loc 1 1263 9 is_stmt 1 discriminator 4 view .LVU821
 3536               	.LBB119:
 3537               	.LBI119:
 154:quantum/rgblight.c **** 
 3538               		.loc 1 154 6 discriminator 4 view .LVU822
 3539               	.LBB120:
 154:quantum/rgblight.c **** 
 3540               		.loc 1 154 70 discriminator 4 view .LVU823
 3541               	.LBE120:
 3542               	.LBE119:
1263:quantum/rgblight.c ****     }
 3543               		.loc 1 1263 89 is_stmt 0 discriminator 4 view .LVU824
 3544 00f8 2091 0000 		lds r18,rgblight_ranges+2
1263:quantum/rgblight.c ****     }
 3545               		.loc 1 1263 72 discriminator 4 view .LVU825
 3546 00fc 622F      		mov r22,r18
 3547 00fe 600F      		add r22,r16
 3548 0100 7727      		clr r23
 3549 0102 771F      		rol r23
1263:quantum/rgblight.c ****     }
 3550               		.loc 1 1263 9 discriminator 4 view .LVU826
 3551 0104 9B01      		movw r18,r22
 3552 0106 220F      		lsl r18
 3553 0108 331F      		rol r19
 3554 010a 260F      		add r18,r22
 3555 010c 371F      		adc r19,r23
 3556 010e 2050      		subi r18,lo8(-(led))
 3557 0110 3040      		sbci r19,hi8(-(led))
 3558               	.LBB122:
 3559               	.LBB121:
 154:quantum/rgblight.c **** 
 3560               		.loc 1 154 70 discriminator 4 view .LVU827
 3561 0112 412F      		mov r20,r17
 3562 0114 6091 0000 		lds r22,rgblight_config+2
 3563 0118 0E94 0000 		call sethsv_raw
 3564               	.LVL236:
 154:quantum/rgblight.c **** 
 3565               		.loc 1 154 70 discriminator 4 view .LVU828
 3566               	.LBE121:
 3567               	.LBE122:
 3568               	.LBE124:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3569               		.loc 1 1261 54 is_stmt 1 discriminator 4 view .LVU829
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3570               		.loc 1 1261 55 is_stmt 0 discriminator 4 view .LVU830
 3571 011c 0F5F      		subi r16,lo8(-(1))
 3572               	.LVL237:
1261:quantum/rgblight.c ****         uint8_t local_hue = (i / RGBLIGHT_EFFECT_CHRISTMAS_STEP) % 2 ? hue : hue_green - hue;
 3573               		.loc 1 1261 55 discriminator 4 view .LVU831
 3574 011e 00C0      		rjmp .L164
 3575               		.cfi_endproc
 3576               	.LFE182:
 3578               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3579               	.global	rgblight_effect_alternating
 3581               	rgblight_effect_alternating:
 3582               	.LVL238:
 3583               	.LFB184:
1305:quantum/rgblight.c **** #endif
1306:quantum/rgblight.c **** 
1307:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1308:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3584               		.loc 1 1308 60 is_stmt 1 view -0
 3585               		.cfi_startproc
 3586               		.loc 1 1308 60 is_stmt 0 view .LVU833
 3587 0000 0F93      		push r16
 3588               	.LCFI79:
 3589               		.cfi_def_cfa_offset 3
 3590               		.cfi_offset 16, -2
 3591 0002 1F93      		push r17
 3592               	.LCFI80:
 3593               		.cfi_def_cfa_offset 4
 3594               		.cfi_offset 17, -3
 3595 0004 CF93      		push r28
 3596               	.LCFI81:
 3597               		.cfi_def_cfa_offset 5
 3598               		.cfi_offset 28, -4
 3599 0006 DF93      		push r29
 3600               	.LCFI82:
 3601               		.cfi_def_cfa_offset 6
 3602               		.cfi_offset 29, -5
 3603               	/* prologue: function */
 3604               	/* frame size = 0 */
 3605               	/* stack size = 4 */
 3606               	.L__stack_usage = 4
 3607 0008 EC01      		movw r28,r24
1309:quantum/rgblight.c ****     for (int i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3608               		.loc 1 1309 5 is_stmt 1 view .LVU834
 3609               	.LBB133:
 3610               		.loc 1 1309 10 view .LVU835
 3611               	.LVL239:
 3612               		.loc 1 1309 14 is_stmt 0 view .LVU836
 3613 000a 10E0      		ldi r17,0
 3614 000c 00E0      		ldi r16,0
 3615               	.LVL240:
 3616               	.L172:
 3617               		.loc 1 1309 21 is_stmt 1 discriminator 1 view .LVU837
 3618               		.loc 1 1309 40 is_stmt 0 discriminator 1 view .LVU838
 3619 000e 9091 0000 		lds r25,rgblight_ranges+4
 3620               		.loc 1 1309 5 discriminator 1 view .LVU839
 3621 0012 9017      		cp r25,r16
 3622 0014 1106      		cpc __zero_reg__,r17
 3623 0016 01F0      		breq .+2
 3624 0018 04F4      		brge .L176
 3625               	.LBE133:
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1311:quantum/rgblight.c ****         if (i < rgblight_ranges.effect_num_leds / 2 && anim->pos) {
1312:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1313:quantum/rgblight.c ****         } else if (i >= rgblight_ranges.effect_num_leds / 2 && !anim->pos) {
1314:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1315:quantum/rgblight.c ****         } else {
1316:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1317:quantum/rgblight.c ****         }
1318:quantum/rgblight.c ****     }
1319:quantum/rgblight.c ****     rgblight_set();
 3626               		.loc 1 1319 5 is_stmt 1 view .LVU840
 3627 001a 0E94 0000 		call rgblight_set
 3628               	.LVL241:
1320:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3629               		.loc 1 1320 5 view .LVU841
 3630               		.loc 1 1320 22 is_stmt 0 view .LVU842
 3631 001e 8C81      		ldd r24,Y+4
 3632 0020 90E0      		ldi r25,0
 3633               		.loc 1 1320 28 view .LVU843
 3634 0022 0196      		adiw r24,1
 3635               		.loc 1 1320 33 view .LVU844
 3636 0024 8170      		andi r24,1
 3637 0026 9927      		clr r25
 3638               		.loc 1 1320 15 view .LVU845
 3639 0028 8C83      		std Y+4,r24
 3640               	/* epilogue start */
1321:quantum/rgblight.c **** }
 3641               		.loc 1 1321 1 view .LVU846
 3642 002a DF91      		pop r29
 3643 002c CF91      		pop r28
 3644               	.LVL242:
 3645               		.loc 1 1321 1 view .LVU847
 3646 002e 1F91      		pop r17
 3647 0030 0F91      		pop r16
 3648               	.LVL243:
 3649               		.loc 1 1321 1 view .LVU848
 3650 0032 0895      		ret
 3651               	.LVL244:
 3652               	.L176:
 3653               	.LBB142:
 3654               	.LBB134:
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3655               		.loc 1 1310 9 is_stmt 1 view .LVU849
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3656               		.loc 1 1310 34 is_stmt 0 view .LVU850
 3657 0034 2091 0000 		lds r18,rgblight_ranges+2
 3658 0038 A801      		movw r20,r16
 3659 003a 420F      		add r20,r18
 3660 003c 511D      		adc r21,__zero_reg__
 3661 003e 9A01      		movw r18,r20
 3662 0040 220F      		lsl r18
 3663 0042 331F      		rol r19
 3664 0044 240F      		add r18,r20
 3665 0046 351F      		adc r19,r21
1310:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3666               		.loc 1 1310 19 view .LVU851
 3667 0048 2050      		subi r18,lo8(-(led))
 3668 004a 3040      		sbci r19,hi8(-(led))
 3669               	.LVL245:
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3670               		.loc 1 1311 9 is_stmt 1 view .LVU852
 3671 004c 4C81      		ldd r20,Y+4
 3672 004e 6091 0000 		lds r22,rgblight_config+2
 3673 0052 8091 0000 		lds r24,rgblight_config+1
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3674               		.loc 1 1311 49 is_stmt 0 view .LVU853
 3675 0056 9695      		lsr r25
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3676               		.loc 1 1311 12 view .LVU854
 3677 0058 9017      		cp r25,r16
 3678 005a 1106      		cpc __zero_reg__,r17
 3679 005c 01F0      		breq .L173
 3680 005e 04F0      		brlt .L173
1311:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3681               		.loc 1 1311 53 discriminator 1 view .LVU855
 3682 0060 4423      		tst r20
 3683 0062 01F0      		breq .L174
 3684               	.L181:
1314:quantum/rgblight.c ****         } else {
 3685               		.loc 1 1314 13 is_stmt 1 view .LVU856
 3686               	.LVL246:
 3687               	.LBB135:
 3688               	.LBI135:
 154:quantum/rgblight.c **** 
 3689               		.loc 1 154 6 view .LVU857
 3690               	.LBB136:
 154:quantum/rgblight.c **** 
 3691               		.loc 1 154 70 view .LVU858
 3692 0064 4091 0000 		lds r20,rgblight_config+3
 3693               	.LVL247:
 3694               	.L180:
 154:quantum/rgblight.c **** 
 3695               		.loc 1 154 70 is_stmt 0 view .LVU859
 3696               	.LBE136:
 3697               	.LBE135:
 3698               	.LBB137:
 3699               	.LBB138:
 3700 0068 0E94 0000 		call sethsv_raw
 3701               	.LVL248:
 154:quantum/rgblight.c **** 
 3702               		.loc 1 154 70 view .LVU860
 3703               	.LBE138:
 3704               	.LBE137:
 3705               	.LBE134:
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3706               		.loc 1 1309 58 is_stmt 1 view .LVU861
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3707               		.loc 1 1309 59 is_stmt 0 view .LVU862
 3708 006c 0F5F      		subi r16,-1
 3709 006e 1F4F      		sbci r17,-1
 3710               	.LVL249:
1309:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
 3711               		.loc 1 1309 59 view .LVU863
 3712 0070 00C0      		rjmp .L172
 3713               	.LVL250:
 3714               	.L173:
 3715               	.LBB141:
1313:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3716               		.loc 1 1313 16 is_stmt 1 discriminator 1 view .LVU864
1313:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3717               		.loc 1 1313 61 is_stmt 0 discriminator 1 view .LVU865
 3718 0072 4423      		tst r20
 3719 0074 01F0      		breq .L181
 3720               	.L174:
1316:quantum/rgblight.c ****         }
 3721               		.loc 1 1316 13 is_stmt 1 view .LVU866
 3722               	.LVL251:
 3723               	.LBB140:
 3724               	.LBI137:
 154:quantum/rgblight.c **** 
 3725               		.loc 1 154 6 view .LVU867
 3726               	.LBB139:
 154:quantum/rgblight.c **** 
 3727               		.loc 1 154 70 view .LVU868
 3728 0076 40E0      		ldi r20,0
 3729 0078 00C0      		rjmp .L180
 3730               	.LBE139:
 3731               	.LBE140:
 3732               	.LBE141:
 3733               	.LBE142:
 3734               		.cfi_endproc
 3735               	.LFE184:
 3737               		.section	.text.rgblight_effect_twinkle,"ax",@progbits
 3738               	.global	rgblight_effect_twinkle
 3740               	rgblight_effect_twinkle:
 3741               	.LVL252:
 3742               	.LFB185:
1322:quantum/rgblight.c **** #endif
1323:quantum/rgblight.c **** 
1324:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_TWINKLE
1325:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_TWINKLE_INTERVALS[] PROGMEM = {30, 15, 5};
1326:quantum/rgblight.c **** 
1327:quantum/rgblight.c **** typedef struct PACKED {
1328:quantum/rgblight.c ****     HSV     hsv;
1329:quantum/rgblight.c ****     uint8_t life;
1330:quantum/rgblight.c ****     uint8_t max_life;
1331:quantum/rgblight.c **** } TwinkleState;
1332:quantum/rgblight.c **** 
1333:quantum/rgblight.c **** static TwinkleState led_twinkle_state[RGBLED_NUM];
1334:quantum/rgblight.c **** 
1335:quantum/rgblight.c **** void rgblight_effect_twinkle(animation_status_t *anim) {
 3743               		.loc 1 1335 56 view -0
 3744               		.cfi_startproc
 3745               		.loc 1 1335 56 is_stmt 0 view .LVU870
 3746 0000 4F92      		push r4
 3747               	.LCFI83:
 3748               		.cfi_def_cfa_offset 3
 3749               		.cfi_offset 4, -2
 3750 0002 5F92      		push r5
 3751               	.LCFI84:
 3752               		.cfi_def_cfa_offset 4
 3753               		.cfi_offset 5, -3
 3754 0004 6F92      		push r6
 3755               	.LCFI85:
 3756               		.cfi_def_cfa_offset 5
 3757               		.cfi_offset 6, -4
 3758 0006 7F92      		push r7
 3759               	.LCFI86:
 3760               		.cfi_def_cfa_offset 6
 3761               		.cfi_offset 7, -5
 3762 0008 8F92      		push r8
 3763               	.LCFI87:
 3764               		.cfi_def_cfa_offset 7
 3765               		.cfi_offset 8, -6
 3766 000a 9F92      		push r9
 3767               	.LCFI88:
 3768               		.cfi_def_cfa_offset 8
 3769               		.cfi_offset 9, -7
 3770 000c AF92      		push r10
 3771               	.LCFI89:
 3772               		.cfi_def_cfa_offset 9
 3773               		.cfi_offset 10, -8
 3774 000e BF92      		push r11
 3775               	.LCFI90:
 3776               		.cfi_def_cfa_offset 10
 3777               		.cfi_offset 11, -9
 3778 0010 CF92      		push r12
 3779               	.LCFI91:
 3780               		.cfi_def_cfa_offset 11
 3781               		.cfi_offset 12, -10
 3782 0012 DF92      		push r13
 3783               	.LCFI92:
 3784               		.cfi_def_cfa_offset 12
 3785               		.cfi_offset 13, -11
 3786 0014 EF92      		push r14
 3787               	.LCFI93:
 3788               		.cfi_def_cfa_offset 13
 3789               		.cfi_offset 14, -12
 3790 0016 FF92      		push r15
 3791               	.LCFI94:
 3792               		.cfi_def_cfa_offset 14
 3793               		.cfi_offset 15, -13
 3794 0018 0F93      		push r16
 3795               	.LCFI95:
 3796               		.cfi_def_cfa_offset 15
 3797               		.cfi_offset 16, -14
 3798 001a 1F93      		push r17
 3799               	.LCFI96:
 3800               		.cfi_def_cfa_offset 16
 3801               		.cfi_offset 17, -15
 3802 001c CF93      		push r28
 3803               	.LCFI97:
 3804               		.cfi_def_cfa_offset 17
 3805               		.cfi_offset 28, -16
 3806 001e DF93      		push r29
 3807               	.LCFI98:
 3808               		.cfi_def_cfa_offset 18
 3809               		.cfi_offset 29, -17
 3810               	/* prologue: function */
 3811               	/* frame size = 0 */
 3812               	/* stack size = 16 */
 3813               	.L__stack_usage = 16
 3814 0020 FC01      		movw r30,r24
1336:quantum/rgblight.c ****     const bool random_color = anim->delta / 3;
 3815               		.loc 1 1336 5 is_stmt 1 view .LVU871
 3816               		.loc 1 1336 35 is_stmt 0 view .LVU872
 3817 0022 6280      		ldd r6,Z+2
 3818               	.LVL253:
1337:quantum/rgblight.c ****     const bool restart      = anim->pos == 0;
 3819               		.loc 1 1337 5 is_stmt 1 view .LVU873
 3820               		.loc 1 1337 35 is_stmt 0 view .LVU874
 3821 0024 4480      		ldd r4,Z+4
 3822               	.LVL254:
1338:quantum/rgblight.c ****     anim->pos               = 1;
 3823               		.loc 1 1338 5 is_stmt 1 view .LVU875
 3824               		.loc 1 1338 29 is_stmt 0 view .LVU876
 3825 0026 81E0      		ldi r24,lo8(1)
 3826               	.LVL255:
 3827               		.loc 1 1338 29 view .LVU877
 3828 0028 8483      		std Z+4,r24
1339:quantum/rgblight.c **** 
1340:quantum/rgblight.c ****     const uint8_t bottom = breathe_calc(0);
 3829               		.loc 1 1340 5 is_stmt 1 view .LVU878
 3830               	.LVL256:
 3831               	.LBB165:
 3832               	.LBI165:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3833               		.loc 1 1056 16 view .LVU879
 3834               	.LBE165:
1059:quantum/rgblight.c **** #    else
 3835               		.loc 1 1059 5 view .LVU880
 3836               	.LBB167:
 3837               	.LBB166:
1059:quantum/rgblight.c **** #    else
 3838               		.loc 1 1059 12 view .LVU881
1059:quantum/rgblight.c **** #    else
 3839               		.loc 1 1059 12 view .LVU882
1059:quantum/rgblight.c **** #    else
 3840               		.loc 1 1059 12 view .LVU883
 3841 002a E0E0      		ldi r30,lo8(rgblight_effect_breathe_table)
 3842 002c F0E0      		ldi r31,hi8(rgblight_effect_breathe_table)
 3843               	.LVL257:
1059:quantum/rgblight.c **** #    else
 3844               		.loc 1 1059 12 is_stmt 0 view .LVU884
 3845               	/* #APP */
 3846               	 ;  1059 "quantum/rgblight.c" 1
 3847 002e 7490      		lpm r7, Z
 3848               		
 3849               	 ;  0 "" 2
 3850               	.LVL258:
1059:quantum/rgblight.c **** #    else
 3851               		.loc 1 1059 12 is_stmt 1 view .LVU885
1059:quantum/rgblight.c **** #    else
 3852               		.loc 1 1059 12 is_stmt 0 view .LVU886
 3853               	/* #NOAPP */
 3854               	.LBE166:
 3855               	.LBE167:
1341:quantum/rgblight.c ****     const uint8_t top    = breathe_calc(127);
 3856               		.loc 1 1341 5 is_stmt 1 view .LVU887
 3857               	.LBB168:
 3858               	.LBI168:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 3859               		.loc 1 1056 16 view .LVU888
 3860               	.LBE168:
1059:quantum/rgblight.c **** #    else
 3861               		.loc 1 1059 5 view .LVU889
 3862               	.LBB170:
 3863               	.LBB169:
1059:quantum/rgblight.c **** #    else
 3864               		.loc 1 1059 12 view .LVU890
1059:quantum/rgblight.c **** #    else
 3865               		.loc 1 1059 12 view .LVU891
1059:quantum/rgblight.c **** #    else
 3866               		.loc 1 1059 12 view .LVU892
 3867 0030 E0E0      		ldi r30,lo8(rgblight_effect_breathe_table+127)
 3868 0032 F0E0      		ldi r31,hi8(rgblight_effect_breathe_table+127)
 3869               	.LVL259:
1059:quantum/rgblight.c **** #    else
 3870               		.loc 1 1059 12 is_stmt 0 view .LVU893
 3871               	/* #APP */
 3872               	 ;  1059 "quantum/rgblight.c" 1
 3873 0034 E491      		lpm r30, Z
 3874               		
 3875               	 ;  0 "" 2
 3876               	.LVL260:
1059:quantum/rgblight.c **** #    else
 3877               		.loc 1 1059 12 is_stmt 1 view .LVU894
1059:quantum/rgblight.c **** #    else
 3878               		.loc 1 1059 12 is_stmt 0 view .LVU895
 3879               	/* #NOAPP */
 3880               	.LBE169:
 3881               	.LBE170:
1342:quantum/rgblight.c **** 
1343:quantum/rgblight.c ****     uint8_t frac(uint8_t n, uint8_t d) { return (uint16_t)255 * n / d; }
 3882               		.loc 1 1343 5 is_stmt 1 view .LVU896
1344:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3883               		.loc 1 1344 5 view .LVU897
1345:quantum/rgblight.c **** 
1346:quantum/rgblight.c ****     for (uint8_t i = 0; i < rgblight_ranges.effect_num_leds; i++) {
 3884               		.loc 1 1346 5 view .LVU898
 3885               	.LBB171:
 3886               		.loc 1 1346 10 view .LVU899
 3887               		.loc 1 1346 18 is_stmt 0 view .LVU900
 3888 0036 812C      		mov r8,__zero_reg__
 3889               	.LBB172:
1347:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
1348:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
1349:quantum/rgblight.c **** 
1350:quantum/rgblight.c ****         if (!random_color) {
1351:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3890               		.loc 1 1351 18 view .LVU901
 3891 0038 75E0      		ldi r23,lo8(5)
 3892 003a 972E      		mov r9,r23
 3893               	.LBB173:
 3894               	.LBB174:
1344:quantum/rgblight.c **** 
 3895               		.loc 1 1344 58 view .LVU902
 3896 003c F2E0      		ldi r31,lo8(2)
 3897 003e CF2E      		mov r12,r31
 3898 0040 DD24      		clr r13
 3899 0042 D394      		inc r13
 3900               	.LBE174:
 3901               	.LBE173:
1352:quantum/rgblight.c ****             c->s = rgblight_config.sat;
1353:quantum/rgblight.c ****         }
1354:quantum/rgblight.c **** 
1355:quantum/rgblight.c ****         if (restart) {
1356:quantum/rgblight.c ****             // Restart
1357:quantum/rgblight.c ****             t->life = 0;
1358:quantum/rgblight.c ****             c->v    = 0;
1359:quantum/rgblight.c ****         } else if (t->life) {
1360:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
1361:quantum/rgblight.c ****             t->life--;
1362:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
1363:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
1364:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
1365:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
1366:quantum/rgblight.c ****             if (random_color) {
1367:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 3902               		.loc 1 1367 31 view .LVU903
 3903 0044 AA24      		clr r10
 3904 0046 AA94      		dec r10
 3905 0048 B12C      		mov r11,__zero_reg__
 3906               	.LBB177:
 3907               	.LBB178:
 3908               	.LBB179:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3909               		.loc 1 1343 63 view .LVU904
 3910 004a 5524      		clr r5
 3911 004c 5A94      		dec r5
 3912               	.LBE179:
 3913               	.LBE178:
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 3914               		.loc 1 1362 32 view .LVU905
 3915 004e E719      		sub r30,r7
 3916               	.LBB182:
 3917               	.LBB183:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3918               		.loc 1 1343 67 view .LVU906
 3919 0050 0E2F      		mov r16,r30
 3920 0052 10E0      		ldi r17,0
 3921               	.LVL261:
 3922               	.L183:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 3923               		.loc 1 1343 67 view .LVU907
 3924               	.LBE183:
 3925               	.LBE182:
 3926               	.LBE177:
 3927               	.LBE172:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3928               		.loc 1 1346 25 is_stmt 1 discriminator 1 view .LVU908
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 3929               		.loc 1 1346 5 is_stmt 0 discriminator 1 view .LVU909
 3930 0054 8091 0000 		lds r24,rgblight_ranges+4
 3931 0058 8816      		cp r8,r24
 3932 005a 00F0      		brlo .L191
 3933               	.LBE171:
1368:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
1369:quantum/rgblight.c ****             }
1370:quantum/rgblight.c ****             c->v        = 0;
1371:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
1372:quantum/rgblight.c ****             t->life     = t->max_life;
1373:quantum/rgblight.c ****         } else {
1374:quantum/rgblight.c ****             // This LED is off, and was NOT selected to start brightening
1375:quantum/rgblight.c ****         }
1376:quantum/rgblight.c **** 
1377:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + rgblight_ranges.effect_start_pos;
1378:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
1379:quantum/rgblight.c ****     }
1380:quantum/rgblight.c **** 
1381:quantum/rgblight.c ****     rgblight_set();
 3934               		.loc 1 1381 5 is_stmt 1 view .LVU910
 3935               	/* epilogue start */
1382:quantum/rgblight.c **** }
 3936               		.loc 1 1382 1 is_stmt 0 view .LVU911
 3937 005c DF91      		pop r29
 3938 005e CF91      		pop r28
 3939 0060 1F91      		pop r17
 3940 0062 0F91      		pop r16
 3941 0064 FF90      		pop r15
 3942 0066 EF90      		pop r14
 3943 0068 DF90      		pop r13
 3944 006a CF90      		pop r12
 3945 006c BF90      		pop r11
 3946 006e AF90      		pop r10
 3947 0070 9F90      		pop r9
 3948 0072 8F90      		pop r8
 3949               	.LVL262:
 3950               		.loc 1 1382 1 view .LVU912
 3951 0074 7F90      		pop r7
 3952               	.LVL263:
 3953               		.loc 1 1382 1 view .LVU913
 3954 0076 6F90      		pop r6
 3955               	.LVL264:
 3956               		.loc 1 1382 1 view .LVU914
 3957 0078 5F90      		pop r5
 3958 007a 4F90      		pop r4
 3959               	.LVL265:
1381:quantum/rgblight.c **** }
 3960               		.loc 1 1381 5 view .LVU915
 3961 007c 0C94 0000 		jmp rgblight_set
 3962               	.LVL266:
 3963               	.L191:
 3964               	.LBB210:
 3965               	.LBB207:
1347:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3966               		.loc 1 1347 9 is_stmt 1 view .LVU916
1347:quantum/rgblight.c ****         HSV *         c = &(t->hsv);
 3967               		.loc 1 1347 46 is_stmt 0 view .LVU917
 3968 0080 E82C      		mov r14,r8
 3969 0082 F12C      		mov r15,__zero_reg__
 3970               	.LVL267:
1348:quantum/rgblight.c **** 
 3971               		.loc 1 1348 9 is_stmt 1 view .LVU918
1350:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3972               		.loc 1 1350 9 view .LVU919
1350:quantum/rgblight.c ****             c->h = rgblight_config.hue;
 3973               		.loc 1 1350 12 is_stmt 0 view .LVU920
 3974 0084 82E0      		ldi r24,lo8(2)
 3975 0086 8615      		cp r24,r6
 3976 0088 00F0      		brlo .L184
1351:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3977               		.loc 1 1351 13 is_stmt 1 view .LVU921
1351:quantum/rgblight.c ****             c->s = rgblight_config.sat;
 3978               		.loc 1 1351 18 is_stmt 0 view .LVU922
 3979 008a 9E9C      		mul r9,r14
 3980 008c F001      		movw r30,r0
 3981 008e 9F9C      		mul r9,r15
 3982 0090 F00D      		add r31,r0
 3983 0092 1124      		clr __zero_reg__
 3984 0094 E050      		subi r30,lo8(-(led_twinkle_state))
 3985 0096 F040      		sbci r31,hi8(-(led_twinkle_state))
 3986 0098 8091 0000 		lds r24,rgblight_config+1
 3987 009c 8083      		st Z,r24
1352:quantum/rgblight.c ****         }
 3988               		.loc 1 1352 13 is_stmt 1 view .LVU923
1352:quantum/rgblight.c ****         }
 3989               		.loc 1 1352 18 is_stmt 0 view .LVU924
 3990 009e 8091 0000 		lds r24,rgblight_config+2
 3991 00a2 8183      		std Z+1,r24
 3992               	.L184:
1355:quantum/rgblight.c ****             // Restart
 3993               		.loc 1 1355 9 is_stmt 1 view .LVU925
1355:quantum/rgblight.c ****             // Restart
 3994               		.loc 1 1355 12 is_stmt 0 view .LVU926
 3995 00a4 4110      		cpse r4,__zero_reg__
 3996 00a6 00C0      		rjmp .L185
1357:quantum/rgblight.c ****             c->v    = 0;
 3997               		.loc 1 1357 13 is_stmt 1 view .LVU927
1357:quantum/rgblight.c ****             c->v    = 0;
 3998               		.loc 1 1357 21 is_stmt 0 view .LVU928
 3999 00a8 9E9C      		mul r9,r14
 4000 00aa F001      		movw r30,r0
 4001 00ac 9F9C      		mul r9,r15
 4002 00ae F00D      		add r31,r0
 4003 00b0 1124      		clr __zero_reg__
 4004 00b2 E050      		subi r30,lo8(-(led_twinkle_state))
 4005 00b4 F040      		sbci r31,hi8(-(led_twinkle_state))
 4006 00b6 1382      		std Z+3,__zero_reg__
1358:quantum/rgblight.c ****         } else if (t->life) {
 4007               		.loc 1 1358 13 is_stmt 1 view .LVU929
1358:quantum/rgblight.c ****         } else if (t->life) {
 4008               		.loc 1 1358 21 is_stmt 0 view .LVU930
 4009 00b8 1282      		std Z+2,__zero_reg__
 4010               	.L186:
1375:quantum/rgblight.c **** 
 4011               		.loc 1 1375 9 is_stmt 1 discriminator 2 view .LVU931
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4012               		.loc 1 1377 9 discriminator 2 view .LVU932
 4013               	.LVL268:
1378:quantum/rgblight.c ****     }
 4014               		.loc 1 1378 9 discriminator 2 view .LVU933
 4015               	.LBB199:
 4016               	.LBI199:
 154:quantum/rgblight.c **** 
 4017               		.loc 1 154 6 discriminator 2 view .LVU934
 4018               	.LBB200:
 154:quantum/rgblight.c **** 
 4019               		.loc 1 154 70 discriminator 2 view .LVU935
 4020               	.LBE200:
 4021               	.LBE199:
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4022               		.loc 1 1377 34 is_stmt 0 discriminator 2 view .LVU936
 4023 00ba 2091 0000 		lds r18,rgblight_ranges+2
 4024 00be C701      		movw r24,r14
 4025 00c0 820F      		add r24,r18
 4026 00c2 911D      		adc r25,__zero_reg__
 4027 00c4 9C01      		movw r18,r24
 4028 00c6 220F      		lsl r18
 4029 00c8 331F      		rol r19
 4030 00ca 280F      		add r18,r24
 4031 00cc 391F      		adc r19,r25
1377:quantum/rgblight.c ****         sethsv(c->h, c->s, c->v, ledp);
 4032               		.loc 1 1377 19 discriminator 2 view .LVU937
 4033 00ce 2050      		subi r18,lo8(-(led))
 4034 00d0 3040      		sbci r19,hi8(-(led))
1378:quantum/rgblight.c ****     }
 4035               		.loc 1 1378 9 discriminator 2 view .LVU938
 4036 00d2 9E9C      		mul r9,r14
 4037 00d4 F001      		movw r30,r0
 4038 00d6 9F9C      		mul r9,r15
 4039 00d8 F00D      		add r31,r0
 4040 00da 1124      		clr __zero_reg__
 4041 00dc E050      		subi r30,lo8(-(led_twinkle_state))
 4042 00de F040      		sbci r31,hi8(-(led_twinkle_state))
 4043               	.LBB202:
 4044               	.LBB201:
 154:quantum/rgblight.c **** 
 4045               		.loc 1 154 70 discriminator 2 view .LVU939
 4046 00e0 4281      		ldd r20,Z+2
 4047 00e2 6181      		ldd r22,Z+1
 4048 00e4 8081      		ld r24,Z
 4049 00e6 0E94 0000 		call sethsv_raw
 4050               	.LVL269:
 154:quantum/rgblight.c **** 
 4051               		.loc 1 154 70 discriminator 2 view .LVU940
 4052               	.LBE201:
 4053               	.LBE202:
 4054               	.LBE207:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4055               		.loc 1 1346 62 is_stmt 1 discriminator 2 view .LVU941
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4056               		.loc 1 1346 63 is_stmt 0 discriminator 2 view .LVU942
 4057 00ea 8394      		inc r8
 4058               	.LVL270:
1346:quantum/rgblight.c ****         TwinkleState *t = &(led_twinkle_state[i]);
 4059               		.loc 1 1346 63 discriminator 2 view .LVU943
 4060 00ec 00C0      		rjmp .L183
 4061               	.L185:
 4062               	.LBB208:
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4063               		.loc 1 1359 16 is_stmt 1 view .LVU944
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4064               		.loc 1 1359 21 is_stmt 0 view .LVU945
 4065 00ee 9E9C      		mul r9,r14
 4066 00f0 E001      		movw r28,r0
 4067 00f2 9F9C      		mul r9,r15
 4068 00f4 D00D      		add r29,r0
 4069 00f6 1124      		clr __zero_reg__
 4070 00f8 C050      		subi r28,lo8(-(led_twinkle_state))
 4071 00fa D040      		sbci r29,hi8(-(led_twinkle_state))
 4072 00fc 8B81      		ldd r24,Y+3
1359:quantum/rgblight.c ****             // This LED is already on, either brightening or dimming
 4073               		.loc 1 1359 19 view .LVU946
 4074 00fe 8823      		tst r24
 4075 0100 01F0      		breq .L187
 4076               	.LBB203:
1361:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4077               		.loc 1 1361 13 is_stmt 1 view .LVU947
1361:quantum/rgblight.c ****             uint8_t unscaled = frac(breathe_calc(frac(t->life, t->max_life)) - bottom, top - bottom
 4078               		.loc 1 1361 20 is_stmt 0 view .LVU948
 4079 0102 8150      		subi r24,lo8(-(-1))
 4080 0104 8B83      		std Y+3,r24
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4081               		.loc 1 1362 13 is_stmt 1 view .LVU949
 4082               	.LVL271:
 4083               	.LBB186:
 4084               	.LBI178:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4085               		.loc 1 1343 13 view .LVU950
 4086               	.LBB180:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4087               		.loc 1 1343 42 view .LVU951
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4088               		.loc 1 1343 42 is_stmt 0 view .LVU952
 4089               	.LBE180:
 4090               	.LBE186:
 4091               	.LBB187:
 4092               	.LBI187:
1056:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 4093               		.loc 1 1056 16 is_stmt 1 view .LVU953
 4094               	.LBE187:
 4095               	.LBE203:
 4096               	.LBE208:
 4097               	.LBE210:
1059:quantum/rgblight.c **** #    else
 4098               		.loc 1 1059 5 view .LVU954
 4099               	.LBB211:
 4100               	.LBB209:
 4101               	.LBB204:
 4102               	.LBB190:
 4103               	.LBB188:
1059:quantum/rgblight.c **** #    else
 4104               		.loc 1 1059 12 view .LVU955
1059:quantum/rgblight.c **** #    else
 4105               		.loc 1 1059 12 view .LVU956
1059:quantum/rgblight.c **** #    else
 4106               		.loc 1 1059 12 view .LVU957
 4107               	.LBE188:
 4108               	.LBE190:
 4109               	.LBB191:
 4110               	.LBB181:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4111               		.loc 1 1343 63 is_stmt 0 view .LVU958
 4112 0106 859D      		mul r24,r5
 4113 0108 C001      		movw r24,r0
 4114 010a 1124      		clr __zero_reg__
 4115               	.LVL272:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4116               		.loc 1 1343 67 view .LVU959
 4117 010c 6C81      		ldd r22,Y+4
 4118 010e 70E0      		ldi r23,0
 4119 0110 0E94 0000 		call __udivmodhi4
 4120               	.LBE181:
 4121               	.LBE191:
 4122               	.LBB192:
 4123               	.LBB189:
1059:quantum/rgblight.c **** #    else
 4124               		.loc 1 1059 12 view .LVU960
 4125 0114 FB01      		movw r30,r22
 4126 0116 FF27      		clr r31
 4127 0118 E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 4128 011a F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 4129               	/* #APP */
 4130               	 ;  1059 "quantum/rgblight.c" 1
 4131 011c 8491      		lpm r24, Z
 4132               		
 4133               	 ;  0 "" 2
 4134               	.LVL273:
1059:quantum/rgblight.c **** #    else
 4135               		.loc 1 1059 12 is_stmt 1 view .LVU961
1059:quantum/rgblight.c **** #    else
 4136               		.loc 1 1059 12 is_stmt 0 view .LVU962
 4137               	/* #NOAPP */
 4138               	.LBE189:
 4139               	.LBE192:
 4140               	.LBB193:
 4141               	.LBI182:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4142               		.loc 1 1343 13 is_stmt 1 view .LVU963
 4143               	.LBB184:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4144               		.loc 1 1343 42 view .LVU964
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4145               		.loc 1 1343 42 is_stmt 0 view .LVU965
 4146               	.LBE184:
 4147               	.LBE193:
1363:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4148               		.loc 1 1363 13 is_stmt 1 view .LVU966
 4149               	.LBB194:
 4150               	.LBI194:
1344:quantum/rgblight.c **** 
 4151               		.loc 1 1344 13 view .LVU967
 4152               	.LBB195:
1344:quantum/rgblight.c **** 
 4153               		.loc 1 1344 48 view .LVU968
1344:quantum/rgblight.c **** 
 4154               		.loc 1 1344 48 is_stmt 0 view .LVU969
 4155               	.LBE195:
 4156               	.LBE194:
1362:quantum/rgblight.c ****             c->v             = scale(rgblight_config.val, unscaled);
 4157               		.loc 1 1362 32 view .LVU970
 4158 011e E82F      		mov r30,r24
 4159 0120 E719      		sub r30,r7
 4160               	.LBB197:
 4161               	.LBB185:
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4162               		.loc 1 1343 63 view .LVU971
 4163 0122 E59D      		mul r30,r5
 4164 0124 C001      		movw r24,r0
 4165 0126 1124      		clr __zero_reg__
1343:quantum/rgblight.c ****     uint8_t scale(uint16_t v, uint8_t scale) { return (v * scale) >> 8; }
 4166               		.loc 1 1343 67 view .LVU972
 4167 0128 B801      		movw r22,r16
 4168 012a 0E94 0000 		call __udivmodhi4
 4169               	.LBE185:
 4170               	.LBE197:
1363:quantum/rgblight.c ****         } else if (rand() < scale((uint16_t)RAND_MAX * RGBLIGHT_EFFECT_TWINKLE_PROBABILITY, 127 + r
 4171               		.loc 1 1363 32 view .LVU973
 4172 012e 8091 0000 		lds r24,rgblight_config+3
 4173               	.LBB198:
 4174               	.LBB196:
1344:quantum/rgblight.c **** 
 4175               		.loc 1 1344 58 view .LVU974
 4176 0132 689F      		mul r22,r24
 4177 0134 B001      		movw r22,r0
 4178 0136 1124      		clr __zero_reg__
1344:quantum/rgblight.c **** 
 4179               		.loc 1 1344 67 view .LVU975
 4180 0138 7A83      		std Y+2,r23
 4181               	.LBE196:
 4182               	.LBE198:
 4183               	.LBE204:
 4184 013a 00C0      		rjmp .L186
 4185               	.L187:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4186               		.loc 1 1364 16 is_stmt 1 view .LVU976
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4187               		.loc 1 1364 20 is_stmt 0 view .LVU977
 4188 013c 0E94 0000 		call rand
 4189               	.LVL274:
 4190               	.LBB205:
 4191               	.LBI173:
1344:quantum/rgblight.c **** 
 4192               		.loc 1 1344 13 is_stmt 1 view .LVU978
 4193               	.LBB175:
1344:quantum/rgblight.c **** 
 4194               		.loc 1 1344 48 view .LVU979
1344:quantum/rgblight.c **** 
 4195               		.loc 1 1344 48 is_stmt 0 view .LVU980
 4196               	.LBE175:
 4197               	.LBE205:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4198               		.loc 1 1364 29 view .LVU981
 4199 0140 2091 0000 		lds r18,rgblight_config+3
 4200 0144 2695      		lsr r18
 4201 0146 2158      		subi r18,lo8(-(127))
 4202               	.LBB206:
 4203               	.LBB176:
1344:quantum/rgblight.c **** 
 4204               		.loc 1 1344 58 view .LVU982
 4205 0148 2C9D      		mul r18,r12
 4206 014a A001      		movw r20,r0
 4207 014c 2D9D      		mul r18,r13
 4208 014e 500D      		add r21,r0
 4209 0150 1124      		clr __zero_reg__
1344:quantum/rgblight.c **** 
 4210               		.loc 1 1344 67 view .LVU983
 4211 0152 452F      		mov r20,r21
 4212 0154 5527      		clr r21
 4213               	.LBE176:
 4214               	.LBE206:
1364:quantum/rgblight.c ****             // This LED is off, but was randomly selected to start brightening
 4215               		.loc 1 1364 19 view .LVU984
 4216 0156 8417      		cp r24,r20
 4217 0158 9507      		cpc r25,r21
 4218 015a 04F0      		brlt .+2
 4219 015c 00C0      		rjmp .L186
1366:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4220               		.loc 1 1366 13 is_stmt 1 view .LVU985
1366:quantum/rgblight.c ****                 c->h = rand() % 0xFF;
 4221               		.loc 1 1366 16 is_stmt 0 view .LVU986
 4222 015e 82E0      		ldi r24,lo8(2)
 4223 0160 8615      		cp r24,r6
 4224 0162 00F4      		brsh .L188
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4225               		.loc 1 1367 17 is_stmt 1 view .LVU987
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4226               		.loc 1 1367 24 is_stmt 0 view .LVU988
 4227 0164 0E94 0000 		call rand
 4228               	.LVL275:
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4229               		.loc 1 1367 31 view .LVU989
 4230 0168 B501      		movw r22,r10
 4231 016a 0E94 0000 		call __divmodhi4
1367:quantum/rgblight.c ****                 c->s = (rand() % (rgblight_config.sat / 2)) + (rgblight_config.sat / 2);
 4232               		.loc 1 1367 22 view .LVU990
 4233 016e 8883      		st Y,r24
1368:quantum/rgblight.c ****             }
 4234               		.loc 1 1368 17 is_stmt 1 view .LVU991
1368:quantum/rgblight.c ****             }
 4235               		.loc 1 1368 25 is_stmt 0 view .LVU992
 4236 0170 0E94 0000 		call rand
 4237               	.LVL276:
1368:quantum/rgblight.c ****             }
 4238               		.loc 1 1368 55 view .LVU993
 4239 0174 2091 0000 		lds r18,rgblight_config+2
 4240 0178 2695      		lsr r18
 4241 017a 622F      		mov r22,r18
 4242 017c 70E0      		ldi r23,0
1368:quantum/rgblight.c ****             }
 4243               		.loc 1 1368 32 view .LVU994
 4244 017e 0E94 0000 		call __divmodhi4
1368:quantum/rgblight.c ****             }
 4245               		.loc 1 1368 61 view .LVU995
 4246 0182 280F      		add r18,r24
1368:quantum/rgblight.c ****             }
 4247               		.loc 1 1368 22 view .LVU996
 4248 0184 2983      		std Y+1,r18
 4249               	.L188:
1370:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4250               		.loc 1 1370 13 is_stmt 1 view .LVU997
1370:quantum/rgblight.c ****             t->max_life = MAX(20, MIN(RGBLIGHT_EFFECT_TWINKLE_LIFE, rgblight_config.val));
 4251               		.loc 1 1370 25 is_stmt 0 view .LVU998
 4252 0186 9E9C      		mul r9,r14
 4253 0188 F001      		movw r30,r0
 4254 018a 9F9C      		mul r9,r15
 4255 018c F00D      		add r31,r0
 4256 018e 1124      		clr __zero_reg__
 4257 0190 E050      		subi r30,lo8(-(led_twinkle_state))
 4258 0192 F040      		sbci r31,hi8(-(led_twinkle_state))
 4259 0194 1282      		std Z+2,__zero_reg__
1371:quantum/rgblight.c ****             t->life     = t->max_life;
 4260               		.loc 1 1371 13 is_stmt 1 view .LVU999
1371:quantum/rgblight.c ****             t->life     = t->max_life;
 4261               		.loc 1 1371 25 is_stmt 0 view .LVU1000
 4262 0196 8091 0000 		lds r24,rgblight_config+3
 4263 019a 893C      		cpi r24,lo8(-55)
 4264 019c 00F0      		brlo .L189
 4265 019e 88EC      		ldi r24,lo8(-56)
 4266               	.L190:
 4267 01a0 9E9C      		mul r9,r14
 4268 01a2 F001      		movw r30,r0
 4269 01a4 9F9C      		mul r9,r15
 4270 01a6 F00D      		add r31,r0
 4271 01a8 1124      		clr __zero_reg__
 4272 01aa E050      		subi r30,lo8(-(led_twinkle_state))
 4273 01ac F040      		sbci r31,hi8(-(led_twinkle_state))
 4274 01ae 8483      		std Z+4,r24
1372:quantum/rgblight.c ****         } else {
 4275               		.loc 1 1372 13 is_stmt 1 view .LVU1001
1372:quantum/rgblight.c ****         } else {
 4276               		.loc 1 1372 25 is_stmt 0 view .LVU1002
 4277 01b0 8383      		std Z+3,r24
 4278 01b2 00C0      		rjmp .L186
 4279               	.L189:
1372:quantum/rgblight.c ****         } else {
 4280               		.loc 1 1372 25 view .LVU1003
 4281 01b4 8431      		cpi r24,lo8(20)
 4282 01b6 00F4      		brsh .L190
 4283 01b8 84E1      		ldi r24,lo8(20)
 4284 01ba 00C0      		rjmp .L190
 4285               	.LBE209:
 4286               	.LBE211:
 4287               		.cfi_endproc
 4288               	.LFE185:
 4290               		.section	.text.rgblight_disable,"ax",@progbits
 4291               	.global	rgblight_disable
 4293               	rgblight_disable:
 4294               	.LFB116:
 385:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4295               		.loc 1 385 29 is_stmt 1 view -0
 4296               		.cfi_startproc
 4297               	/* prologue: function */
 4298               	/* frame size = 0 */
 4299               	/* stack size = 0 */
 4300               	.L__stack_usage = 0
 386:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4301               		.loc 1 386 5 view .LVU1005
 386:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 4302               		.loc 1 386 28 is_stmt 0 view .LVU1006
 4303 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4304 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4305 0004 8081      		ld r24,Z
 4306 0006 8E7F      		andi r24,lo8(~(1<<0))
 4307 0008 8083      		st Z,r24
 387:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4308               		.loc 1 387 5 is_stmt 1 view .LVU1007
 4309 000a 6081      		ld r22,Z
 4310 000c 7181      		ldd r23,Z+1
 4311 000e 8281      		ldd r24,Z+2
 4312 0010 9381      		ldd r25,Z+3
 4313 0012 0E94 0000 		call eeconfig_update_rgblight
 4314               	.LVL277:
 388:quantum/rgblight.c ****     rgblight_timer_disable();
 4315               		.loc 1 388 96 view .LVU1008
 389:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4316               		.loc 1 389 5 view .LVU1009
 4317               	.LBB216:
 4318               	.LBI216:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4319               		.loc 1 894 6 view .LVU1010
 4320               	.LBB217:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4321               		.loc 1 895 5 view .LVU1011
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4322               		.loc 1 895 35 is_stmt 0 view .LVU1012
 4323 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4324               		.loc 1 896 43 is_stmt 1 view .LVU1013
 4325               	.LBE217:
 4326               	.LBE216:
 390:quantum/rgblight.c ****     wait_ms(50);
 4327               		.loc 1 390 35 view .LVU1014
 391:quantum/rgblight.c ****     rgblight_set();
 4328               		.loc 1 391 5 view .LVU1015
 4329               	.LVL278:
 4330               	.LBB218:
 4331               	.LBI218:
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 4332               		.loc 3 166 1 view .LVU1016
 4333               	.LBB219:
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4334               		.loc 3 168 2 view .LVU1017
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4335               		.loc 3 172 2 view .LVU1018
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4336               		.loc 3 173 2 view .LVU1019
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 4337               		.loc 3 174 2 view .LVU1020
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 4338               		.loc 3 184 3 view .LVU1021
 4339               		.loc 3 187 2 view .LVU1022
 4340 001a 2FEF      		ldi r18,lo8(159999)
 4341 001c 80E7      		ldi r24,hi8(159999)
 4342 001e 92E0      		ldi r25,hlo8(159999)
 4343 0020 2150      	1:	subi r18,1
 4344 0022 8040      		sbci r24,0
 4345 0024 9040      		sbci r25,0
 4346 0026 01F4      		brne 1b
 4347 0028 00C0      		rjmp .
 4348 002a 0000      		nop
 4349               	.LVL279:
 4350               		.loc 3 187 2 is_stmt 0 view .LVU1023
 4351               	.LBE219:
 4352               	.LBE218:
 392:quantum/rgblight.c **** }
 4353               		.loc 1 392 5 is_stmt 1 view .LVU1024
 4354 002c 0C94 0000 		jmp rgblight_set
 4355               	.LVL280:
 4356               		.cfi_endproc
 4357               	.LFE116:
 4359               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 4360               	.global	rgblight_disable_noeeprom
 4362               	rgblight_disable_noeeprom:
 4363               	.LFB117:
 395:quantum/rgblight.c ****     rgblight_config.enable = 0;
 4364               		.loc 1 395 38 view -0
 4365               		.cfi_startproc
 4366               	/* prologue: function */
 4367               	/* frame size = 0 */
 4368               	/* stack size = 0 */
 4369               	.L__stack_usage = 0
 396:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4370               		.loc 1 396 5 view .LVU1026
 396:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4371               		.loc 1 396 28 is_stmt 0 view .LVU1027
 4372 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4373 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4374 0004 8081      		ld r24,Z
 4375 0006 8E7F      		andi r24,lo8(~(1<<0))
 4376 0008 8083      		st Z,r24
 397:quantum/rgblight.c ****     rgblight_timer_disable();
 4377               		.loc 1 397 98 is_stmt 1 view .LVU1028
 398:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 4378               		.loc 1 398 5 view .LVU1029
 4379               	.LBB224:
 4380               	.LBI224:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4381               		.loc 1 894 6 view .LVU1030
 4382               	.LBB225:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4383               		.loc 1 895 5 view .LVU1031
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4384               		.loc 1 895 35 is_stmt 0 view .LVU1032
 4385 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4386               		.loc 1 896 43 is_stmt 1 view .LVU1033
 4387               	.LBE225:
 4388               	.LBE224:
 399:quantum/rgblight.c ****     wait_ms(50);
 4389               		.loc 1 399 35 view .LVU1034
 400:quantum/rgblight.c ****     rgblight_set();
 4390               		.loc 1 400 5 view .LVU1035
 4391               	.LVL281:
 4392               	.LBB226:
 4393               	.LBI226:
 166:e:\game\msys2\mingw64\avr\include\util\delay.h **** {
 4394               		.loc 3 166 1 view .LVU1036
 4395               	.LBB227:
 168:e:\game\msys2\mingw64\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 4396               		.loc 3 168 2 view .LVU1037
 172:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 4397               		.loc 3 172 2 view .LVU1038
 173:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 4398               		.loc 3 173 2 view .LVU1039
 174:e:\game\msys2\mingw64\avr\include\util\delay.h **** 
 4399               		.loc 3 174 2 view .LVU1040
 184:e:\game\msys2\mingw64\avr\include\util\delay.h **** 	#endif
 4400               		.loc 3 184 3 view .LVU1041
 4401               		.loc 3 187 2 view .LVU1042
 4402 000e 2FEF      		ldi r18,lo8(159999)
 4403 0010 80E7      		ldi r24,hi8(159999)
 4404 0012 92E0      		ldi r25,hlo8(159999)
 4405 0014 2150      	1:	subi r18,1
 4406 0016 8040      		sbci r24,0
 4407 0018 9040      		sbci r25,0
 4408 001a 01F4      		brne 1b
 4409 001c 00C0      		rjmp .
 4410 001e 0000      		nop
 4411               	.LVL282:
 4412               		.loc 3 187 2 is_stmt 0 view .LVU1043
 4413               	.LBE227:
 4414               	.LBE226:
 401:quantum/rgblight.c **** }
 4415               		.loc 1 401 5 is_stmt 1 view .LVU1044
 4416 0020 0C94 0000 		jmp rgblight_set
 4417               	.LVL283:
 4418               		.cfi_endproc
 4419               	.LFE117:
 4421               		.section	.text.rgblight_suspend,"ax",@progbits
 4422               	.global	rgblight_suspend
 4424               	rgblight_suspend:
 4425               	.LFB165:
 758:quantum/rgblight.c ****     rgblight_timer_disable();
 4426               		.loc 1 758 29 view -0
 4427               		.cfi_startproc
 4428               	/* prologue: function */
 4429               	/* frame size = 0 */
 4430               	/* stack size = 0 */
 4431               	.L__stack_usage = 0
 759:quantum/rgblight.c ****     if (!is_suspended) {
 4432               		.loc 1 759 5 view .LVU1046
 4433               	.LBB230:
 4434               	.LBI230:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4435               		.loc 1 894 6 view .LVU1047
 4436               	.LBB231:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4437               		.loc 1 895 5 view .LVU1048
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4438               		.loc 1 895 35 is_stmt 0 view .LVU1049
 4439 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4440               		.loc 1 896 43 is_stmt 1 view .LVU1050
 4441               	.LBE231:
 4442               	.LBE230:
 760:quantum/rgblight.c ****         is_suspended        = true;
 4443               		.loc 1 760 5 view .LVU1051
 760:quantum/rgblight.c ****         is_suspended        = true;
 4444               		.loc 1 760 8 is_stmt 0 view .LVU1052
 4445 0004 8091 0000 		lds r24,is_suspended
 4446 0008 8111      		cpse r24,__zero_reg__
 4447 000a 00C0      		rjmp .L194
 761:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 4448               		.loc 1 761 9 is_stmt 1 view .LVU1053
 761:quantum/rgblight.c ****         pre_suspend_enabled = rgblight_config.enable;
 4449               		.loc 1 761 29 is_stmt 0 view .LVU1054
 4450 000c 81E0      		ldi r24,lo8(1)
 4451 000e 8093 0000 		sts is_suspended,r24
 762:quantum/rgblight.c **** 
 4452               		.loc 1 762 9 is_stmt 1 view .LVU1055
 762:quantum/rgblight.c **** 
 4453               		.loc 1 762 46 is_stmt 0 view .LVU1056
 4454 0012 8091 0000 		lds r24,rgblight_config
 4455 0016 8170      		andi r24,1
 762:quantum/rgblight.c **** 
 4456               		.loc 1 762 29 view .LVU1057
 4457 0018 8093 0000 		sts pre_suspend_enabled,r24
 770:quantum/rgblight.c ****     }
 4458               		.loc 1 770 9 is_stmt 1 view .LVU1058
 4459 001c 0C94 0000 		jmp rgblight_disable_noeeprom
 4460               	.LVL284:
 4461               	.L194:
 4462               	/* epilogue start */
 772:quantum/rgblight.c **** 
 4463               		.loc 1 772 1 is_stmt 0 view .LVU1059
 4464 0020 0895      		ret
 4465               		.cfi_endproc
 4466               	.LFE165:
 4468               		.section	.text.rgblight_timer_init,"ax",@progbits
 4469               	.global	rgblight_timer_init
 4471               	rgblight_timer_init:
 4472               	.LFB169:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4473               		.loc 1 894 32 is_stmt 1 view -0
 4474               		.cfi_startproc
 4475               	/* prologue: function */
 4476               	/* frame size = 0 */
 4477               	/* stack size = 0 */
 4478               	.L__stack_usage = 0
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4479               		.loc 1 895 5 view .LVU1061
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4480               		.loc 1 895 35 is_stmt 0 view .LVU1062
 4481 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4482               		.loc 1 896 43 is_stmt 1 view .LVU1063
 4483               	/* epilogue start */
 897:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 4484               		.loc 1 897 1 is_stmt 0 view .LVU1064
 4485 0004 0895      		ret
 4486               		.cfi_endproc
 4487               	.LFE169:
 4489               		.section	.text.rgblight_timer_enable,"ax",@progbits
 4490               	.global	rgblight_timer_enable
 4492               	rgblight_timer_enable:
 4493               	.LFB170:
 898:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 4494               		.loc 1 898 34 is_stmt 1 view -0
 4495               		.cfi_startproc
 4496               	/* prologue: function */
 4497               	/* frame size = 0 */
 4498               	/* stack size = 0 */
 4499               	.L__stack_usage = 0
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4500               		.loc 1 899 5 view .LVU1066
 4501               	.LVL285:
 4502               	.LBB234:
 4503               	.LBI234:
  99:quantum/rgblight.c **** 
 4504               		.loc 1 99 19 view .LVU1067
 4505               	.LBB235:
  99:quantum/rgblight.c **** 
 4506               		.loc 1 99 52 view .LVU1068
 4507               	.LBE235:
 4508               	.LBE234:
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4509               		.loc 1 899 42 is_stmt 0 view .LVU1069
 4510 0000 6091 0000 		lds r22,rgblight_config
 4511 0004 6695      		lsr r22
 4512               	.LBB237:
 4513               	.LBB236:
  99:quantum/rgblight.c **** 
 4514               		.loc 1 99 59 view .LVU1070
 4515 0006 70E0      		ldi r23,0
 4516 0008 4BE0      		ldi r20,lo8(11)
 4517 000a 50E0      		ldi r21,0
 4518 000c 80E0      		ldi r24,lo8(static_effect_table)
 4519 000e 90E0      		ldi r25,hi8(static_effect_table)
 4520 0010 0E94 0000 		call memchr
 4521               	.LVL286:
  99:quantum/rgblight.c **** 
 4522               		.loc 1 99 59 view .LVU1071
 4523               	.LBE236:
 4524               	.LBE237:
 899:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 4525               		.loc 1 899 8 view .LVU1072
 4526 0014 892B      		or r24,r25
 4527 0016 01F4      		brne .L198
 900:quantum/rgblight.c ****     }
 4528               		.loc 1 900 9 is_stmt 1 view .LVU1073
 900:quantum/rgblight.c ****     }
 4529               		.loc 1 900 39 is_stmt 0 view .LVU1074
 4530 0018 81E0      		ldi r24,lo8(1)
 4531 001a 8093 0000 		sts rgblight_status+1,r24
 4532               	.L198:
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4533               		.loc 1 902 5 is_stmt 1 view .LVU1075
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4534               		.loc 1 902 35 is_stmt 0 view .LVU1076
 4535 001e 0E94 0000 		call timer_read
 4536               	.LVL287:
 902:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4537               		.loc 1 902 33 view .LVU1077
 4538 0022 9093 0000 		sts animation_status+1,r25
 4539 0026 8093 0000 		sts animation_status,r24
 903:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 4540               		.loc 1 903 43 is_stmt 1 view .LVU1078
 904:quantum/rgblight.c **** }
 4541               		.loc 1 904 41 view .LVU1079
 4542               	/* epilogue start */
 905:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 4543               		.loc 1 905 1 is_stmt 0 view .LVU1080
 4544 002a 0895      		ret
 4545               		.cfi_endproc
 4546               	.LFE170:
 4548               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 4549               	.global	rgblight_mode_eeprom_helper
 4551               	rgblight_mode_eeprom_helper:
 4552               	.LVL288:
 4553               	.LFB109:
 320:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 4554               		.loc 1 320 70 is_stmt 1 view -0
 4555               		.cfi_startproc
 4556               	/* prologue: function */
 4557               	/* frame size = 0 */
 4558               	/* stack size = 0 */
 4559               	.L__stack_usage = 0
 321:quantum/rgblight.c ****         return;
 4560               		.loc 1 321 5 view .LVU1082
 321:quantum/rgblight.c ****         return;
 4561               		.loc 1 321 25 is_stmt 0 view .LVU1083
 4562 0000 9091 0000 		lds r25,rgblight_config
 321:quantum/rgblight.c ****         return;
 4563               		.loc 1 321 8 view .LVU1084
 4564 0004 90FF      		sbrs r25,0
 4565 0006 00C0      		rjmp .L199
 324:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4566               		.loc 1 324 5 is_stmt 1 view .LVU1085
 4567 0008 9170      		andi r25,lo8(1)
 324:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 4568               		.loc 1 324 8 is_stmt 0 view .LVU1086
 4569 000a 8111      		cpse r24,__zero_reg__
 4570 000c 00C0      		rjmp .L201
 325:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4571               		.loc 1 325 9 is_stmt 1 view .LVU1087
 325:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 4572               		.loc 1 325 30 is_stmt 0 view .LVU1088
 4573 000e 9260      		ori r25,lo8(2)
 4574               	.LVL289:
 4575               	.L210:
 329:quantum/rgblight.c ****     }
 4576               		.loc 1 329 30 view .LVU1089
 4577 0010 9093 0000 		sts rgblight_config,r25
 331:quantum/rgblight.c ****     if (write_to_eeprom) {
 4578               		.loc 1 331 35 is_stmt 1 view .LVU1090
 332:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4579               		.loc 1 332 5 view .LVU1091
 332:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 4580               		.loc 1 332 8 is_stmt 0 view .LVU1092
 4581 0014 6623      		tst r22
 4582 0016 01F0      		breq .L204
 333:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4583               		.loc 1 333 9 is_stmt 1 view .LVU1093
 4584 0018 6091 0000 		lds r22,rgblight_config
 4585 001c 7091 0000 		lds r23,rgblight_config+1
 4586 0020 8091 0000 		lds r24,rgblight_config+2
 4587 0024 9091 0000 		lds r25,rgblight_config+3
 4588               	.LVL290:
 333:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 4589               		.loc 1 333 9 is_stmt 0 view .LVU1094
 4590 0028 0E94 0000 		call eeconfig_update_rgblight
 4591               	.LVL291:
 334:quantum/rgblight.c ****     } else {
 4592               		.loc 1 334 70 is_stmt 1 view .LVU1095
 4593               	.L204:
 336:quantum/rgblight.c ****     }
 4594               		.loc 1 336 72 view .LVU1096
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4595               		.loc 1 338 5 view .LVU1097
 4596               	.LBB242:
 4597               	.LBI242:
  99:quantum/rgblight.c **** 
 4598               		.loc 1 99 19 view .LVU1098
 4599               	.LBB243:
  99:quantum/rgblight.c **** 
 4600               		.loc 1 99 52 view .LVU1099
 4601               	.LBE243:
 4602               	.LBE242:
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4603               		.loc 1 338 41 is_stmt 0 view .LVU1100
 4604 002c 6091 0000 		lds r22,rgblight_config
 4605 0030 6695      		lsr r22
 4606               	.LBB245:
 4607               	.LBB244:
  99:quantum/rgblight.c **** 
 4608               		.loc 1 99 59 view .LVU1101
 4609 0032 70E0      		ldi r23,0
 4610 0034 4BE0      		ldi r20,lo8(11)
 4611 0036 50E0      		ldi r21,0
 4612 0038 80E0      		ldi r24,lo8(static_effect_table)
 4613 003a 90E0      		ldi r25,hi8(static_effect_table)
 4614 003c 0E94 0000 		call memchr
 4615               	.LVL292:
  99:quantum/rgblight.c **** 
 4616               		.loc 1 99 59 view .LVU1102
 4617               	.LBE244:
 4618               	.LBE245:
 338:quantum/rgblight.c ****         rgblight_timer_disable();
 4619               		.loc 1 338 8 view .LVU1103
 4620 0040 892B      		or r24,r25
 4621 0042 01F0      		breq .L205
 339:quantum/rgblight.c ****     } else {
 4622               		.loc 1 339 9 is_stmt 1 view .LVU1104
 4623               	.LBB246:
 4624               	.LBI246:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 4625               		.loc 1 894 6 view .LVU1105
 4626               	.LBB247:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4627               		.loc 1 895 5 view .LVU1106
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4628               		.loc 1 895 35 is_stmt 0 view .LVU1107
 4629 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 4630               		.loc 1 896 43 is_stmt 1 view .LVU1108
 4631               	.L206:
 4632               	.LBE247:
 4633               	.LBE246:
 344:quantum/rgblight.c **** #endif
 4634               		.loc 1 344 5 view .LVU1109
 344:quantum/rgblight.c **** #endif
 4635               		.loc 1 344 30 is_stmt 0 view .LVU1110
 4636 0048 81E0      		ldi r24,lo8(1)
 4637 004a 8093 0000 		sts animation_status+3,r24
 346:quantum/rgblight.c **** }
 4638               		.loc 1 346 5 is_stmt 1 view .LVU1111
 4639 004e 4091 0000 		lds r20,rgblight_config+3
 4640 0052 6091 0000 		lds r22,rgblight_config+2
 4641 0056 8091 0000 		lds r24,rgblight_config+1
 4642 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 4643               	.LVL293:
 4644               	.L201:
 326:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4645               		.loc 1 326 12 view .LVU1112
 326:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 4646               		.loc 1 326 15 is_stmt 0 view .LVU1113
 4647 005e 8B32      		cpi r24,lo8(43)
 4648 0060 00F0      		brlo .L203
 327:quantum/rgblight.c ****     } else {
 4649               		.loc 1 327 9 is_stmt 1 view .LVU1114
 327:quantum/rgblight.c ****     } else {
 4650               		.loc 1 327 30 is_stmt 0 view .LVU1115
 4651 0062 9465      		ori r25,lo8(84)
 4652 0064 00C0      		rjmp .L210
 4653               	.L203:
 329:quantum/rgblight.c ****     }
 4654               		.loc 1 329 9 is_stmt 1 view .LVU1116
 329:quantum/rgblight.c ****     }
 4655               		.loc 1 329 30 is_stmt 0 view .LVU1117
 4656 0066 880F      		lsl r24
 4657               	.LVL294:
 329:quantum/rgblight.c ****     }
 4658               		.loc 1 329 30 view .LVU1118
 4659 0068 982B      		or r25,r24
 4660 006a 00C0      		rjmp .L210
 4661               	.LVL295:
 4662               	.L205:
 341:quantum/rgblight.c ****     }
 4663               		.loc 1 341 9 is_stmt 1 view .LVU1119
 4664 006c 0E94 0000 		call rgblight_timer_enable
 4665               	.LVL296:
 4666 0070 00C0      		rjmp .L206
 4667               	.LVL297:
 4668               	.L199:
 4669               	/* epilogue start */
 347:quantum/rgblight.c **** 
 4670               		.loc 1 347 1 is_stmt 0 view .LVU1120
 4671 0072 0895      		ret
 4672               		.cfi_endproc
 4673               	.LFE109:
 4675               		.section	.text.rgblight_step_helper,"ax",@progbits
 4676               	.global	rgblight_step_helper
 4678               	rgblight_step_helper:
 4679               	.LVL298:
 4680               	.LFB102:
 291:quantum/rgblight.c ****     uint8_t mode = 0;
 4681               		.loc 1 291 49 is_stmt 1 view -0
 4682               		.cfi_startproc
 4683               	/* prologue: function */
 4684               	/* frame size = 0 */
 4685               	/* stack size = 0 */
 4686               	.L__stack_usage = 0
 291:quantum/rgblight.c ****     uint8_t mode = 0;
 4687               		.loc 1 291 49 is_stmt 0 view .LVU1122
 4688 0000 682F      		mov r22,r24
 292:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 4689               		.loc 1 292 5 is_stmt 1 view .LVU1123
 4690               	.LVL299:
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4691               		.loc 1 293 5 view .LVU1124
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4692               		.loc 1 293 35 is_stmt 0 view .LVU1125
 4693 0002 9091 0000 		lds r25,rgblight_config
 4694 0006 9695      		lsr r25
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4695               		.loc 1 293 18 view .LVU1126
 4696 0008 81E0      		ldi r24,lo8(1)
 4697               	.LVL300:
 293:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 4698               		.loc 1 293 18 view .LVU1127
 4699 000a 890F      		add r24,r25
 4700               	.LVL301:
 294:quantum/rgblight.c ****         mode = 1;
 4701               		.loc 1 294 5 is_stmt 1 view .LVU1128
 294:quantum/rgblight.c ****         mode = 1;
 4702               		.loc 1 294 8 is_stmt 0 view .LVU1129
 4703 000c 8B32      		cpi r24,lo8(43)
 4704 000e 00F0      		brlo .L212
 295:quantum/rgblight.c ****     }
 4705               		.loc 1 295 14 view .LVU1130
 4706 0010 81E0      		ldi r24,lo8(1)
 4707               	.LVL302:
 4708               	.L212:
 297:quantum/rgblight.c **** }
 4709               		.loc 1 297 5 is_stmt 1 view .LVU1131
 4710 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4711               	.LVL303:
 297:quantum/rgblight.c **** }
 4712               		.loc 1 297 5 is_stmt 0 view .LVU1132
 4713               		.cfi_endproc
 4714               	.LFE102:
 4716               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 4717               	.global	rgblight_step_noeeprom
 4719               	rgblight_step_noeeprom:
 4720               	.LFB103:
 299:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4721               		.loc 1 299 35 is_stmt 1 view -0
 4722               		.cfi_startproc
 4723               	/* prologue: function */
 4724               	/* frame size = 0 */
 4725               	/* stack size = 0 */
 4726               	.L__stack_usage = 0
 299:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 4727               		.loc 1 299 37 view .LVU1134
 4728 0000 80E0      		ldi r24,0
 4729 0002 0C94 0000 		jmp rgblight_step_helper
 4730               	.LVL304:
 4731               		.cfi_endproc
 4732               	.LFE103:
 4734               		.section	.text.rgblight_step,"ax",@progbits
 4735               	.global	rgblight_step
 4737               	rgblight_step:
 4738               	.LFB104:
 300:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4739               		.loc 1 300 26 view -0
 4740               		.cfi_startproc
 4741               	/* prologue: function */
 4742               	/* frame size = 0 */
 4743               	/* stack size = 0 */
 4744               	.L__stack_usage = 0
 300:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 4745               		.loc 1 300 28 view .LVU1136
 4746 0000 81E0      		ldi r24,lo8(1)
 4747 0002 0C94 0000 		jmp rgblight_step_helper
 4748               	.LVL305:
 4749               		.cfi_endproc
 4750               	.LFE104:
 4752               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 4753               	.global	rgblight_step_reverse_helper
 4755               	rgblight_step_reverse_helper:
 4756               	.LVL306:
 4757               	.LFB105:
 301:quantum/rgblight.c ****     uint8_t mode = 0;
 4758               		.loc 1 301 57 view -0
 4759               		.cfi_startproc
 4760               	/* prologue: function */
 4761               	/* frame size = 0 */
 4762               	/* stack size = 0 */
 4763               	.L__stack_usage = 0
 301:quantum/rgblight.c ****     uint8_t mode = 0;
 4764               		.loc 1 301 57 is_stmt 0 view .LVU1138
 4765 0000 682F      		mov r22,r24
 302:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 4766               		.loc 1 302 5 is_stmt 1 view .LVU1139
 4767               	.LVL307:
 303:quantum/rgblight.c ****     if (mode < 1) {
 4768               		.loc 1 303 5 view .LVU1140
 303:quantum/rgblight.c ****     if (mode < 1) {
 4769               		.loc 1 303 35 is_stmt 0 view .LVU1141
 4770 0002 9091 0000 		lds r25,rgblight_config
 4771 0006 9695      		lsr r25
 303:quantum/rgblight.c ****     if (mode < 1) {
 4772               		.loc 1 303 18 view .LVU1142
 4773 0008 8FEF      		ldi r24,lo8(-1)
 4774               	.LVL308:
 303:quantum/rgblight.c ****     if (mode < 1) {
 4775               		.loc 1 303 18 view .LVU1143
 4776 000a 890F      		add r24,r25
 4777               	.LVL309:
 304:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4778               		.loc 1 304 5 is_stmt 1 view .LVU1144
 304:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 4779               		.loc 1 304 8 is_stmt 0 view .LVU1145
 4780 000c 01F4      		brne .L216
 305:quantum/rgblight.c ****     }
 4781               		.loc 1 305 14 view .LVU1146
 4782 000e 8AE2      		ldi r24,lo8(42)
 4783               	.LVL310:
 4784               	.L216:
 307:quantum/rgblight.c **** }
 4785               		.loc 1 307 5 is_stmt 1 view .LVU1147
 4786 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4787               	.LVL311:
 307:quantum/rgblight.c **** }
 4788               		.loc 1 307 5 is_stmt 0 view .LVU1148
 4789               		.cfi_endproc
 4790               	.LFE105:
 4792               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 4793               	.global	rgblight_step_reverse_noeeprom
 4795               	rgblight_step_reverse_noeeprom:
 4796               	.LFB106:
 309:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4797               		.loc 1 309 43 is_stmt 1 view -0
 4798               		.cfi_startproc
 4799               	/* prologue: function */
 4800               	/* frame size = 0 */
 4801               	/* stack size = 0 */
 4802               	.L__stack_usage = 0
 309:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 4803               		.loc 1 309 45 view .LVU1150
 4804 0000 80E0      		ldi r24,0
 4805 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4806               	.LVL312:
 4807               		.cfi_endproc
 4808               	.LFE106:
 4810               		.section	.text.rgblight_step_reverse,"ax",@progbits
 4811               	.global	rgblight_step_reverse
 4813               	rgblight_step_reverse:
 4814               	.LFB107:
 310:quantum/rgblight.c **** 
 4815               		.loc 1 310 34 view -0
 4816               		.cfi_startproc
 4817               	/* prologue: function */
 4818               	/* frame size = 0 */
 4819               	/* stack size = 0 */
 4820               	.L__stack_usage = 0
 310:quantum/rgblight.c **** 
 4821               		.loc 1 310 36 view .LVU1152
 4822 0000 81E0      		ldi r24,lo8(1)
 4823 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 4824               	.LVL313:
 4825               		.cfi_endproc
 4826               	.LFE107:
 4828               		.section	.text.rgblight_mode,"ax",@progbits
 4829               	.global	rgblight_mode
 4831               	rgblight_mode:
 4832               	.LVL314:
 4833               	.LFB110:
 349:quantum/rgblight.c **** 
 4834               		.loc 1 349 34 view -0
 4835               		.cfi_startproc
 4836               	/* prologue: function */
 4837               	/* frame size = 0 */
 4838               	/* stack size = 0 */
 4839               	.L__stack_usage = 0
 349:quantum/rgblight.c **** 
 4840               		.loc 1 349 36 view .LVU1154
 4841 0000 61E0      		ldi r22,lo8(1)
 4842 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4843               	.LVL315:
 349:quantum/rgblight.c **** 
 4844               		.loc 1 349 36 is_stmt 0 view .LVU1155
 4845               		.cfi_endproc
 4846               	.LFE110:
 4848               		.section	.text.rgblight_increase,"ax",@progbits
 4849               	.global	rgblight_increase
 4851               	rgblight_increase:
 4852               	.LFB100:
 276:quantum/rgblight.c ****     uint8_t mode = 0;
 4853               		.loc 1 276 30 is_stmt 1 view -0
 4854               		.cfi_startproc
 4855               	/* prologue: function */
 4856               	/* frame size = 0 */
 4857               	/* stack size = 0 */
 4858               	.L__stack_usage = 0
 277:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4859               		.loc 1 277 5 view .LVU1157
 4860               	.LVL316:
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4861               		.loc 1 278 5 view .LVU1158
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4862               		.loc 1 278 24 is_stmt 0 view .LVU1159
 4863 0000 8091 0000 		lds r24,rgblight_config
 4864 0004 8695      		lsr r24
 278:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 4865               		.loc 1 278 8 view .LVU1160
 4866 0006 8A32      		cpi r24,lo8(42)
 4867 0008 00F4      		brsh .L222
 279:quantum/rgblight.c ****     }
 4868               		.loc 1 279 9 is_stmt 1 view .LVU1161
 279:quantum/rgblight.c ****     }
 4869               		.loc 1 279 14 is_stmt 0 view .LVU1162
 4870 000a 8F5F      		subi r24,lo8(-(1))
 4871               	.LVL317:
 4872               	.L221:
 281:quantum/rgblight.c **** }
 4873               		.loc 1 281 5 is_stmt 1 view .LVU1163
 4874 000c 0C94 0000 		jmp rgblight_mode
 4875               	.LVL318:
 4876               	.L222:
 277:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 4877               		.loc 1 277 13 is_stmt 0 view .LVU1164
 4878 0010 80E0      		ldi r24,0
 4879 0012 00C0      		rjmp .L221
 4880               		.cfi_endproc
 4881               	.LFE100:
 4883               		.section	.text.rgblight_decrease,"ax",@progbits
 4884               	.global	rgblight_decrease
 4886               	rgblight_decrease:
 4887               	.LFB101:
 283:quantum/rgblight.c ****     uint8_t mode = 0;
 4888               		.loc 1 283 30 is_stmt 1 view -0
 4889               		.cfi_startproc
 4890               	/* prologue: function */
 4891               	/* frame size = 0 */
 4892               	/* stack size = 0 */
 4893               	.L__stack_usage = 0
 284:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4894               		.loc 1 284 5 view .LVU1166
 4895               	.LVL319:
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4896               		.loc 1 286 5 view .LVU1167
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4897               		.loc 1 286 24 is_stmt 0 view .LVU1168
 4898 0000 8091 0000 		lds r24,rgblight_config
 4899 0004 8695      		lsr r24
 286:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 4900               		.loc 1 286 8 view .LVU1169
 4901 0006 8230      		cpi r24,lo8(2)
 4902 0008 00F0      		brlo .L225
 287:quantum/rgblight.c ****     }
 4903               		.loc 1 287 9 is_stmt 1 view .LVU1170
 287:quantum/rgblight.c ****     }
 4904               		.loc 1 287 14 is_stmt 0 view .LVU1171
 4905 000a 8150      		subi r24,lo8(-(-1))
 4906               	.LVL320:
 4907               	.L224:
 289:quantum/rgblight.c **** }
 4908               		.loc 1 289 5 is_stmt 1 view .LVU1172
 4909 000c 0C94 0000 		jmp rgblight_mode
 4910               	.LVL321:
 4911               	.L225:
 284:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 4912               		.loc 1 284 13 is_stmt 0 view .LVU1173
 4913 0010 80E0      		ldi r24,0
 4914 0012 00C0      		rjmp .L224
 4915               		.cfi_endproc
 4916               	.LFE101:
 4918               		.section	.text.rgblight_enable,"ax",@progbits
 4919               	.global	rgblight_enable
 4921               	rgblight_enable:
 4922               	.LFB114:
 371:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4923               		.loc 1 371 28 is_stmt 1 view -0
 4924               		.cfi_startproc
 4925               	/* prologue: function */
 4926               	/* frame size = 0 */
 4927               	/* stack size = 0 */
 4928               	.L__stack_usage = 0
 372:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4929               		.loc 1 372 5 view .LVU1175
 372:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 4930               		.loc 1 372 28 is_stmt 0 view .LVU1176
 4931 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4932 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4933 0004 8081      		ld r24,Z
 4934 0006 8160      		ori r24,lo8(1<<0)
 4935 0008 8083      		st Z,r24
 375:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 4936               		.loc 1 375 95 is_stmt 1 view .LVU1177
 376:quantum/rgblight.c **** }
 4937               		.loc 1 376 5 view .LVU1178
 4938 000a 8695      		lsr r24
 4939 000c 0C94 0000 		jmp rgblight_mode
 4940               	.LVL322:
 4941               		.cfi_endproc
 4942               	.LFE114:
 4944               		.section	.text.rgblight_toggle,"ax",@progbits
 4945               	.global	rgblight_toggle
 4947               	rgblight_toggle:
 4948               	.LFB112:
 353:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4949               		.loc 1 353 28 view -0
 4950               		.cfi_startproc
 4951               	/* prologue: function */
 4952               	/* frame size = 0 */
 4953               	/* stack size = 0 */
 4954               	.L__stack_usage = 0
 354:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4955               		.loc 1 354 96 view .LVU1180
 355:quantum/rgblight.c ****         rgblight_disable();
 4956               		.loc 1 355 5 view .LVU1181
 355:quantum/rgblight.c ****         rgblight_disable();
 4957               		.loc 1 355 9 is_stmt 0 view .LVU1182
 4958 0000 8091 0000 		lds r24,rgblight_config
 355:quantum/rgblight.c ****         rgblight_disable();
 4959               		.loc 1 355 8 view .LVU1183
 4960 0004 80FD      		sbrc r24,0
 356:quantum/rgblight.c ****     } else {
 4961               		.loc 1 356 9 is_stmt 1 view .LVU1184
 4962 0006 0C94 0000 		jmp rgblight_disable
 4963               	.LVL323:
 4964               	.L228:
 358:quantum/rgblight.c ****     }
 4965               		.loc 1 358 9 view .LVU1185
 4966 000a 0C94 0000 		jmp rgblight_enable
 4967               	.LVL324:
 4968               		.cfi_endproc
 4969               	.LFE112:
 4971               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 4972               	.global	rgblight_mode_noeeprom
 4974               	rgblight_mode_noeeprom:
 4975               	.LVL325:
 4976               	.LFB111:
 351:quantum/rgblight.c **** 
 4977               		.loc 1 351 43 view -0
 4978               		.cfi_startproc
 4979               	/* prologue: function */
 4980               	/* frame size = 0 */
 4981               	/* stack size = 0 */
 4982               	.L__stack_usage = 0
 351:quantum/rgblight.c **** 
 4983               		.loc 1 351 45 view .LVU1187
 4984 0000 60E0      		ldi r22,0
 4985 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 4986               	.LVL326:
 351:quantum/rgblight.c **** 
 4987               		.loc 1 351 45 is_stmt 0 view .LVU1188
 4988               		.cfi_endproc
 4989               	.LFE111:
 4991               		.section	.text.rgblight_init,"ax",@progbits
 4992               	.global	rgblight_init
 4994               	rgblight_init:
 4995               	.LFB96:
 217:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 4996               		.loc 1 217 26 is_stmt 1 view -0
 4997               		.cfi_startproc
 4998               	/* prologue: function */
 4999               	/* frame size = 0 */
 5000               	/* stack size = 0 */
 5001               	.L__stack_usage = 0
 221:quantum/rgblight.c ****         return;
 5002               		.loc 1 221 5 view .LVU1190
 221:quantum/rgblight.c ****         return;
 5003               		.loc 1 221 8 is_stmt 0 view .LVU1191
 5004 0000 8091 0000 		lds r24,is_rgblight_initialized
 5005 0004 8111      		cpse r24,__zero_reg__
 5006 0006 00C0      		rjmp .L230
 225:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 5007               		.loc 1 225 39 is_stmt 1 view .LVU1192
 226:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 5008               		.loc 1 226 38 view .LVU1193
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 5009               		.loc 1 227 5 view .LVU1194
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 5010               		.loc 1 227 10 is_stmt 0 view .LVU1195
 5011 0008 0E94 0000 		call eeconfig_is_enabled
 5012               	.LVL327:
 227:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 5013               		.loc 1 227 8 view .LVU1196
 5014 000c 8111      		cpse r24,__zero_reg__
 5015 000e 00C0      		rjmp .L232
 228:quantum/rgblight.c ****         eeconfig_init();
 5016               		.loc 1 228 60 is_stmt 1 view .LVU1197
 229:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 5017               		.loc 1 229 9 view .LVU1198
 5018 0010 0E94 0000 		call eeconfig_init
 5019               	.LVL328:
 230:quantum/rgblight.c ****     }
 5020               		.loc 1 230 9 view .LVU1199
 5021 0014 0E94 0000 		call eeconfig_update_rgblight_default
 5022               	.LVL329:
 5023               	.L232:
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5024               		.loc 1 232 5 view .LVU1200
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5025               		.loc 1 232 27 is_stmt 0 view .LVU1201
 5026 0018 0E94 0000 		call eeconfig_read_rgblight
 5027               	.LVL330:
 232:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5028               		.loc 1 232 25 view .LVU1202
 5029 001c 6093 0000 		sts rgblight_config,r22
 5030 0020 7093 0000 		sts rgblight_config+1,r23
 5031 0024 8093 0000 		sts rgblight_config+2,r24
 5032 0028 9093 0000 		sts rgblight_config+3,r25
 233:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 5033               		.loc 1 233 39 is_stmt 1 view .LVU1203
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5034               		.loc 1 234 5 view .LVU1204
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5035               		.loc 1 234 9 is_stmt 0 view .LVU1205
 5036 002c 6E7F      		andi r22,lo8(-2)
 234:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 5037               		.loc 1 234 8 view .LVU1206
 5038 002e 01F4      		brne .L233
 235:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 5039               		.loc 1 235 93 is_stmt 1 view .LVU1207
 236:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 5040               		.loc 1 236 9 view .LVU1208
 5041 0030 0E94 0000 		call eeconfig_update_rgblight_default
 5042               	.LVL331:
 237:quantum/rgblight.c ****     }
 5043               		.loc 1 237 9 view .LVU1209
 237:quantum/rgblight.c ****     }
 5044               		.loc 1 237 31 is_stmt 0 view .LVU1210
 5045 0034 0E94 0000 		call eeconfig_read_rgblight
 5046               	.LVL332:
 237:quantum/rgblight.c ****     }
 5047               		.loc 1 237 29 view .LVU1211
 5048 0038 6093 0000 		sts rgblight_config,r22
 5049 003c 7093 0000 		sts rgblight_config+1,r23
 5050 0040 8093 0000 		sts rgblight_config+2,r24
 5051 0044 9093 0000 		sts rgblight_config+3,r25
 5052               	.L233:
 239:quantum/rgblight.c **** 
 5053               		.loc 1 239 5 is_stmt 1 view .LVU1212
 5054 0048 0E94 0000 		call rgblight_check_config
 5055               	.LVL333:
 241:quantum/rgblight.c **** 
 5056               		.loc 1 241 5 view .LVU1213
 243:quantum/rgblight.c **** 
 5057               		.loc 1 243 5 view .LVU1214
 5058               	.LBB250:
 5059               	.LBI250:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5060               		.loc 1 894 6 view .LVU1215
 5061               	.LBB251:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5062               		.loc 1 895 5 view .LVU1216
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5063               		.loc 1 895 35 is_stmt 0 view .LVU1217
 5064 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5065               		.loc 1 896 43 is_stmt 1 view .LVU1218
 5066               	.LBE251:
 5067               	.LBE250:
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5068               		.loc 1 245 5 view .LVU1219
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5069               		.loc 1 245 9 is_stmt 0 view .LVU1220
 5070 0050 8091 0000 		lds r24,rgblight_config
 245:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5071               		.loc 1 245 8 view .LVU1221
 5072 0054 80FF      		sbrs r24,0
 5073 0056 00C0      		rjmp .L234
 246:quantum/rgblight.c ****     }
 5074               		.loc 1 246 9 is_stmt 1 view .LVU1222
 5075 0058 8695      		lsr r24
 5076 005a 0E94 0000 		call rgblight_mode_noeeprom
 5077               	.LVL334:
 5078               	.L234:
 249:quantum/rgblight.c **** }
 5079               		.loc 1 249 5 view .LVU1223
 249:quantum/rgblight.c **** }
 5080               		.loc 1 249 29 is_stmt 0 view .LVU1224
 5081 005e 81E0      		ldi r24,lo8(1)
 5082 0060 8093 0000 		sts is_rgblight_initialized,r24
 5083               	.L230:
 5084               	/* epilogue start */
 250:quantum/rgblight.c **** 
 5085               		.loc 1 250 1 view .LVU1225
 5086 0064 0895      		ret
 5087               		.cfi_endproc
 5088               	.LFE96:
 5090               		.section	.text.rgblight_reload_from_eeprom,"ax",@progbits
 5091               	.global	rgblight_reload_from_eeprom
 5093               	rgblight_reload_from_eeprom:
 5094               	.LFB97:
 252:quantum/rgblight.c ****     /* Reset back to what we have in eeprom */
 5095               		.loc 1 252 40 is_stmt 1 view -0
 5096               		.cfi_startproc
 5097               	/* prologue: function */
 5098               	/* frame size = 0 */
 5099               	/* stack size = 0 */
 5100               	.L__stack_usage = 0
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5101               		.loc 1 254 5 view .LVU1227
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5102               		.loc 1 254 27 is_stmt 0 view .LVU1228
 5103 0000 0E94 0000 		call eeconfig_read_rgblight
 5104               	.LVL335:
 254:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5105               		.loc 1 254 25 view .LVU1229
 5106 0004 6093 0000 		sts rgblight_config,r22
 5107 0008 7093 0000 		sts rgblight_config+1,r23
 5108 000c 8093 0000 		sts rgblight_config+2,r24
 5109 0010 9093 0000 		sts rgblight_config+3,r25
 255:quantum/rgblight.c ****     rgblight_check_config();
 5110               		.loc 1 255 39 is_stmt 1 view .LVU1230
 256:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 5111               		.loc 1 256 5 view .LVU1231
 5112 0014 0E94 0000 		call rgblight_check_config
 5113               	.LVL336:
 257:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5114               		.loc 1 257 5 view .LVU1232
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5115               		.loc 1 258 5 view .LVU1233
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5116               		.loc 1 258 9 is_stmt 0 view .LVU1234
 5117 0018 8091 0000 		lds r24,rgblight_config
 258:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5118               		.loc 1 258 8 view .LVU1235
 5119 001c 80FF      		sbrs r24,0
 5120 001e 00C0      		rjmp .L238
 259:quantum/rgblight.c ****     }
 5121               		.loc 1 259 9 is_stmt 1 view .LVU1236
 5122 0020 8695      		lsr r24
 5123 0022 0C94 0000 		jmp rgblight_mode_noeeprom
 5124               	.LVL337:
 5125               	.L238:
 5126               	/* epilogue start */
 261:quantum/rgblight.c **** 
 5127               		.loc 1 261 1 is_stmt 0 view .LVU1237
 5128 0026 0895      		ret
 5129               		.cfi_endproc
 5130               	.LFE97:
 5132               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 5133               	.global	rgblight_enable_noeeprom
 5135               	rgblight_enable_noeeprom:
 5136               	.LFB115:
 379:quantum/rgblight.c ****     rgblight_config.enable = 1;
 5137               		.loc 1 379 37 is_stmt 1 view -0
 5138               		.cfi_startproc
 5139               	/* prologue: function */
 5140               	/* frame size = 0 */
 5141               	/* stack size = 0 */
 5142               	.L__stack_usage = 0
 380:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5143               		.loc 1 380 5 view .LVU1239
 380:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 5144               		.loc 1 380 28 is_stmt 0 view .LVU1240
 5145 0000 E0E0      		ldi r30,lo8(rgblight_config)
 5146 0002 F0E0      		ldi r31,hi8(rgblight_config)
 5147 0004 8081      		ld r24,Z
 5148 0006 8160      		ori r24,lo8(1<<0)
 5149 0008 8083      		st Z,r24
 381:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 5150               		.loc 1 381 97 is_stmt 1 view .LVU1241
 382:quantum/rgblight.c **** }
 5151               		.loc 1 382 5 view .LVU1242
 5152 000a 8695      		lsr r24
 5153 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 5154               	.LVL338:
 5155               		.cfi_endproc
 5156               	.LFE115:
 5158               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 5159               	.global	rgblight_toggle_noeeprom
 5161               	rgblight_toggle_noeeprom:
 5162               	.LFB113:
 362:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 5163               		.loc 1 362 37 view -0
 5164               		.cfi_startproc
 5165               	/* prologue: function */
 5166               	/* frame size = 0 */
 5167               	/* stack size = 0 */
 5168               	.L__stack_usage = 0
 363:quantum/rgblight.c ****     if (rgblight_config.enable) {
 5169               		.loc 1 363 98 view .LVU1244
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5170               		.loc 1 364 5 view .LVU1245
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5171               		.loc 1 364 9 is_stmt 0 view .LVU1246
 5172 0000 8091 0000 		lds r24,rgblight_config
 364:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 5173               		.loc 1 364 8 view .LVU1247
 5174 0004 80FD      		sbrc r24,0
 365:quantum/rgblight.c ****     } else {
 5175               		.loc 1 365 9 is_stmt 1 view .LVU1248
 5176 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 5177               	.LVL339:
 5178               	.L242:
 367:quantum/rgblight.c ****     }
 5179               		.loc 1 367 9 view .LVU1249
 5180 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 5181               	.LVL340:
 5182               		.cfi_endproc
 5183               	.LFE113:
 5185               		.section	.text.rgblight_update_dword,"ax",@progbits
 5186               	.global	rgblight_update_dword
 5188               	rgblight_update_dword:
 5189               	.LVL341:
 5190               	.LFB99:
 265:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 5191               		.loc 1 265 44 view -0
 5192               		.cfi_startproc
 5193               	/* prologue: function */
 5194               	/* frame size = 0 */
 5195               	/* stack size = 0 */
 5196               	.L__stack_usage = 0
 266:quantum/rgblight.c ****     rgblight_config.raw = dword;
 5197               		.loc 1 266 39 view .LVU1251
 267:quantum/rgblight.c ****     if (rgblight_config.enable)
 5198               		.loc 1 267 5 view .LVU1252
 267:quantum/rgblight.c ****     if (rgblight_config.enable)
 5199               		.loc 1 267 25 is_stmt 0 view .LVU1253
 5200 0000 6093 0000 		sts rgblight_config,r22
 5201 0004 7093 0000 		sts rgblight_config+1,r23
 5202 0008 8093 0000 		sts rgblight_config+2,r24
 5203 000c 9093 0000 		sts rgblight_config+3,r25
 268:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5204               		.loc 1 268 5 is_stmt 1 view .LVU1254
 268:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 5205               		.loc 1 268 8 is_stmt 0 view .LVU1255
 5206 0010 60FF      		sbrs r22,0
 5207 0012 00C0      		rjmp .L244
 269:quantum/rgblight.c ****     else {
 5208               		.loc 1 269 9 is_stmt 1 view .LVU1256
 5209 0014 862F      		mov r24,r22
 5210 0016 8695      		lsr r24
 5211 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 5212               	.LVL342:
 5213               	.L244:
 271:quantum/rgblight.c ****         rgblight_set();
 5214               		.loc 1 271 9 view .LVU1257
 5215               	.LBB254:
 5216               	.LBI254:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5217               		.loc 1 894 6 view .LVU1258
 5218               	.LBB255:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5219               		.loc 1 895 5 view .LVU1259
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5220               		.loc 1 895 35 is_stmt 0 view .LVU1260
 5221 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5222               		.loc 1 896 43 is_stmt 1 view .LVU1261
 5223               	.LBE255:
 5224               	.LBE254:
 272:quantum/rgblight.c ****     }
 5225               		.loc 1 272 9 view .LVU1262
 5226 0020 0C94 0000 		jmp rgblight_set
 5227               	.LVL343:
 272:quantum/rgblight.c ****     }
 5228               		.loc 1 272 9 is_stmt 0 view .LVU1263
 5229               		.cfi_endproc
 5230               	.LFE99:
 5232               		.section	.text.rgblight_wakeup,"ax",@progbits
 5233               	.global	rgblight_wakeup
 5235               	rgblight_wakeup:
 5236               	.LFB166:
 774:quantum/rgblight.c ****     is_suspended = false;
 5237               		.loc 1 774 28 is_stmt 1 view -0
 5238               		.cfi_startproc
 5239               	/* prologue: function */
 5240               	/* frame size = 0 */
 5241               	/* stack size = 0 */
 5242               	.L__stack_usage = 0
 775:quantum/rgblight.c **** 
 5243               		.loc 1 775 5 view .LVU1265
 775:quantum/rgblight.c **** 
 5244               		.loc 1 775 18 is_stmt 0 view .LVU1266
 5245 0000 1092 0000 		sts is_suspended,__zero_reg__
 777:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 5246               		.loc 1 777 5 is_stmt 1 view .LVU1267
 777:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 5247               		.loc 1 777 8 is_stmt 0 view .LVU1268
 5248 0004 8091 0000 		lds r24,pre_suspend_enabled
 5249 0008 8111      		cpse r24,__zero_reg__
 778:quantum/rgblight.c ****     }
 5250               		.loc 1 778 9 is_stmt 1 view .LVU1269
 5251 000a 0E94 0000 		call rgblight_enable_noeeprom
 5252               	.LVL344:
 5253               	.L246:
 787:quantum/rgblight.c **** }
 5254               		.loc 1 787 5 view .LVU1270
 5255 000e 0C94 0000 		jmp rgblight_timer_enable
 5256               	.LVL345:
 5257               		.cfi_endproc
 5258               	.LFE166:
 5260               		.section	.text.rgblight_timer_disable,"ax",@progbits
 5261               	.global	rgblight_timer_disable
 5263               	rgblight_timer_disable:
 5264               	.LFB190:
 5265               		.cfi_startproc
 5266               	/* prologue: function */
 5267               	/* frame size = 0 */
 5268               	/* stack size = 0 */
 5269               	.L__stack_usage = 0
 5270 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 5271               	/* epilogue start */
 5272 0004 0895      		ret
 5273               		.cfi_endproc
 5274               	.LFE190:
 5276               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 5277               	.global	rgblight_timer_toggle
 5279               	rgblight_timer_toggle:
 5280               	.LFB172:
 911:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 5281               		.loc 1 911 34 view -0
 5282               		.cfi_startproc
 5283               	/* prologue: function */
 5284               	/* frame size = 0 */
 5285               	/* stack size = 0 */
 5286               	.L__stack_usage = 0
 912:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5287               		.loc 1 912 40 view .LVU1272
 913:quantum/rgblight.c ****         rgblight_timer_disable();
 5288               		.loc 1 913 5 view .LVU1273
 913:quantum/rgblight.c ****         rgblight_timer_disable();
 5289               		.loc 1 913 8 is_stmt 0 view .LVU1274
 5290 0000 8091 0000 		lds r24,rgblight_status+1
 5291 0004 8823      		tst r24
 5292 0006 01F0      		breq .L252
 914:quantum/rgblight.c ****     } else {
 5293               		.loc 1 914 9 is_stmt 1 view .LVU1275
 5294               	.LBB258:
 5295               	.LBI258:
 894:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 5296               		.loc 1 894 6 view .LVU1276
 5297               	.LBB259:
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5298               		.loc 1 895 5 view .LVU1277
 895:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 5299               		.loc 1 895 35 is_stmt 0 view .LVU1278
 5300 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 896:quantum/rgblight.c **** }
 5301               		.loc 1 896 43 is_stmt 1 view .LVU1279
 5302               	/* epilogue start */
 5303               	.LBE259:
 5304               	.LBE258:
 918:quantum/rgblight.c **** 
 5305               		.loc 1 918 1 is_stmt 0 view .LVU1280
 5306 000c 0895      		ret
 5307               	.L252:
 916:quantum/rgblight.c ****     }
 5308               		.loc 1 916 9 is_stmt 1 view .LVU1281
 5309 000e 0C94 0000 		jmp rgblight_timer_enable
 5310               	.LVL346:
 5311               		.cfi_endproc
 5312               	.LFE172:
 5314               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 5315               	.global	rgblight_show_solid_color
 5317               	rgblight_show_solid_color:
 5318               	.LVL347:
 5319               	.LFB173:
 920:quantum/rgblight.c ****     rgblight_enable();
 5320               		.loc 1 920 65 view -0
 5321               		.cfi_startproc
 920:quantum/rgblight.c ****     rgblight_enable();
 5322               		.loc 1 920 65 is_stmt 0 view .LVU1283
 5323 0000 1F93      		push r17
 5324               	.LCFI99:
 5325               		.cfi_def_cfa_offset 3
 5326               		.cfi_offset 17, -2
 5327 0002 CF93      		push r28
 5328               	.LCFI100:
 5329               		.cfi_def_cfa_offset 4
 5330               		.cfi_offset 28, -3
 5331 0004 DF93      		push r29
 5332               	.LCFI101:
 5333               		.cfi_def_cfa_offset 5
 5334               		.cfi_offset 29, -4
 5335               	/* prologue: function */
 5336               	/* frame size = 0 */
 5337               	/* stack size = 3 */
 5338               	.L__stack_usage = 3
 5339 0006 C82F      		mov r28,r24
 5340 0008 D62F      		mov r29,r22
 5341 000a 142F      		mov r17,r20
 921:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 5342               		.loc 1 921 5 is_stmt 1 view .LVU1284
 5343 000c 0E94 0000 		call rgblight_enable
 5344               	.LVL348:
 922:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 5345               		.loc 1 922 5 view .LVU1285
 5346 0010 81E0      		ldi r24,lo8(1)
 5347 0012 0E94 0000 		call rgblight_mode
 5348               	.LVL349:
 923:quantum/rgblight.c **** }
 5349               		.loc 1 923 5 view .LVU1286
 5350 0016 412F      		mov r20,r17
 5351 0018 6D2F      		mov r22,r29
 5352 001a 8C2F      		mov r24,r28
 5353               	/* epilogue start */
 924:quantum/rgblight.c **** 
 5354               		.loc 1 924 1 is_stmt 0 view .LVU1287
 5355 001c DF91      		pop r29
 5356               	.LVL350:
 924:quantum/rgblight.c **** 
 5357               		.loc 1 924 1 view .LVU1288
 5358 001e CF91      		pop r28
 5359               	.LVL351:
 924:quantum/rgblight.c **** 
 5360               		.loc 1 924 1 view .LVU1289
 5361 0020 1F91      		pop r17
 5362               	.LVL352:
 923:quantum/rgblight.c **** }
 5363               		.loc 1 923 5 view .LVU1290
 5364 0022 0C94 0000 		jmp rgblight_setrgb
 5365               	.LVL353:
 923:quantum/rgblight.c **** }
 5366               		.loc 1 923 5 view .LVU1291
 5367               		.cfi_endproc
 5368               	.LFE173:
 5370               		.section	.text.rgblight_task,"ax",@progbits
 5371               	.global	rgblight_task
 5373               	rgblight_task:
 5374               	.LFB175:
 938:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 5375               		.loc 1 938 26 is_stmt 1 view -0
 5376               		.cfi_startproc
 5377 0000 0F93      		push r16
 5378               	.LCFI102:
 5379               		.cfi_def_cfa_offset 3
 5380               		.cfi_offset 16, -2
 5381 0002 1F93      		push r17
 5382               	.LCFI103:
 5383               		.cfi_def_cfa_offset 4
 5384               		.cfi_offset 17, -3
 5385 0004 CF93      		push r28
 5386               	.LCFI104:
 5387               		.cfi_def_cfa_offset 5
 5388               		.cfi_offset 28, -4
 5389 0006 DF93      		push r29
 5390               	.LCFI105:
 5391               		.cfi_def_cfa_offset 6
 5392               		.cfi_offset 29, -5
 5393               	/* prologue: function */
 5394               	/* frame size = 0 */
 5395               	/* stack size = 4 */
 5396               	.L__stack_usage = 4
 939:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5397               		.loc 1 939 5 view .LVU1293
 939:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 5398               		.loc 1 939 8 is_stmt 0 view .LVU1294
 5399 0008 8091 0000 		lds r24,rgblight_status+1
 5400 000c 8823      		tst r24
 5401 000e 01F4      		brne .+2
 5402 0010 00C0      		rjmp .L256
 5403               	.LBB280:
 940:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5404               		.loc 1 940 9 is_stmt 1 view .LVU1295
 5405               	.LVL354:
 941:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5406               		.loc 1 941 9 view .LVU1296
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5407               		.loc 1 942 9 view .LVU1297
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5408               		.loc 1 942 77 is_stmt 0 view .LVU1298
 5409 0012 8091 0000 		lds r24,rgblight_status
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5410               		.loc 1 942 54 view .LVU1299
 5411 0016 E091 0000 		lds r30,rgblight_config
 5412 001a E695      		lsr r30
 942:quantum/rgblight.c ****         animation_status.delta      = delta;
 5413               		.loc 1 942 23 view .LVU1300
 5414 001c E81B      		sub r30,r24
 5415               	.LVL355:
 943:quantum/rgblight.c **** 
 5416               		.loc 1 943 9 is_stmt 1 view .LVU1301
 943:quantum/rgblight.c **** 
 5417               		.loc 1 943 37 is_stmt 0 view .LVU1302
 5418 001e E093 0000 		sts animation_status+2,r30
 946:quantum/rgblight.c ****         }
 5419               		.loc 1 946 9 is_stmt 1 view .LVU1303
 949:quantum/rgblight.c ****             // breathing mode
 5420               		.loc 1 949 14 view .LVU1304
 949:quantum/rgblight.c ****             // breathing mode
 5421               		.loc 1 949 17 is_stmt 0 view .LVU1305
 5422 0022 8230      		cpi r24,lo8(2)
 5423 0024 01F4      		brne .L259
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5424               		.loc 1 951 13 is_stmt 1 view .LVU1306
 5425               	.LVL356:
 5426               	.LBB281:
 5427               	.LBI281:
 613:quantum/rgblight.c ****     return
 5428               		.loc 1 613 16 view .LVU1307
 613:quantum/rgblight.c ****     return
 5429               		.loc 1 613 16 is_stmt 0 view .LVU1308
 5430               	.LBE281:
 5431               	.LBE280:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5432               		.loc 1 614 5 is_stmt 1 view .LVU1309
 5433               	.LBB312:
 5434               	.LBB284:
 5435               	.LBB282:
 618:quantum/rgblight.c **** }
 5436               		.loc 1 618 29 view .LVU1310
 618:quantum/rgblight.c **** }
 5437               		.loc 1 618 29 view .LVU1311
 618:quantum/rgblight.c **** }
 5438               		.loc 1 618 29 view .LVU1312
 5439               	.LBE282:
 5440               	.LBE284:
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5441               		.loc 1 951 29 is_stmt 0 view .LVU1313
 5442 0026 F0E0      		ldi r31,0
 5443 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 5444 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 5445               	.LVL357:
 5446               	.LBB285:
 5447               	.LBB283:
 618:quantum/rgblight.c **** }
 5448               		.loc 1 618 29 view .LVU1314
 5449               	/* #APP */
 5450               	 ;  618 "quantum/rgblight.c" 1
 5451 002c E491      		lpm r30, Z
 5452               		
 5453               	 ;  0 "" 2
 5454               	.LVL358:
 618:quantum/rgblight.c **** }
 5455               		.loc 1 618 29 is_stmt 1 view .LVU1315
 618:quantum/rgblight.c **** }
 5456               		.loc 1 618 29 is_stmt 0 view .LVU1316
 5457               	/* #NOAPP */
 5458               	.LBE283:
 5459               	.LBE285:
 951:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 5460               		.loc 1 951 27 view .LVU1317
 5461 002e CE2F      		mov r28,r30
 5462 0030 D0E0      		ldi r29,0
 5463               	.LVL359:
 952:quantum/rgblight.c ****         }
 5464               		.loc 1 952 13 is_stmt 1 view .LVU1318
 952:quantum/rgblight.c ****         }
 5465               		.loc 1 952 27 is_stmt 0 view .LVU1319
 5466 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 5467 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 5468               	.LVL360:
 5469               	.L260:
1009:quantum/rgblight.c ****             animation_status.restart    = false;
 5470               		.loc 1 1009 9 is_stmt 1 view .LVU1320
1009:quantum/rgblight.c ****             animation_status.restart    = false;
 5471               		.loc 1 1009 12 is_stmt 0 view .LVU1321
 5472 0036 8091 0000 		lds r24,animation_status+3
 5473 003a 8823      		tst r24
 5474 003c 01F0      		breq .L266
1010:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5475               		.loc 1 1010 13 is_stmt 1 view .LVU1322
1010:quantum/rgblight.c ****             animation_status.last_timer = sync_timer_read();
 5476               		.loc 1 1010 41 is_stmt 0 view .LVU1323
 5477 003e 1092 0000 		sts animation_status+3,__zero_reg__
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5478               		.loc 1 1011 13 is_stmt 1 view .LVU1324
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5479               		.loc 1 1011 43 is_stmt 0 view .LVU1325
 5480 0042 0E94 0000 		call timer_read
 5481               	.LVL361:
1011:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 5482               		.loc 1 1011 41 view .LVU1326
 5483 0046 9093 0000 		sts animation_status+1,r25
 5484 004a 8093 0000 		sts animation_status,r24
1012:quantum/rgblight.c ****         }
 5485               		.loc 1 1012 13 is_stmt 1 view .LVU1327
1012:quantum/rgblight.c ****         }
 5486               		.loc 1 1012 41 is_stmt 0 view .LVU1328
 5487 004e 1092 0000 		sts animation_status+4+1,__zero_reg__
 5488 0052 1092 0000 		sts animation_status+4,__zero_reg__
 5489               	.L266:
1014:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5490               		.loc 1 1014 9 is_stmt 1 view .LVU1329
1014:quantum/rgblight.c ****         if (timer_expired(now, animation_status.last_timer)) {
 5491               		.loc 1 1014 24 is_stmt 0 view .LVU1330
 5492 0056 0E94 0000 		call timer_read
 5493               	.LVL362:
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5494               		.loc 1 1015 9 is_stmt 1 view .LVU1331
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5495               		.loc 1 1015 13 is_stmt 0 view .LVU1332
 5496 005a E091 0000 		lds r30,animation_status
 5497 005e F091 0000 		lds r31,animation_status+1
 5498 0062 8E1B      		sub r24,r30
 5499 0064 9F0B      		sbc r25,r31
 5500               	.LVL363:
1015:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5501               		.loc 1 1015 12 view .LVU1333
 5502 0066 8F3F      		cpi r24,-1
 5503 0068 9F47      		sbci r25,127
 5504 006a 00F0      		brlo .+2
 5505 006c 00C0      		rjmp .L256
1030:quantum/rgblight.c ****             effect_func(&animation_status);
 5506               		.loc 1 1030 13 is_stmt 1 view .LVU1334
1030:quantum/rgblight.c ****             effect_func(&animation_status);
 5507               		.loc 1 1030 41 is_stmt 0 view .LVU1335
 5508 006e EC0F      		add r30,r28
 5509 0070 FD1F      		adc r31,r29
 5510 0072 F093 0000 		sts animation_status+1,r31
 5511 0076 E093 0000 		sts animation_status,r30
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5512               		.loc 1 1031 13 is_stmt 1 view .LVU1336
 5513 007a 80E0      		ldi r24,lo8(animation_status)
 5514 007c 90E0      		ldi r25,hi8(animation_status)
 5515 007e F801      		movw r30,r16
 5516               	/* epilogue start */
 5517               	.LBE312:
1043:quantum/rgblight.c **** 
 5518               		.loc 1 1043 1 is_stmt 0 view .LVU1337
 5519 0080 DF91      		pop r29
 5520 0082 CF91      		pop r28
 5521               	.LVL364:
1043:quantum/rgblight.c **** 
 5522               		.loc 1 1043 1 view .LVU1338
 5523 0084 1F91      		pop r17
 5524 0086 0F91      		pop r16
 5525               	.LVL365:
 5526               	.LBB313:
1031:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 5527               		.loc 1 1031 13 view .LVU1339
 5528 0088 0994      		ijmp
 5529               	.LVL366:
 5530               	.L259:
 956:quantum/rgblight.c ****             // rainbow mood mode
 5531               		.loc 1 956 14 is_stmt 1 view .LVU1340
 956:quantum/rgblight.c ****             // rainbow mood mode
 5532               		.loc 1 956 17 is_stmt 0 view .LVU1341
 5533 008a 8630      		cpi r24,lo8(6)
 5534 008c 01F4      		brne .L261
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5535               		.loc 1 958 13 is_stmt 1 view .LVU1342
 5536               	.LVL367:
 5537               	.LBB286:
 5538               	.LBI286:
 613:quantum/rgblight.c ****     return
 5539               		.loc 1 613 16 view .LVU1343
 613:quantum/rgblight.c ****     return
 5540               		.loc 1 613 16 is_stmt 0 view .LVU1344
 5541               	.LBE286:
 5542               	.LBE313:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5543               		.loc 1 614 5 is_stmt 1 view .LVU1345
 5544               	.LBB314:
 5545               	.LBB289:
 5546               	.LBB287:
 618:quantum/rgblight.c **** }
 5547               		.loc 1 618 29 view .LVU1346
 618:quantum/rgblight.c **** }
 5548               		.loc 1 618 29 view .LVU1347
 618:quantum/rgblight.c **** }
 5549               		.loc 1 618 29 view .LVU1348
 5550               	.LBE287:
 5551               	.LBE289:
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5552               		.loc 1 958 29 is_stmt 0 view .LVU1349
 5553 008e F0E0      		ldi r31,0
 5554 0090 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5555 0092 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 5556               	.LVL368:
 5557               	.LBB290:
 5558               	.LBB288:
 618:quantum/rgblight.c **** }
 5559               		.loc 1 618 29 view .LVU1350
 5560               	/* #APP */
 5561               	 ;  618 "quantum/rgblight.c" 1
 5562 0094 E491      		lpm r30, Z
 5563               		
 5564               	 ;  0 "" 2
 5565               	.LVL369:
 618:quantum/rgblight.c **** }
 5566               		.loc 1 618 29 is_stmt 1 view .LVU1351
 618:quantum/rgblight.c **** }
 5567               		.loc 1 618 29 is_stmt 0 view .LVU1352
 5568               	/* #NOAPP */
 5569               	.LBE288:
 5570               	.LBE290:
 958:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 5571               		.loc 1 958 27 view .LVU1353
 5572 0096 CE2F      		mov r28,r30
 5573 0098 D0E0      		ldi r29,0
 5574               	.LVL370:
 959:quantum/rgblight.c ****         }
 5575               		.loc 1 959 13 is_stmt 1 view .LVU1354
 959:quantum/rgblight.c ****         }
 5576               		.loc 1 959 27 is_stmt 0 view .LVU1355
 5577 009a 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 5578 009c 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 5579 009e 00C0      		rjmp .L260
 5580               	.LVL371:
 5581               	.L261:
 963:quantum/rgblight.c ****             // rainbow swirl mode
 5582               		.loc 1 963 14 is_stmt 1 view .LVU1356
 963:quantum/rgblight.c ****             // rainbow swirl mode
 5583               		.loc 1 963 17 is_stmt 0 view .LVU1357
 5584 00a0 8930      		cpi r24,lo8(9)
 5585 00a2 01F4      		brne .L262
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5586               		.loc 1 965 13 is_stmt 1 view .LVU1358
 5587               	.LVL372:
 5588               	.LBB291:
 5589               	.LBI291:
 613:quantum/rgblight.c ****     return
 5590               		.loc 1 613 16 view .LVU1359
 613:quantum/rgblight.c ****     return
 5591               		.loc 1 613 16 is_stmt 0 view .LVU1360
 5592               	.LBE291:
 5593               	.LBE314:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5594               		.loc 1 614 5 is_stmt 1 view .LVU1361
 5595               	.LBB315:
 5596               	.LBB294:
 5597               	.LBB292:
 618:quantum/rgblight.c **** }
 5598               		.loc 1 618 29 view .LVU1362
 618:quantum/rgblight.c **** }
 5599               		.loc 1 618 29 view .LVU1363
 618:quantum/rgblight.c **** }
 5600               		.loc 1 618 29 view .LVU1364
 5601               	.LBE292:
 5602               	.LBE294:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5603               		.loc 1 965 85 is_stmt 0 view .LVU1365
 5604 00a4 E695      		lsr r30
 5605               	.LVL373:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5606               		.loc 1 965 29 view .LVU1366
 5607 00a6 F0E0      		ldi r31,0
 5608 00a8 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5609 00aa F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 5610               	.LBB295:
 5611               	.LBB293:
 618:quantum/rgblight.c **** }
 5612               		.loc 1 618 29 view .LVU1367
 5613               	/* #APP */
 5614               	 ;  618 "quantum/rgblight.c" 1
 5615 00ac E491      		lpm r30, Z
 5616               		
 5617               	 ;  0 "" 2
 5618               	.LVL374:
 618:quantum/rgblight.c **** }
 5619               		.loc 1 618 29 is_stmt 1 view .LVU1368
 618:quantum/rgblight.c **** }
 5620               		.loc 1 618 29 is_stmt 0 view .LVU1369
 5621               	/* #NOAPP */
 5622               	.LBE293:
 5623               	.LBE295:
 965:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 5624               		.loc 1 965 27 view .LVU1370
 5625 00ae CE2F      		mov r28,r30
 5626 00b0 D0E0      		ldi r29,0
 5627               	.LVL375:
 966:quantum/rgblight.c ****         }
 5628               		.loc 1 966 13 is_stmt 1 view .LVU1371
 966:quantum/rgblight.c ****         }
 5629               		.loc 1 966 27 is_stmt 0 view .LVU1372
 5630 00b2 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 5631 00b4 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 5632 00b6 00C0      		rjmp .L260
 5633               	.LVL376:
 5634               	.L262:
 970:quantum/rgblight.c ****             // snake mode
 5635               		.loc 1 970 14 is_stmt 1 view .LVU1373
 970:quantum/rgblight.c ****             // snake mode
 5636               		.loc 1 970 17 is_stmt 0 view .LVU1374
 5637 00b8 8F30      		cpi r24,lo8(15)
 5638 00ba 01F4      		brne .L263
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5639               		.loc 1 972 13 is_stmt 1 view .LVU1375
 5640               	.LVL377:
 5641               	.LBB296:
 5642               	.LBI296:
 613:quantum/rgblight.c ****     return
 5643               		.loc 1 613 16 view .LVU1376
 613:quantum/rgblight.c ****     return
 5644               		.loc 1 613 16 is_stmt 0 view .LVU1377
 5645               	.LBE296:
 5646               	.LBE315:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5647               		.loc 1 614 5 is_stmt 1 view .LVU1378
 5648               	.LBB316:
 5649               	.LBB299:
 5650               	.LBB297:
 618:quantum/rgblight.c **** }
 5651               		.loc 1 618 29 view .LVU1379
 618:quantum/rgblight.c **** }
 5652               		.loc 1 618 29 view .LVU1380
 618:quantum/rgblight.c **** }
 5653               		.loc 1 618 29 view .LVU1381
 5654               	.LBE297:
 5655               	.LBE299:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5656               		.loc 1 972 77 is_stmt 0 view .LVU1382
 5657 00bc E695      		lsr r30
 5658               	.LVL378:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5659               		.loc 1 972 29 view .LVU1383
 5660 00be F0E0      		ldi r31,0
 5661 00c0 E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 5662 00c2 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 5663               	.LBB300:
 5664               	.LBB298:
 618:quantum/rgblight.c **** }
 5665               		.loc 1 618 29 view .LVU1384
 5666               	/* #APP */
 5667               	 ;  618 "quantum/rgblight.c" 1
 5668 00c4 E491      		lpm r30, Z
 5669               		
 5670               	 ;  0 "" 2
 5671               	.LVL379:
 618:quantum/rgblight.c **** }
 5672               		.loc 1 618 29 is_stmt 1 view .LVU1385
 618:quantum/rgblight.c **** }
 5673               		.loc 1 618 29 is_stmt 0 view .LVU1386
 5674               	/* #NOAPP */
 5675               	.LBE298:
 5676               	.LBE300:
 972:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 5677               		.loc 1 972 27 view .LVU1387
 5678 00c6 CE2F      		mov r28,r30
 5679 00c8 D0E0      		ldi r29,0
 5680               	.LVL380:
 973:quantum/rgblight.c ****         }
 5681               		.loc 1 973 13 is_stmt 1 view .LVU1388
 973:quantum/rgblight.c ****         }
 5682               		.loc 1 973 27 is_stmt 0 view .LVU1389
 5683 00ca 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 5684 00cc 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 5685 00ce 00C0      		rjmp .L260
 5686               	.LVL381:
 5687               	.L263:
 977:quantum/rgblight.c ****             // knight mode
 5688               		.loc 1 977 14 is_stmt 1 view .LVU1390
 977:quantum/rgblight.c ****             // knight mode
 5689               		.loc 1 977 17 is_stmt 0 view .LVU1391
 5690 00d0 8531      		cpi r24,lo8(21)
 5691 00d2 01F4      		brne .L264
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5692               		.loc 1 979 13 is_stmt 1 view .LVU1392
 5693               	.LVL382:
 5694               	.LBB301:
 5695               	.LBI301:
 613:quantum/rgblight.c ****     return
 5696               		.loc 1 613 16 view .LVU1393
 613:quantum/rgblight.c ****     return
 5697               		.loc 1 613 16 is_stmt 0 view .LVU1394
 5698               	.LBE301:
 5699               	.LBE316:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5700               		.loc 1 614 5 is_stmt 1 view .LVU1395
 5701               	.LBB317:
 5702               	.LBB304:
 5703               	.LBB302:
 618:quantum/rgblight.c **** }
 5704               		.loc 1 618 29 view .LVU1396
 618:quantum/rgblight.c **** }
 5705               		.loc 1 618 29 view .LVU1397
 618:quantum/rgblight.c **** }
 5706               		.loc 1 618 29 view .LVU1398
 5707               	.LBE302:
 5708               	.LBE304:
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5709               		.loc 1 979 29 is_stmt 0 view .LVU1399
 5710 00d4 F0E0      		ldi r31,0
 5711 00d6 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 5712 00d8 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 5713               	.LVL383:
 5714               	.LBB305:
 5715               	.LBB303:
 618:quantum/rgblight.c **** }
 5716               		.loc 1 618 29 view .LVU1400
 5717               	/* #APP */
 5718               	 ;  618 "quantum/rgblight.c" 1
 5719 00da E491      		lpm r30, Z
 5720               		
 5721               	 ;  0 "" 2
 5722               	.LVL384:
 618:quantum/rgblight.c **** }
 5723               		.loc 1 618 29 is_stmt 1 view .LVU1401
 618:quantum/rgblight.c **** }
 5724               		.loc 1 618 29 is_stmt 0 view .LVU1402
 5725               	/* #NOAPP */
 5726               	.LBE303:
 5727               	.LBE305:
 979:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 5728               		.loc 1 979 27 view .LVU1403
 5729 00dc CE2F      		mov r28,r30
 5730 00de D0E0      		ldi r29,0
 5731               	.LVL385:
 980:quantum/rgblight.c ****         }
 5732               		.loc 1 980 13 is_stmt 1 view .LVU1404
 980:quantum/rgblight.c ****         }
 5733               		.loc 1 980 27 is_stmt 0 view .LVU1405
 5734 00e0 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 5735 00e2 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 5736 00e4 00C0      		rjmp .L260
 5737               	.LVL386:
 5738               	.L264:
 984:quantum/rgblight.c ****             // christmas mode
 5739               		.loc 1 984 14 is_stmt 1 view .LVU1406
 986:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 5740               		.loc 1 986 27 is_stmt 0 view .LVU1407
 5741 00e6 C8E2      		ldi r28,lo8(40)
 5742 00e8 D0E0      		ldi r29,0
 987:quantum/rgblight.c ****         }
 5743               		.loc 1 987 27 view .LVU1408
 5744 00ea 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 5745 00ec 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 984:quantum/rgblight.c ****             // christmas mode
 5746               		.loc 1 984 17 view .LVU1409
 5747 00ee 8831      		cpi r24,lo8(24)
 5748 00f0 01F4      		brne .+2
 5749 00f2 00C0      		rjmp .L260
 991:quantum/rgblight.c ****             // RGB test mode
 5750               		.loc 1 991 14 is_stmt 1 view .LVU1410
 991:quantum/rgblight.c ****             // RGB test mode
 5751               		.loc 1 991 17 is_stmt 0 view .LVU1411
 5752 00f4 8332      		cpi r24,lo8(35)
 5753 00f6 01F4      		brne .L265
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5754               		.loc 1 993 13 is_stmt 1 view .LVU1412
 5755               	.LBB306:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5756               		.loc 1 993 29 view .LVU1413
 5757               	.LVL387:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5758               		.loc 1 993 29 view .LVU1414
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5759               		.loc 1 993 29 view .LVU1415
 5760 00f8 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 5761 00fa F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 5762               	.LVL388:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5763               		.loc 1 993 29 is_stmt 0 view .LVU1416
 5764               	/* #APP */
 5765               	 ;  993 "quantum/rgblight.c" 1
 5766 00fc C591      		lpm r28, Z+
 5767 00fe D491      		lpm r29, Z
 5768               		
 5769               	 ;  0 "" 2
 5770               	.LVL389:
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5771               		.loc 1 993 29 is_stmt 1 view .LVU1417
 993:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 5772               		.loc 1 993 29 is_stmt 0 view .LVU1418
 5773               	/* #NOAPP */
 5774               	.LBE306:
 994:quantum/rgblight.c ****         }
 5775               		.loc 1 994 13 is_stmt 1 view .LVU1419
 994:quantum/rgblight.c ****         }
 5776               		.loc 1 994 27 is_stmt 0 view .LVU1420
 5777 0100 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 5778 0102 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 5779 0104 00C0      		rjmp .L260
 5780               	.LVL390:
 5781               	.L265:
 998:quantum/rgblight.c ****             interval_time = 500;
 5782               		.loc 1 998 14 is_stmt 1 view .LVU1421
 999:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 5783               		.loc 1 999 27 is_stmt 0 view .LVU1422
 5784 0106 C4EF      		ldi r28,lo8(-12)
 5785 0108 D1E0      		ldi r29,lo8(1)
1000:quantum/rgblight.c ****         }
 5786               		.loc 1 1000 27 view .LVU1423
 5787 010a 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 5788 010c 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 998:quantum/rgblight.c ****             interval_time = 500;
 5789               		.loc 1 998 17 view .LVU1424
 5790 010e 8432      		cpi r24,lo8(36)
 5791 0110 01F4      		brne .+2
 5792 0112 00C0      		rjmp .L260
1004:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5793               		.loc 1 1004 14 is_stmt 1 view .LVU1425
 941:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 5794               		.loc 1 941 23 is_stmt 0 view .LVU1426
 5795 0114 C0ED      		ldi r28,lo8(-48)
 5796 0116 D7E0      		ldi r29,lo8(7)
 940:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 5797               		.loc 1 940 23 view .LVU1427
 5798 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 5799 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
1004:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_TWINKLE_INTERVALS[delta % 3], 5, 30);
 5800               		.loc 1 1004 17 view .LVU1428
 5801 011c 8532      		cpi r24,lo8(37)
 5802 011e 01F0      		breq .+2
 5803 0120 00C0      		rjmp .L260
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5804               		.loc 1 1005 13 is_stmt 1 view .LVU1429
 5805               	.LVL391:
 5806               	.LBB307:
 5807               	.LBI307:
 613:quantum/rgblight.c ****     return
 5808               		.loc 1 613 16 view .LVU1430
 613:quantum/rgblight.c ****     return
 5809               		.loc 1 613 16 is_stmt 0 view .LVU1431
 5810               	.LBE307:
 5811               	.LBE317:
 614:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 5812               		.loc 1 614 5 is_stmt 1 view .LVU1432
 5813               	.LBB318:
 5814               	.LBB310:
 5815               	.LBB308:
 618:quantum/rgblight.c **** }
 5816               		.loc 1 618 29 view .LVU1433
 618:quantum/rgblight.c **** }
 5817               		.loc 1 618 29 view .LVU1434
 618:quantum/rgblight.c **** }
 5818               		.loc 1 618 29 view .LVU1435
 5819               	.LBE308:
 5820               	.LBE310:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5821               		.loc 1 1005 79 is_stmt 0 view .LVU1436
 5822 0122 8E2F      		mov r24,r30
 5823 0124 63E0      		ldi r22,lo8(3)
 5824 0126 0E94 0000 		call __udivmodqi4
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5825               		.loc 1 1005 29 view .LVU1437
 5826 012a E92F      		mov r30,r25
 5827               	.LVL392:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5828               		.loc 1 1005 29 view .LVU1438
 5829 012c F0E0      		ldi r31,0
 5830 012e E050      		subi r30,lo8(-(RGBLED_TWINKLE_INTERVALS))
 5831 0130 F040      		sbci r31,hi8(-(RGBLED_TWINKLE_INTERVALS))
 5832               	.LBB311:
 5833               	.LBB309:
 618:quantum/rgblight.c **** }
 5834               		.loc 1 618 29 view .LVU1439
 5835               	/* #APP */
 5836               	 ;  618 "quantum/rgblight.c" 1
 5837 0132 E491      		lpm r30, Z
 5838               		
 5839               	 ;  0 "" 2
 5840               	.LVL393:
 618:quantum/rgblight.c **** }
 5841               		.loc 1 618 29 is_stmt 1 view .LVU1440
 618:quantum/rgblight.c **** }
 5842               		.loc 1 618 29 is_stmt 0 view .LVU1441
 5843               	/* #NOAPP */
 5844               	.LBE309:
 5845               	.LBE311:
1005:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_twinkle;
 5846               		.loc 1 1005 27 view .LVU1442
 5847 0134 CE2F      		mov r28,r30
 5848 0136 D0E0      		ldi r29,0
 5849               	.LVL394:
1006:quantum/rgblight.c ****         }
 5850               		.loc 1 1006 13 is_stmt 1 view .LVU1443
1006:quantum/rgblight.c ****         }
 5851               		.loc 1 1006 27 is_stmt 0 view .LVU1444
 5852 0138 00E0      		ldi r16,lo8(gs(rgblight_effect_twinkle))
 5853 013a 10E0      		ldi r17,hi8(gs(rgblight_effect_twinkle))
 5854 013c 00C0      		rjmp .L260
 5855               	.LVL395:
 5856               	.L256:
 5857               	/* epilogue start */
1006:quantum/rgblight.c ****         }
 5858               		.loc 1 1006 27 view .LVU1445
 5859               	.LBE318:
1043:quantum/rgblight.c **** 
 5860               		.loc 1 1043 1 view .LVU1446
 5861 013e DF91      		pop r29
 5862 0140 CF91      		pop r28
 5863 0142 1F91      		pop r17
 5864 0144 0F91      		pop r16
 5865 0146 0895      		ret
 5866               		.cfi_endproc
 5867               	.LFE175:
 5869               		.section	.bss.maxval.3477,"aw",@nobits
 5872               	maxval.3477:
 5873 0000 00        		.zero	1
 5874               		.section	.data.increment.3462,"aw"
 5877               	increment.3462:
 5878 0000 01        		.byte	1
 5879               		.section	.data.increment.3450,"aw"
 5882               	increment.3450:
 5883 0000 01        		.byte	1
 5884               		.section	.data.high_bound.3449,"aw"
 5887               	high_bound.3449:
 5888 0000 02        		.byte	2
 5889               		.section	.bss.low_bound.3448,"aw",@nobits
 5892               	low_bound.3448:
 5893 0000 00        		.zero	1
 5894               		.section	.bss.pos.3432,"aw",@nobits
 5897               	pos.3432:
 5898 0000 00        		.zero	1
 5899               		.section	.bss.led_twinkle_state,"aw",@nobits
 5902               	led_twinkle_state:
 5903 0000 0000 0000 		.zero	100
 5903      0000 0000 
 5903      0000 0000 
 5903      0000 0000 
 5903      0000 0000 
 5904               		.weak	RGBLED_TWINKLE_INTERVALS
 5905               		.section	.progmem.data.RGBLED_TWINKLE_INTERVALS,"a"
 5908               	RGBLED_TWINKLE_INTERVALS:
 5909 0000 1E        		.byte	30
 5910 0001 0F        		.byte	15
 5911 0002 05        		.byte	5
 5912               		.weak	RGBLED_RGBTEST_INTERVALS
 5913               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 5916               	RGBLED_RGBTEST_INTERVALS:
 5917 0000 0004      		.word	1024
 5918               		.weak	RGBLED_KNIGHT_INTERVALS
 5919               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 5922               	RGBLED_KNIGHT_INTERVALS:
 5923 0000 7F        		.byte	127
 5924 0001 3F        		.byte	63
 5925 0002 1F        		.byte	31
 5926               		.weak	RGBLED_SNAKE_INTERVALS
 5927               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 5930               	RGBLED_SNAKE_INTERVALS:
 5931 0000 64        		.byte	100
 5932 0001 32        		.byte	50
 5933 0002 14        		.byte	20
 5934               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 5935               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 5938               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 5939 0000 64        		.byte	100
 5940 0001 32        		.byte	50
 5941 0002 14        		.byte	20
 5942               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 5943               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 5946               	RGBLED_RAINBOW_MOOD_INTERVALS:
 5947 0000 78        		.byte	120
 5948 0001 3C        		.byte	60
 5949 0002 1E        		.byte	30
 5950               		.weak	RGBLED_BREATHING_INTERVALS
 5951               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 5954               	RGBLED_BREATHING_INTERVALS:
 5955 0000 1E        		.byte	30
 5956 0001 14        		.byte	20
 5957 0002 0A        		.byte	10
 5958 0003 05        		.byte	5
 5959               	.global	rgblight_effect_breathe_table
 5960               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 5963               	rgblight_effect_breathe_table:
 5964 0000 22        		.byte	34
 5965 0001 23        		.byte	35
 5966 0002 25        		.byte	37
 5967 0003 26        		.byte	38
 5968 0004 28        		.byte	40
 5969 0005 29        		.byte	41
 5970 0006 2A        		.byte	42
 5971 0007 2C        		.byte	44
 5972 0008 2D        		.byte	45
 5973 0009 2F        		.byte	47
 5974 000a 30        		.byte	48
 5975 000b 32        		.byte	50
 5976 000c 33        		.byte	51
 5977 000d 35        		.byte	53
 5978 000e 36        		.byte	54
 5979 000f 38        		.byte	56
 5980 0010 3A        		.byte	58
 5981 0011 3B        		.byte	59
 5982 0012 3D        		.byte	61
 5983 0013 3E        		.byte	62
 5984 0014 40        		.byte	64
 5985 0015 42        		.byte	66
 5986 0016 43        		.byte	67
 5987 0017 45        		.byte	69
 5988 0018 47        		.byte	71
 5989 0019 49        		.byte	73
 5990 001a 4A        		.byte	74
 5991 001b 4C        		.byte	76
 5992 001c 4E        		.byte	78
 5993 001d 50        		.byte	80
 5994 001e 51        		.byte	81
 5995 001f 53        		.byte	83
 5996 0020 55        		.byte	85
 5997 0021 57        		.byte	87
 5998 0022 59        		.byte	89
 5999 0023 5A        		.byte	90
 6000 0024 5C        		.byte	92
 6001 0025 5E        		.byte	94
 6002 0026 60        		.byte	96
 6003 0027 62        		.byte	98
 6004 0028 64        		.byte	100
 6005 0029 66        		.byte	102
 6006 002a 68        		.byte	104
 6007 002b 69        		.byte	105
 6008 002c 6B        		.byte	107
 6009 002d 6D        		.byte	109
 6010 002e 6F        		.byte	111
 6011 002f 71        		.byte	113
 6012 0030 73        		.byte	115
 6013 0031 75        		.byte	117
 6014 0032 77        		.byte	119
 6015 0033 79        		.byte	121
 6016 0034 7B        		.byte	123
 6017 0035 7D        		.byte	125
 6018 0036 7F        		.byte	127
 6019 0037 81        		.byte	-127
 6020 0038 83        		.byte	-125
 6021 0039 85        		.byte	-123
 6022 003a 87        		.byte	-121
 6023 003b 89        		.byte	-119
 6024 003c 8A        		.byte	-118
 6025 003d 8C        		.byte	-116
 6026 003e 8E        		.byte	-114
 6027 003f 90        		.byte	-112
 6028 0040 92        		.byte	-110
 6029 0041 94        		.byte	-108
 6030 0042 96        		.byte	-106
 6031 0043 98        		.byte	-104
 6032 0044 9A        		.byte	-102
 6033 0045 9C        		.byte	-100
 6034 0046 9E        		.byte	-98
 6035 0047 9F        		.byte	-97
 6036 0048 A1        		.byte	-95
 6037 0049 A3        		.byte	-93
 6038 004a A5        		.byte	-91
 6039 004b A7        		.byte	-89
 6040 004c A8        		.byte	-88
 6041 004d AA        		.byte	-86
 6042 004e AC        		.byte	-84
 6043 004f AE        		.byte	-82
 6044 0050 AF        		.byte	-81
 6045 0051 B1        		.byte	-79
 6046 0052 B3        		.byte	-77
 6047 0053 B4        		.byte	-76
 6048 0054 B6        		.byte	-74
 6049 0055 B8        		.byte	-72
 6050 0056 B9        		.byte	-71
 6051 0057 BB        		.byte	-69
 6052 0058 BC        		.byte	-68
 6053 0059 BE        		.byte	-66
 6054 005a BF        		.byte	-65
 6055 005b C1        		.byte	-63
 6056 005c C2        		.byte	-62
 6057 005d C3        		.byte	-61
 6058 005e C5        		.byte	-59
 6059 005f C6        		.byte	-58
 6060 0060 C7        		.byte	-57
 6061 0061 C9        		.byte	-55
 6062 0062 CA        		.byte	-54
 6063 0063 CB        		.byte	-53
 6064 0064 CC        		.byte	-52
 6065 0065 CD        		.byte	-51
 6066 0066 CE        		.byte	-50
 6067 0067 D0        		.byte	-48
 6068 0068 D1        		.byte	-47
 6069 0069 D2        		.byte	-46
 6070 006a D2        		.byte	-46
 6071 006b D3        		.byte	-45
 6072 006c D4        		.byte	-44
 6073 006d D5        		.byte	-43
 6074 006e D6        		.byte	-42
 6075 006f D7        		.byte	-41
 6076 0070 D7        		.byte	-41
 6077 0071 D8        		.byte	-40
 6078 0072 D9        		.byte	-39
 6079 0073 D9        		.byte	-39
 6080 0074 DA        		.byte	-38
 6081 0075 DA        		.byte	-38
 6082 0076 DB        		.byte	-37
 6083 0077 DB        		.byte	-37
 6084 0078 DB        		.byte	-37
 6085 0079 DC        		.byte	-36
 6086 007a DC        		.byte	-36
 6087 007b DC        		.byte	-36
 6088 007c DC        		.byte	-36
 6089 007d DC        		.byte	-36
 6090 007e DD        		.byte	-35
 6091 007f DD        		.byte	-35
 6092 0080 DD        		.byte	-35
 6093 0081 DD        		.byte	-35
 6094 0082 DC        		.byte	-36
 6095 0083 DC        		.byte	-36
 6096 0084 DC        		.byte	-36
 6097 0085 DC        		.byte	-36
 6098 0086 DC        		.byte	-36
 6099 0087 DB        		.byte	-37
 6100 0088 DB        		.byte	-37
 6101 0089 DB        		.byte	-37
 6102 008a DA        		.byte	-38
 6103 008b DA        		.byte	-38
 6104 008c D9        		.byte	-39
 6105 008d D9        		.byte	-39
 6106 008e D8        		.byte	-40
 6107 008f D7        		.byte	-41
 6108 0090 D7        		.byte	-41
 6109 0091 D6        		.byte	-42
 6110 0092 D5        		.byte	-43
 6111 0093 D4        		.byte	-44
 6112 0094 D3        		.byte	-45
 6113 0095 D2        		.byte	-46
 6114 0096 D2        		.byte	-46
 6115 0097 D1        		.byte	-47
 6116 0098 D0        		.byte	-48
 6117 0099 CE        		.byte	-50
 6118 009a CD        		.byte	-51
 6119 009b CC        		.byte	-52
 6120 009c CB        		.byte	-53
 6121 009d CA        		.byte	-54
 6122 009e C9        		.byte	-55
 6123 009f C7        		.byte	-57
 6124 00a0 C6        		.byte	-58
 6125 00a1 C5        		.byte	-59
 6126 00a2 C3        		.byte	-61
 6127 00a3 C2        		.byte	-62
 6128 00a4 C1        		.byte	-63
 6129 00a5 BF        		.byte	-65
 6130 00a6 BE        		.byte	-66
 6131 00a7 BC        		.byte	-68
 6132 00a8 BB        		.byte	-69
 6133 00a9 B9        		.byte	-71
 6134 00aa B8        		.byte	-72
 6135 00ab B6        		.byte	-74
 6136 00ac B4        		.byte	-76
 6137 00ad B3        		.byte	-77
 6138 00ae B1        		.byte	-79
 6139 00af AF        		.byte	-81
 6140 00b0 AE        		.byte	-82
 6141 00b1 AC        		.byte	-84
 6142 00b2 AA        		.byte	-86
 6143 00b3 A8        		.byte	-88
 6144 00b4 A7        		.byte	-89
 6145 00b5 A5        		.byte	-91
 6146 00b6 A3        		.byte	-93
 6147 00b7 A1        		.byte	-95
 6148 00b8 9F        		.byte	-97
 6149 00b9 9E        		.byte	-98
 6150 00ba 9C        		.byte	-100
 6151 00bb 9A        		.byte	-102
 6152 00bc 98        		.byte	-104
 6153 00bd 96        		.byte	-106
 6154 00be 94        		.byte	-108
 6155 00bf 92        		.byte	-110
 6156 00c0 90        		.byte	-112
 6157 00c1 8E        		.byte	-114
 6158 00c2 8C        		.byte	-116
 6159 00c3 8A        		.byte	-118
 6160 00c4 89        		.byte	-119
 6161 00c5 87        		.byte	-121
 6162 00c6 85        		.byte	-123
 6163 00c7 83        		.byte	-125
 6164 00c8 81        		.byte	-127
 6165 00c9 7F        		.byte	127
 6166 00ca 7D        		.byte	125
 6167 00cb 7B        		.byte	123
 6168 00cc 79        		.byte	121
 6169 00cd 77        		.byte	119
 6170 00ce 75        		.byte	117
 6171 00cf 73        		.byte	115
 6172 00d0 71        		.byte	113
 6173 00d1 6F        		.byte	111
 6174 00d2 6D        		.byte	109
 6175 00d3 6B        		.byte	107
 6176 00d4 69        		.byte	105
 6177 00d5 68        		.byte	104
 6178 00d6 66        		.byte	102
 6179 00d7 64        		.byte	100
 6180 00d8 62        		.byte	98
 6181 00d9 60        		.byte	96
 6182 00da 5E        		.byte	94
 6183 00db 5C        		.byte	92
 6184 00dc 5A        		.byte	90
 6185 00dd 59        		.byte	89
 6186 00de 57        		.byte	87
 6187 00df 55        		.byte	85
 6188 00e0 53        		.byte	83
 6189 00e1 51        		.byte	81
 6190 00e2 50        		.byte	80
 6191 00e3 4E        		.byte	78
 6192 00e4 4C        		.byte	76
 6193 00e5 4A        		.byte	74
 6194 00e6 49        		.byte	73
 6195 00e7 47        		.byte	71
 6196 00e8 45        		.byte	69
 6197 00e9 43        		.byte	67
 6198 00ea 42        		.byte	66
 6199 00eb 40        		.byte	64
 6200 00ec 3E        		.byte	62
 6201 00ed 3D        		.byte	61
 6202 00ee 3B        		.byte	59
 6203 00ef 3A        		.byte	58
 6204 00f0 38        		.byte	56
 6205 00f1 36        		.byte	54
 6206 00f2 35        		.byte	53
 6207 00f3 33        		.byte	51
 6208 00f4 32        		.byte	50
 6209 00f5 30        		.byte	48
 6210 00f6 2F        		.byte	47
 6211 00f7 2D        		.byte	45
 6212 00f8 2C        		.byte	44
 6213 00f9 2A        		.byte	42
 6214 00fa 29        		.byte	41
 6215 00fb 28        		.byte	40
 6216 00fc 26        		.byte	38
 6217 00fd 25        		.byte	37
 6218 00fe 23        		.byte	35
 6219 00ff 22        		.byte	34
 6220               	.global	rgblight_ranges
 6221               		.section	.data.rgblight_ranges,"aw"
 6224               	rgblight_ranges:
 6225 0000 00        		.byte	0
 6226 0001 14        		.byte	20
 6227 0002 00        		.byte	0
 6228 0003 14        		.byte	20
 6229 0004 14        		.byte	20
 6230               		.comm	led,60,1
 6231               	.global	animation_status
 6232               		.section	.bss.animation_status,"aw",@nobits
 6235               	animation_status:
 6236 0000 0000 0000 		.zero	6
 6236      0000 
 6237               		.section	.bss.pre_suspend_enabled,"aw",@nobits
 6240               	pre_suspend_enabled:
 6241 0000 00        		.zero	1
 6242               		.section	.bss.is_suspended,"aw",@nobits
 6245               	is_suspended:
 6246 0000 00        		.zero	1
 6247               	.global	is_rgblight_initialized
 6248               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 6251               	is_rgblight_initialized:
 6252 0000 00        		.zero	1
 6253               	.global	rgblight_status
 6254               		.section	.bss.rgblight_status,"aw",@nobits
 6257               	rgblight_status:
 6258 0000 0000      		.zero	2
 6259               		.comm	rgblight_config,5,1
 6260               		.weak	RGBLED_GRADIENT_RANGES
 6261               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 6264               	RGBLED_GRADIENT_RANGES:
 6265 0000 FF        		.byte	-1
 6266 0001 AA        		.byte	-86
 6267 0002 7F        		.byte	127
 6268 0003 55        		.byte	85
 6269 0004 40        		.byte	64
 6270               		.section	.rodata.mode_base_table,"a"
 6273               	mode_base_table:
 6274 0000 00        		.byte	0
 6275 0001 01        		.byte	1
 6276 0002 02        		.byte	2
 6277 0003 02        		.byte	2
 6278 0004 02        		.byte	2
 6279 0005 02        		.byte	2
 6280 0006 06        		.byte	6
 6281 0007 06        		.byte	6
 6282 0008 06        		.byte	6
 6283 0009 09        		.byte	9
 6284 000a 09        		.byte	9
 6285 000b 09        		.byte	9
 6286 000c 09        		.byte	9
 6287 000d 09        		.byte	9
 6288 000e 09        		.byte	9
 6289 000f 0F        		.byte	15
 6290 0010 0F        		.byte	15
 6291 0011 0F        		.byte	15
 6292 0012 0F        		.byte	15
 6293 0013 0F        		.byte	15
 6294 0014 0F        		.byte	15
 6295 0015 15        		.byte	21
 6296 0016 15        		.byte	21
 6297 0017 15        		.byte	21
 6298 0018 18        		.byte	24
 6299 0019 19        		.byte	25
 6300 001a 19        		.byte	25
 6301 001b 19        		.byte	25
 6302 001c 19        		.byte	25
 6303 001d 19        		.byte	25
 6304 001e 19        		.byte	25
 6305 001f 19        		.byte	25
 6306 0020 19        		.byte	25
 6307 0021 19        		.byte	25
 6308 0022 19        		.byte	25
 6309 0023 23        		.byte	35
 6310 0024 24        		.byte	36
 6311 0025 25        		.byte	37
 6312 0026 25        		.byte	37
 6313 0027 25        		.byte	37
 6314 0028 25        		.byte	37
 6315 0029 25        		.byte	37
 6316 002a 25        		.byte	37
 6317               		.section	.data.static_effect_table,"aw"
 6320               	static_effect_table:
 6321 0000 01        		.byte	1
 6322 0001 19        		.byte	25
 6323 0002 1A        		.byte	26
 6324 0003 1B        		.byte	27
 6325 0004 1C        		.byte	28
 6326 0005 1D        		.byte	29
 6327 0006 1E        		.byte	30
 6328 0007 1F        		.byte	31
 6329 0008 20        		.byte	32
 6330 0009 21        		.byte	33
 6331 000a 22        		.byte	34
 6332               		.text
 6333               	.Letext0:
 6334               		.file 4 "e:\\game\\msys2\\mingw64\\avr\\include\\stdint.h"
 6335               		.file 5 "e:\\game\\msys2\\mingw64\\lib\\gcc\\avr\\8.4.0\\include\\stddef.h"
 6336               		.file 6 "e:\\game\\msys2\\mingw64\\avr\\include\\stdlib.h"
 6337               		.file 7 "tmk_core/common/timer.h"
 6338               		.file 8 "./quantum/color.h"
 6339               		.file 9 "quantum/rgblight.h"
 6340               		.file 10 "tmk_core/common/debug.h"
 6341               		.file 11 "quantum/led_tables.h"
 6342               		.file 12 "./lib/lib8tion/random8.h"
 6343               		.file 13 "./lib/lib8tion/trig8.h"
 6344               		.file 14 "quantum/rgblight_breathe_table.h"
 6345               		.file 15 "e:\\game\\msys2\\mingw64\\avr\\include\\string.h"
 6346               		.file 16 "drivers/ws2812.h"
 6347               		.file 17 "tmk_core/common/eeconfig.h"
 6348               		.file 18 "e:\\game\\msys2\\mingw64\\avr\\include\\avr\\eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4      *ABS*:000000000000003f __SREG__
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:12     .text.rgblight_effect_dummy:0000000000000000 rgblight_effect_dummy
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:31     .text.rgblight_set_clipping_range:0000000000000000 rgblight_set_clipping_range
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6224   .data.rgblight_ranges:0000000000000000 rgblight_ranges
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:57     .text.rgblight_set_effect_range:0000000000000000 rgblight_set_effect_range
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:103    .text.rgblight_hsv_to_rgb:0000000000000000 rgblight_hsv_to_rgb
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:123    .text.sethsv_raw:0000000000000000 sethsv_raw
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:185    .text.sethsv:0000000000000000 sethsv
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:204    .text.setrgb:0000000000000000 setrgb
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:233    .text.rgblight_check_config:0000000000000000 rgblight_check_config
                            *COM*:0000000000000005 rgblight_config
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:276    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:296    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:347    .text.eeconfig_update_rgblight_current:0000000000000000 eeconfig_update_rgblight_current
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:368    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:410    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:434    .text.rgblight_read_dword:0000000000000000 rgblight_read_dword
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:457    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:487    .text.rgblight_is_enabled:0000000000000000 rgblight_is_enabled
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:508    .text.rgblight_increase_speed_helper:0000000000000000 rgblight_increase_speed_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:549    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:567    .text.rgblight_increase_speed_noeeprom:0000000000000000 rgblight_increase_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:585    .text.rgblight_decrease_speed_helper:0000000000000000 rgblight_decrease_speed_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:626    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:644    .text.rgblight_decrease_speed_noeeprom:0000000000000000 rgblight_decrease_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:662    .text.rgblight_get_speed:0000000000000000 rgblight_get_speed
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:681    .text.rgblight_set_speed_eeprom_helper:0000000000000000 rgblight_set_speed_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:716    .text.rgblight_set_speed:0000000000000000 rgblight_set_speed
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:736    .text.rgblight_set_speed_noeeprom:0000000000000000 rgblight_set_speed_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:756    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:775    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:794    .text.rgblight_get_val:0000000000000000 rgblight_get_val
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:813    .text.rgblight_get_hsv:0000000000000000 rgblight_get_hsv
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:838    .text.rgblight_call_driver:0000000000000000 rgblight_call_driver
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:858    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:000000000000003c led
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:935    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1005   .text.rgblight_sethsv_noeeprom_old:0000000000000000 rgblight_sethsv_noeeprom_old
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1076   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5963   .progmem.data.rgblight_effect_breathe_table:0000000000000000 rgblight_effect_breathe_table
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1150   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1197   .text.rgblight_effect_rgbtest:0000000000000000 rgblight_effect_rgbtest
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5872   .bss.maxval.3477:0000000000000000 maxval.3477
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1351   .text.rgblight_sethsv_eeprom_helper:0000000000000000 rgblight_sethsv_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6273   .rodata.mode_base_table:0000000000000000 mode_base_table
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6257   .bss.rgblight_status:0000000000000000 rgblight_status
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6264   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1694   .text.rgblight_increase_hue_helper:0000000000000000 rgblight_increase_hue_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1728   .text.rgblight_increase_hue_noeeprom:0000000000000000 rgblight_increase_hue_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1746   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1764   .text.rgblight_decrease_hue_helper:0000000000000000 rgblight_decrease_hue_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1798   .text.rgblight_decrease_hue_noeeprom:0000000000000000 rgblight_decrease_hue_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1816   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1834   .text.rgblight_increase_sat_helper:0000000000000000 rgblight_increase_sat_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1865   .text.rgblight_increase_sat_helper:000000000000000e L_1447
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1888   .text.rgblight_increase_sat_noeeprom:0000000000000000 rgblight_increase_sat_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1906   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1924   .text.rgblight_decrease_sat_helper:0000000000000000 rgblight_decrease_sat_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1954   .text.rgblight_decrease_sat_helper:000000000000000e L_1503
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1977   .text.rgblight_decrease_sat_noeeprom:0000000000000000 rgblight_decrease_sat_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:1995   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2013   .text.rgblight_increase_val_helper:0000000000000000 rgblight_increase_val_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2043   .text.rgblight_increase_val_helper:000000000000000e L_1559
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2066   .text.rgblight_increase_val_noeeprom:0000000000000000 rgblight_increase_val_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2084   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2102   .text.rgblight_decrease_val_helper:0000000000000000 rgblight_decrease_val_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2132   .text.rgblight_decrease_val_helper:000000000000000e L_1615
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2155   .text.rgblight_decrease_val_noeeprom:0000000000000000 rgblight_decrease_val_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2173   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2191   .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2211   .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2231   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2280   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2360   .text.rgblight_setrgb_range:0000000000000000 rgblight_setrgb_range
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2453   .text.rgblight_sethsv_range:0000000000000000 rgblight_sethsv_range
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2540   .text.rgblight_sethsv_master:0000000000000000 rgblight_sethsv_master
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2569   .text.rgblight_sethsv_slave:0000000000000000 rgblight_sethsv_slave
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2598   .text.rgblight_setrgb_master:0000000000000000 rgblight_setrgb_master
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2627   .text.rgblight_setrgb_slave:0000000000000000 rgblight_setrgb_slave
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2656   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:2800   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5897   .bss.pos.3432:0000000000000000 pos.3432
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:3075   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5882   .data.increment.3450:0000000000000000 increment.3450
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5892   .bss.low_bound.3448:0000000000000000 low_bound.3448
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5887   .data.high_bound.3449:0000000000000000 high_bound.3449
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:3295   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5877   .data.increment.3462:0000000000000000 increment.3462
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:3581   .text.rgblight_effect_alternating:0000000000000000 rgblight_effect_alternating
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:3740   .text.rgblight_effect_twinkle:0000000000000000 rgblight_effect_twinkle
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5902   .bss.led_twinkle_state:0000000000000000 led_twinkle_state
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4293   .text.rgblight_disable:0000000000000000 rgblight_disable
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4362   .text.rgblight_disable_noeeprom:0000000000000000 rgblight_disable_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4424   .text.rgblight_suspend:0000000000000000 rgblight_suspend
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6245   .bss.is_suspended:0000000000000000 is_suspended
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6240   .bss.pre_suspend_enabled:0000000000000000 pre_suspend_enabled
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4471   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4492   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6320   .data.static_effect_table:0000000000000000 static_effect_table
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6235   .bss.animation_status:0000000000000000 animation_status
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4551   .text.rgblight_mode_eeprom_helper:0000000000000000 rgblight_mode_eeprom_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4678   .text.rgblight_step_helper:0000000000000000 rgblight_step_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4719   .text.rgblight_step_noeeprom:0000000000000000 rgblight_step_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4737   .text.rgblight_step:0000000000000000 rgblight_step
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4755   .text.rgblight_step_reverse_helper:0000000000000000 rgblight_step_reverse_helper
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4795   .text.rgblight_step_reverse_noeeprom:0000000000000000 rgblight_step_reverse_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4813   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4831   .text.rgblight_mode:0000000000000000 rgblight_mode
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4851   .text.rgblight_increase:0000000000000000 rgblight_increase
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4886   .text.rgblight_decrease:0000000000000000 rgblight_decrease
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4921   .text.rgblight_enable:0000000000000000 rgblight_enable
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4947   .text.rgblight_toggle:0000000000000000 rgblight_toggle
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4974   .text.rgblight_mode_noeeprom:0000000000000000 rgblight_mode_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:4994   .text.rgblight_init:0000000000000000 rgblight_init
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:6251   .bss.is_rgblight_initialized:0000000000000000 is_rgblight_initialized
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5093   .text.rgblight_reload_from_eeprom:0000000000000000 rgblight_reload_from_eeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5135   .text.rgblight_enable_noeeprom:0000000000000000 rgblight_enable_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5161   .text.rgblight_toggle_noeeprom:0000000000000000 rgblight_toggle_noeeprom
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5188   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5235   .text.rgblight_wakeup:0000000000000000 rgblight_wakeup
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5263   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5279   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5317   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5373   .text.rgblight_task:0000000000000000 rgblight_task
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5954   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5946   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5938   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5930   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5922   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5916   .progmem.data.RGBLED_RGBTEST_INTERVALS:0000000000000000 RGBLED_RGBTEST_INTERVALS
C:\Users\Roningo\AppData\Local\Temp\ccV5gd1C.s:5908   .progmem.data.RGBLED_TWINKLE_INTERVALS:0000000000000000 RGBLED_TWINKLE_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
__udivmodhi4
__divmodqi4
__umulhisi3
__muluhisi3
__mulhisi3
__mulshisi3
__udivmodsi4
rand
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
__udivmodqi4
__do_copy_data
__do_clear_bss
