   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB37:
  14               		.file 1 "quantum/command.c"
   1:quantum/command.c **** /*
   2:quantum/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:quantum/command.c **** 
   4:quantum/command.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/command.c **** it under the terms of the GNU General Public License as published by
   6:quantum/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/command.c **** (at your option) any later version.
   8:quantum/command.c **** 
   9:quantum/command.c **** This program is distributed in the hope that it will be useful,
  10:quantum/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/command.c **** GNU General Public License for more details.
  13:quantum/command.c **** 
  14:quantum/command.c **** You should have received a copy of the GNU General Public License
  15:quantum/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/command.c **** */
  17:quantum/command.c **** #include <stdint.h>
  18:quantum/command.c **** #include <stdbool.h>
  19:quantum/command.c **** #include "wait.h"
  20:quantum/command.c **** #include "keycode.h"
  21:quantum/command.c **** #include "host.h"
  22:quantum/command.c **** #include "keymap.h"
  23:quantum/command.c **** #include "print.h"
  24:quantum/command.c **** #include "debug.h"
  25:quantum/command.c **** #include "util.h"
  26:quantum/command.c **** #include "timer.h"
  27:quantum/command.c **** #include "keyboard.h"
  28:quantum/command.c **** #include "bootloader.h"
  29:quantum/command.c **** #include "action_layer.h"
  30:quantum/command.c **** #include "action_util.h"
  31:quantum/command.c **** #include "eeconfig.h"
  32:quantum/command.c **** #include "sleep_led.h"
  33:quantum/command.c **** #include "led.h"
  34:quantum/command.c **** #include "command.h"
  35:quantum/command.c **** #include "quantum.h"
  36:quantum/command.c **** #include "version.h"
  37:quantum/command.c **** 
  38:quantum/command.c **** #ifdef BACKLIGHT_ENABLE
  39:quantum/command.c **** #    include "backlight.h"
  40:quantum/command.c **** #endif
  41:quantum/command.c **** 
  42:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
  43:quantum/command.c **** #    include "mousekey.h"
  44:quantum/command.c **** #endif
  45:quantum/command.c **** 
  46:quantum/command.c **** #ifdef AUDIO_ENABLE
  47:quantum/command.c **** #    include "audio.h"
  48:quantum/command.c **** #endif /* AUDIO_ENABLE */
  49:quantum/command.c **** 
  50:quantum/command.c **** static bool command_common(uint8_t code);
  51:quantum/command.c **** static void command_common_help(void);
  52:quantum/command.c **** static void print_version(void);
  53:quantum/command.c **** static void print_status(void);
  54:quantum/command.c **** static bool command_console(uint8_t code);
  55:quantum/command.c **** static void command_console_help(void);
  56:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
  57:quantum/command.c **** static bool mousekey_console(uint8_t code);
  58:quantum/command.c **** static void mousekey_console_help(void);
  59:quantum/command.c **** #endif
  60:quantum/command.c **** 
  61:quantum/command.c **** static void switch_default_layer(uint8_t layer);
  62:quantum/command.c **** 
  63:quantum/command.c **** command_state_t command_state = ONESHOT;
  64:quantum/command.c **** 
  65:quantum/command.c **** bool command_proc(uint8_t code) {
  66:quantum/command.c ****     switch (command_state) {
  67:quantum/command.c ****         case ONESHOT:
  68:quantum/command.c ****             if (!IS_COMMAND()) return false;
  69:quantum/command.c ****             return (command_extra(code) || command_common(code));
  70:quantum/command.c ****             break;
  71:quantum/command.c ****         case CONSOLE:
  72:quantum/command.c ****             if (IS_COMMAND())
  73:quantum/command.c ****                 return (command_extra(code) || command_common(code));
  74:quantum/command.c ****             else
  75:quantum/command.c ****                 return (command_console_extra(code) || command_console(code));
  76:quantum/command.c ****             break;
  77:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
  78:quantum/command.c ****         case MOUSEKEY:
  79:quantum/command.c ****             mousekey_console(code);
  80:quantum/command.c ****             break;
  81:quantum/command.c **** #endif
  82:quantum/command.c ****         default:
  83:quantum/command.c ****             command_state = ONESHOT;
  84:quantum/command.c ****             return false;
  85:quantum/command.c ****     }
  86:quantum/command.c ****     return true;
  87:quantum/command.c **** }
  88:quantum/command.c **** 
  89:quantum/command.c **** /* TODO: Refactoring is needed. */
  90:quantum/command.c **** /* This allows to define extra commands. return false when not processed. */
  91:quantum/command.c **** bool command_extra(uint8_t code) __attribute__((weak));
  92:quantum/command.c **** bool command_extra(uint8_t code) {
  93:quantum/command.c ****     (void)code;
  94:quantum/command.c ****     return false;
  95:quantum/command.c **** }
  96:quantum/command.c **** 
  97:quantum/command.c **** bool command_console_extra(uint8_t code) __attribute__((weak));
  98:quantum/command.c **** bool command_console_extra(uint8_t code) {
  99:quantum/command.c ****     (void)code;
 100:quantum/command.c ****     return false;
 101:quantum/command.c **** }
 102:quantum/command.c **** 
 103:quantum/command.c **** /***********************************************************
 104:quantum/command.c ****  * Command common
 105:quantum/command.c ****  ***********************************************************/
 106:quantum/command.c **** static void command_common_help(void) {
 107:quantum/command.c ****     print("\n\t- Magic -\n" STR(MAGIC_KEY_DEBUG) ":	Debug Message Toggle\n" STR(MAGIC_KEY_DEBUG_MAT
 108:quantum/command.c **** 
 109:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 110:quantum/command.c ****           STR(MAGIC_KEY_LAYER0) ":	Switch to Layer 0\n" STR(MAGIC_KEY_LAYER1) ":	Switch to Layer 1\
 111:quantum/command.c **** #endif
 112:quantum/command.c **** 
 113:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 114:quantum/command.c ****                                                                                                    
 115:quantum/command.c **** #endif
 116:quantum/command.c **** 
 117:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 118:quantum/command.c ****                                                                                                    
 119:quantum/command.c **** #endif
 120:quantum/command.c **** 
 121:quantum/command.c ****           STR(MAGIC_KEY_LAYER0_ALT) ":	Switch to Layer 0 (alternate)\n"
 122:quantum/command.c **** 
 123:quantum/command.c ****           STR(MAGIC_KEY_BOOTLOADER) ":	Jump to Bootloader\n" STR(MAGIC_KEY_BOOTLOADER_ALT) ":	Jump 
 124:quantum/command.c **** 
 125:quantum/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 126:quantum/command.c ****           STR(MAGIC_KEY_LOCK) ":	Lock Keyboard\n"
 127:quantum/command.c **** #endif
 128:quantum/command.c **** 
 129:quantum/command.c ****           STR(MAGIC_KEY_EEPROM) ":	Print EEPROM Settings\n" STR(MAGIC_KEY_EEPROM_CLEAR) ":	Clear EE
 130:quantum/command.c **** 
 131:quantum/command.c **** #ifdef NKRO_ENABLE
 132:quantum/command.c ****           STR(MAGIC_KEY_NKRO) ":	NKRO Toggle\n"
 133:quantum/command.c **** #endif
 134:quantum/command.c **** 
 135:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 136:quantum/command.c ****           STR(MAGIC_KEY_SLEEP_LED) ":	Sleep LED Test\n"
 137:quantum/command.c **** #endif
 138:quantum/command.c ****     );
 139:quantum/command.c **** }
 140:quantum/command.c **** 
 141:quantum/command.c **** static void print_version(void) {
 142:quantum/command.c ****     // print version & information
 143:quantum/command.c ****     print("\n\t- Version -\n");
 144:quantum/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 145:quantum/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 146:quantum/command.c ****                                                                                                 "VE
 147:quantum/command.c ****     print("BUILD:  (" __DATE__ ")\n");
 148:quantum/command.c **** #ifndef SKIP_VERSION
 149:quantum/command.c **** #    ifdef PROTOCOL_CHIBIOS
 150:quantum/command.c ****     print("CHIBIOS: " STR(CHIBIOS_VERSION) ", CONTRIB: " STR(CHIBIOS_CONTRIB_VERSION) "\n");
 151:quantum/command.c **** #    endif
 152:quantum/command.c **** #endif
 153:quantum/command.c **** 
 154:quantum/command.c ****     /* build options */
 155:quantum/command.c ****     print("OPTIONS:"
 156:quantum/command.c **** 
 157:quantum/command.c **** #ifdef PROTOCOL_LUFA
 158:quantum/command.c ****           " LUFA"
 159:quantum/command.c **** #endif
 160:quantum/command.c **** #ifdef PROTOCOL_VUSB
 161:quantum/command.c ****           " VUSB"
 162:quantum/command.c **** #endif
 163:quantum/command.c **** #ifdef BOOTMAGIC_ENABLE
 164:quantum/command.c ****           " BOOTMAGIC"
 165:quantum/command.c **** #endif
 166:quantum/command.c **** #ifdef MOUSEKEY_ENABLE
 167:quantum/command.c ****           " MOUSEKEY"
 168:quantum/command.c **** #endif
 169:quantum/command.c **** #ifdef EXTRAKEY_ENABLE
 170:quantum/command.c ****           " EXTRAKEY"
 171:quantum/command.c **** #endif
 172:quantum/command.c **** #ifdef CONSOLE_ENABLE
 173:quantum/command.c ****           " CONSOLE"
 174:quantum/command.c **** #endif
 175:quantum/command.c **** #ifdef COMMAND_ENABLE
 176:quantum/command.c ****           " COMMAND"
 177:quantum/command.c **** #endif
 178:quantum/command.c **** #ifdef NKRO_ENABLE
 179:quantum/command.c ****           " NKRO"
 180:quantum/command.c **** #endif
 181:quantum/command.c **** #ifdef LTO_ENABLE
 182:quantum/command.c ****           " LTO"
 183:quantum/command.c **** #endif
 184:quantum/command.c **** 
 185:quantum/command.c ****           " " STR(BOOTLOADER_SIZE) "\n");
 186:quantum/command.c **** 
 187:quantum/command.c ****     print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 188:quantum/command.c **** #if defined(__AVR__)
 189:quantum/command.c ****               " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__ " AVR_ARCH: avr" STR(__AVR_ARCH__)
 190:quantum/command.c **** #endif
 191:quantum/command.c ****                   "\n");
 192:quantum/command.c **** 
 193:quantum/command.c ****     return;
 194:quantum/command.c **** }
 195:quantum/command.c **** 
 196:quantum/command.c **** static void print_status(void) {
 197:quantum/command.c ****     print("\n\t- Status -\n");
 198:quantum/command.c **** 
 199:quantum/command.c ****     print_val_hex8(host_keyboard_leds());
 200:quantum/command.c **** #ifndef PROTOCOL_VUSB
 201:quantum/command.c ****     // these aren't set on the V-USB protocol, so we just ignore them for now
 202:quantum/command.c ****     print_val_hex8(keyboard_protocol);
 203:quantum/command.c ****     print_val_hex8(keyboard_idle);
 204:quantum/command.c **** #endif
 205:quantum/command.c **** #ifdef NKRO_ENABLE
 206:quantum/command.c ****     print_val_hex8(keymap_config.nkro);
 207:quantum/command.c **** #endif
 208:quantum/command.c ****     print_val_hex32(timer_read32());
 209:quantum/command.c ****     return;
 210:quantum/command.c **** }
 211:quantum/command.c **** 
 212:quantum/command.c **** static void print_eeconfig(void) {
 213:quantum/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 214:quantum/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 215:quantum/command.c **** 
 216:quantum/command.c ****     print("default_layer: ");
 217:quantum/command.c ****     print_dec(eeconfig_read_default_layer());
 218:quantum/command.c ****     print("\n");
 219:quantum/command.c **** 
 220:quantum/command.c ****     debug_config_t dc;
 221:quantum/command.c ****     dc.raw = eeconfig_read_debug();
 222:quantum/command.c ****     print("debug_config.raw: ");
 223:quantum/command.c ****     print_hex8(dc.raw);
 224:quantum/command.c ****     print("\n");
 225:quantum/command.c ****     print(".enable: ");
 226:quantum/command.c ****     print_dec(dc.enable);
 227:quantum/command.c ****     print("\n");
 228:quantum/command.c ****     print(".matrix: ");
 229:quantum/command.c ****     print_dec(dc.matrix);
 230:quantum/command.c ****     print("\n");
 231:quantum/command.c ****     print(".keyboard: ");
 232:quantum/command.c ****     print_dec(dc.keyboard);
 233:quantum/command.c ****     print("\n");
 234:quantum/command.c ****     print(".mouse: ");
 235:quantum/command.c ****     print_dec(dc.mouse);
 236:quantum/command.c ****     print("\n");
 237:quantum/command.c **** 
 238:quantum/command.c ****     keymap_config_t kc;
 239:quantum/command.c ****     kc.raw = eeconfig_read_keymap();
 240:quantum/command.c ****     print("keymap_config.raw: ");
 241:quantum/command.c ****     print_hex8(kc.raw);
 242:quantum/command.c ****     print("\n");
 243:quantum/command.c ****     print(".swap_control_capslock: ");
 244:quantum/command.c ****     print_dec(kc.swap_control_capslock);
 245:quantum/command.c ****     print("\n");
 246:quantum/command.c ****     print(".capslock_to_control: ");
 247:quantum/command.c ****     print_dec(kc.capslock_to_control);
 248:quantum/command.c ****     print("\n");
 249:quantum/command.c ****     print(".swap_lctl_lgui: ");
 250:quantum/command.c ****     print_dec(kc.swap_lctl_lgui);
 251:quantum/command.c ****     print("\n");
 252:quantum/command.c ****     print(".swap_rctl_rgui: ");
 253:quantum/command.c ****     print_dec(kc.swap_rctl_rgui);
 254:quantum/command.c ****     print("\n");
 255:quantum/command.c ****     print(".swap_lalt_lgui: ");
 256:quantum/command.c ****     print_dec(kc.swap_lalt_lgui);
 257:quantum/command.c ****     print("\n");
 258:quantum/command.c ****     print(".swap_ralt_rgui: ");
 259:quantum/command.c ****     print_dec(kc.swap_ralt_rgui);
 260:quantum/command.c ****     print("\n");
 261:quantum/command.c ****     print(".no_gui: ");
 262:quantum/command.c ****     print_dec(kc.no_gui);
 263:quantum/command.c ****     print("\n");
 264:quantum/command.c ****     print(".swap_grave_esc: ");
 265:quantum/command.c ****     print_dec(kc.swap_grave_esc);
 266:quantum/command.c ****     print("\n");
 267:quantum/command.c ****     print(".swap_backslash_backspace: ");
 268:quantum/command.c ****     print_dec(kc.swap_backslash_backspace);
 269:quantum/command.c ****     print("\n");
 270:quantum/command.c ****     print(".nkro: ");
 271:quantum/command.c ****     print_dec(kc.nkro);
 272:quantum/command.c ****     print("\n");
 273:quantum/command.c **** 
 274:quantum/command.c **** #    ifdef BACKLIGHT_ENABLE
 275:quantum/command.c ****     backlight_config_t bc;
 276:quantum/command.c ****     bc.raw = eeconfig_read_backlight();
 277:quantum/command.c ****     print("backlight_config.raw: ");
 278:quantum/command.c ****     print_hex8(bc.raw);
 279:quantum/command.c ****     print("\n");
 280:quantum/command.c ****     print(".enable: ");
 281:quantum/command.c ****     print_dec(bc.enable);
 282:quantum/command.c ****     print("\n");
 283:quantum/command.c ****     print(".level: ");
 284:quantum/command.c ****     print_dec(bc.level);
 285:quantum/command.c ****     print("\n");
 286:quantum/command.c **** #    endif /* BACKLIGHT_ENABLE */
 287:quantum/command.c **** 
 288:quantum/command.c **** #endif /* !NO_PRINT */
 289:quantum/command.c **** }
 290:quantum/command.c **** 
 291:quantum/command.c **** static bool command_common(uint8_t code) {
 292:quantum/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 293:quantum/command.c ****     static host_driver_t *host_driver = 0;
 294:quantum/command.c **** #endif
 295:quantum/command.c **** 
 296:quantum/command.c ****     switch (code) {
 297:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 298:quantum/command.c **** 
 299:quantum/command.c ****         // test breathing sleep LED
 300:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_SLEEP_LED):
 301:quantum/command.c ****             print("Sleep LED Test\n");
 302:quantum/command.c ****             sleep_led_toggle();
 303:quantum/command.c ****             led_set(host_keyboard_leds());
 304:quantum/command.c ****             break;
 305:quantum/command.c **** #endif
 306:quantum/command.c **** 
 307:quantum/command.c ****         // print stored eeprom config
 308:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM):
 309:quantum/command.c ****             print("eeconfig:\n");
 310:quantum/command.c ****             print_eeconfig();
 311:quantum/command.c ****             break;
 312:quantum/command.c **** 
 313:quantum/command.c ****         // clear eeprom
 314:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM_CLEAR):
 315:quantum/command.c ****             print("Clearing EEPROM\n");
 316:quantum/command.c ****             eeconfig_init();
 317:quantum/command.c ****             break;
 318:quantum/command.c **** 
 319:quantum/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 320:quantum/command.c **** 
 321:quantum/command.c ****         // lock/unlock keyboard
 322:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LOCK):
 323:quantum/command.c ****             if (host_get_driver()) {
 324:quantum/command.c ****                 host_driver = host_get_driver();
 325:quantum/command.c ****                 clear_keyboard();
 326:quantum/command.c ****                 host_set_driver(0);
 327:quantum/command.c ****                 print("Locked.\n");
 328:quantum/command.c ****             } else {
 329:quantum/command.c ****                 host_set_driver(host_driver);
 330:quantum/command.c ****                 print("Unlocked.\n");
 331:quantum/command.c ****             }
 332:quantum/command.c ****             break;
 333:quantum/command.c **** #endif
 334:quantum/command.c **** 
 335:quantum/command.c ****         // print help
 336:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP):
 337:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP_ALT):
 338:quantum/command.c ****             command_common_help();
 339:quantum/command.c ****             break;
 340:quantum/command.c **** 
 341:quantum/command.c ****         // activate console
 342:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_CONSOLE):
 343:quantum/command.c ****             debug_matrix   = false;
 344:quantum/command.c ****             debug_keyboard = false;
 345:quantum/command.c ****             debug_mouse    = false;
 346:quantum/command.c ****             debug_enable   = false;
 347:quantum/command.c ****             command_console_help();
 348:quantum/command.c ****             print("C> ");
 349:quantum/command.c ****             command_state = CONSOLE;
 350:quantum/command.c ****             break;
 351:quantum/command.c **** 
 352:quantum/command.c ****         // jump to bootloader
 353:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER):
 354:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER_ALT):
 355:quantum/command.c ****             print("\n\nJumping to bootloader... ");
 356:quantum/command.c ****             reset_keyboard();
 357:quantum/command.c ****             break;
 358:quantum/command.c **** 
 359:quantum/command.c ****         // debug toggle
 360:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG):
 361:quantum/command.c ****             debug_enable = !debug_enable;
 362:quantum/command.c ****             if (debug_enable) {
 363:quantum/command.c ****                 print("\ndebug: on\n");
 364:quantum/command.c ****             } else {
 365:quantum/command.c ****                 print("\ndebug: off\n");
 366:quantum/command.c ****                 debug_matrix   = false;
 367:quantum/command.c ****                 debug_keyboard = false;
 368:quantum/command.c ****                 debug_mouse    = false;
 369:quantum/command.c ****             }
 370:quantum/command.c ****             break;
 371:quantum/command.c **** 
 372:quantum/command.c ****         // debug matrix toggle
 373:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MATRIX):
 374:quantum/command.c ****             debug_matrix = !debug_matrix;
 375:quantum/command.c ****             if (debug_matrix) {
 376:quantum/command.c ****                 print("\nmatrix: on\n");
 377:quantum/command.c ****                 debug_enable = true;
 378:quantum/command.c ****             } else {
 379:quantum/command.c ****                 print("\nmatrix: off\n");
 380:quantum/command.c ****             }
 381:quantum/command.c ****             break;
 382:quantum/command.c **** 
 383:quantum/command.c ****         // debug keyboard toggle
 384:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_KBD):
 385:quantum/command.c ****             debug_keyboard = !debug_keyboard;
 386:quantum/command.c ****             if (debug_keyboard) {
 387:quantum/command.c ****                 print("\nkeyboard: on\n");
 388:quantum/command.c ****                 debug_enable = true;
 389:quantum/command.c ****             } else {
 390:quantum/command.c ****                 print("\nkeyboard: off\n");
 391:quantum/command.c ****             }
 392:quantum/command.c ****             break;
 393:quantum/command.c **** 
 394:quantum/command.c ****         // debug mouse toggle
 395:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MOUSE):
 396:quantum/command.c ****             debug_mouse = !debug_mouse;
 397:quantum/command.c ****             if (debug_mouse) {
 398:quantum/command.c ****                 print("\nmouse: on\n");
 399:quantum/command.c ****                 debug_enable = true;
 400:quantum/command.c ****             } else {
 401:quantum/command.c ****                 print("\nmouse: off\n");
 402:quantum/command.c ****             }
 403:quantum/command.c ****             break;
 404:quantum/command.c **** 
 405:quantum/command.c ****         // print version
 406:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_VERSION):
 407:quantum/command.c ****             print_version();
 408:quantum/command.c ****             break;
 409:quantum/command.c **** 
 410:quantum/command.c ****         // print status
 411:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_STATUS):
 412:quantum/command.c ****             print_status();
 413:quantum/command.c ****             break;
 414:quantum/command.c **** 
 415:quantum/command.c **** #ifdef NKRO_ENABLE
 416:quantum/command.c **** 
 417:quantum/command.c ****         // NKRO toggle
 418:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_NKRO):
 419:quantum/command.c ****             clear_keyboard();  // clear to prevent stuck keys
 420:quantum/command.c ****             keymap_config.nkro = !keymap_config.nkro;
 421:quantum/command.c ****             if (keymap_config.nkro) {
 422:quantum/command.c ****                 print("NKRO: on\n");
 423:quantum/command.c ****             } else {
 424:quantum/command.c ****                 print("NKRO: off\n");
 425:quantum/command.c ****             }
 426:quantum/command.c ****             break;
 427:quantum/command.c **** #endif
 428:quantum/command.c **** 
 429:quantum/command.c ****             // switch layers
 430:quantum/command.c **** 
 431:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER0_ALT):
 432:quantum/command.c ****             switch_default_layer(0);
 433:quantum/command.c ****             break;
 434:quantum/command.c **** 
 435:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 436:quantum/command.c **** 
 437:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER0):
 438:quantum/command.c ****             switch_default_layer(0);
 439:quantum/command.c ****             break;
 440:quantum/command.c **** 
 441:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER1):
 442:quantum/command.c ****             switch_default_layer(1);
 443:quantum/command.c ****             break;
 444:quantum/command.c **** 
 445:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER2):
 446:quantum/command.c ****             switch_default_layer(2);
 447:quantum/command.c ****             break;
 448:quantum/command.c **** 
 449:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER3):
 450:quantum/command.c ****             switch_default_layer(3);
 451:quantum/command.c ****             break;
 452:quantum/command.c **** 
 453:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER4):
 454:quantum/command.c ****             switch_default_layer(4);
 455:quantum/command.c ****             break;
 456:quantum/command.c **** 
 457:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER5):
 458:quantum/command.c ****             switch_default_layer(5);
 459:quantum/command.c ****             break;
 460:quantum/command.c **** 
 461:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER6):
 462:quantum/command.c ****             switch_default_layer(6);
 463:quantum/command.c ****             break;
 464:quantum/command.c **** 
 465:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER7):
 466:quantum/command.c ****             switch_default_layer(7);
 467:quantum/command.c ****             break;
 468:quantum/command.c **** 
 469:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER8):
 470:quantum/command.c ****             switch_default_layer(8);
 471:quantum/command.c ****             break;
 472:quantum/command.c **** 
 473:quantum/command.c ****         case MAGIC_KC(MAGIC_KEY_LAYER9):
 474:quantum/command.c ****             switch_default_layer(9);
 475:quantum/command.c ****             break;
 476:quantum/command.c **** #endif
 477:quantum/command.c **** 
 478:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 479:quantum/command.c **** 
 480:quantum/command.c ****         case KC_F1 ... KC_F9:
 481:quantum/command.c ****             switch_default_layer((code - KC_F1) + 1);
 482:quantum/command.c ****             break;
 483:quantum/command.c ****         case KC_F10:
 484:quantum/command.c ****             switch_default_layer(0);
 485:quantum/command.c ****             break;
 486:quantum/command.c **** #endif
 487:quantum/command.c **** 
 488:quantum/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 489:quantum/command.c **** 
 490:quantum/command.c ****         case KC_1 ... KC_9:
 491:quantum/command.c ****             switch_default_layer((code - KC_1) + 1);
 492:quantum/command.c ****             break;
 493:quantum/command.c ****         case KC_0:
 494:quantum/command.c ****             switch_default_layer(0);
 495:quantum/command.c ****             break;
 496:quantum/command.c **** #endif
 497:quantum/command.c **** 
 498:quantum/command.c ****         default:
 499:quantum/command.c ****             print("?");
 500:quantum/command.c ****             return false;
 501:quantum/command.c ****     }
 502:quantum/command.c ****     return true;
 503:quantum/command.c **** }
 504:quantum/command.c **** 
 505:quantum/command.c **** /***********************************************************
 506:quantum/command.c ****  * Command console
 507:quantum/command.c ****  ***********************************************************/
 508:quantum/command.c **** static void command_console_help(void) {
 509:quantum/command.c ****     print("\n\t- Console -\n"
 510:quantum/command.c ****           "ESC/q:	quit\n"
 511:quantum/command.c **** #ifdef MOUSEKEY_ENABLE
 512:quantum/command.c ****           "m:	mousekey\n"
 513:quantum/command.c **** #endif
 514:quantum/command.c ****     );
 515:quantum/command.c **** }
 516:quantum/command.c **** 
 517:quantum/command.c **** static bool command_console(uint8_t code) {
 518:quantum/command.c ****     switch (code) {
 519:quantum/command.c ****         case KC_H:
 520:quantum/command.c ****         case KC_SLASH: /* ? */
 521:quantum/command.c ****             command_console_help();
 522:quantum/command.c ****             break;
 523:quantum/command.c ****         case KC_Q:
 524:quantum/command.c ****         case KC_ESC:
 525:quantum/command.c ****             command_state = ONESHOT;
 526:quantum/command.c ****             return false;
 527:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
 528:quantum/command.c ****         case KC_M:
 529:quantum/command.c ****             mousekey_console_help();
 530:quantum/command.c ****             print("M> ");
 531:quantum/command.c ****             command_state = MOUSEKEY;
 532:quantum/command.c ****             return true;
 533:quantum/command.c **** #endif
 534:quantum/command.c ****         default:
 535:quantum/command.c ****             print("?");
 536:quantum/command.c ****             return false;
 537:quantum/command.c ****     }
 538:quantum/command.c ****     print("C> ");
 539:quantum/command.c ****     return true;
 540:quantum/command.c **** }
 541:quantum/command.c **** 
 542:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
 543:quantum/command.c **** /***********************************************************
 544:quantum/command.c ****  * Mousekey console
 545:quantum/command.c ****  ***********************************************************/
 546:quantum/command.c **** static uint8_t mousekey_param = 0;
 547:quantum/command.c **** 
 548:quantum/command.c **** static void mousekey_param_print(void) {
 549:quantum/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 550:quantum/command.c **** #    if !defined(NO_PRINT) && !defined(USER_PRINT)
 551:quantum/command.c ****     print("\n\t- Values -\n");
 552:quantum/command.c ****     print("1: delay(*10ms): ");
 553:quantum/command.c ****     print_dec(mk_delay);
 554:quantum/command.c ****     print("\n");
 555:quantum/command.c ****     print("2: interval(ms): ");
 556:quantum/command.c ****     print_dec(mk_interval);
 557:quantum/command.c ****     print("\n");
 558:quantum/command.c ****     print("3: max_speed: ");
 559:quantum/command.c ****     print_dec(mk_max_speed);
 560:quantum/command.c ****     print("\n");
 561:quantum/command.c ****     print("4: time_to_max: ");
 562:quantum/command.c ****     print_dec(mk_time_to_max);
 563:quantum/command.c ****     print("\n");
 564:quantum/command.c ****     print("5: wheel_max_speed: ");
 565:quantum/command.c ****     print_dec(mk_wheel_max_speed);
 566:quantum/command.c ****     print("\n");
 567:quantum/command.c ****     print("6: wheel_time_to_max: ");
 568:quantum/command.c ****     print_dec(mk_wheel_time_to_max);
 569:quantum/command.c ****     print("\n");
 570:quantum/command.c **** #    endif /* !NO_PRINT */
 571:quantum/command.c **** }
 572:quantum/command.c **** 
 573:quantum/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 574:quantum/command.c **** #    define PRINT_SET_VAL(v) xprintf(#    v " = %d\n", (v))
 575:quantum/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc) {
 576:quantum/command.c ****     switch (param) {
 577:quantum/command.c ****         case 1:
 578:quantum/command.c ****             if (mk_delay + inc < UINT8_MAX)
 579:quantum/command.c ****                 mk_delay += inc;
 580:quantum/command.c ****             else
 581:quantum/command.c ****                 mk_delay = UINT8_MAX;
 582:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 583:quantum/command.c ****             break;
 584:quantum/command.c ****         case 2:
 585:quantum/command.c ****             if (mk_interval + inc < UINT8_MAX)
 586:quantum/command.c ****                 mk_interval += inc;
 587:quantum/command.c ****             else
 588:quantum/command.c ****                 mk_interval = UINT8_MAX;
 589:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 590:quantum/command.c ****             break;
 591:quantum/command.c ****         case 3:
 592:quantum/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 593:quantum/command.c ****                 mk_max_speed += inc;
 594:quantum/command.c ****             else
 595:quantum/command.c ****                 mk_max_speed = UINT8_MAX;
 596:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 597:quantum/command.c ****             break;
 598:quantum/command.c ****         case 4:
 599:quantum/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 600:quantum/command.c ****                 mk_time_to_max += inc;
 601:quantum/command.c ****             else
 602:quantum/command.c ****                 mk_time_to_max = UINT8_MAX;
 603:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 604:quantum/command.c ****             break;
 605:quantum/command.c ****         case 5:
 606:quantum/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 607:quantum/command.c ****                 mk_wheel_max_speed += inc;
 608:quantum/command.c ****             else
 609:quantum/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 610:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 611:quantum/command.c ****             break;
 612:quantum/command.c ****         case 6:
 613:quantum/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 614:quantum/command.c ****                 mk_wheel_time_to_max += inc;
 615:quantum/command.c ****             else
 616:quantum/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 617:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 618:quantum/command.c ****             break;
 619:quantum/command.c ****     }
 620:quantum/command.c **** }
 621:quantum/command.c **** 
 622:quantum/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec) {
 623:quantum/command.c ****     switch (param) {
 624:quantum/command.c ****         case 1:
 625:quantum/command.c ****             if (mk_delay > dec)
 626:quantum/command.c ****                 mk_delay -= dec;
 627:quantum/command.c ****             else
 628:quantum/command.c ****                 mk_delay = 0;
 629:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 630:quantum/command.c ****             break;
 631:quantum/command.c ****         case 2:
 632:quantum/command.c ****             if (mk_interval > dec)
 633:quantum/command.c ****                 mk_interval -= dec;
 634:quantum/command.c ****             else
 635:quantum/command.c ****                 mk_interval = 0;
 636:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 637:quantum/command.c ****             break;
 638:quantum/command.c ****         case 3:
 639:quantum/command.c ****             if (mk_max_speed > dec)
 640:quantum/command.c ****                 mk_max_speed -= dec;
 641:quantum/command.c ****             else
 642:quantum/command.c ****                 mk_max_speed = 0;
 643:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 644:quantum/command.c ****             break;
 645:quantum/command.c ****         case 4:
 646:quantum/command.c ****             if (mk_time_to_max > dec)
 647:quantum/command.c ****                 mk_time_to_max -= dec;
 648:quantum/command.c ****             else
 649:quantum/command.c ****                 mk_time_to_max = 0;
 650:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 651:quantum/command.c ****             break;
 652:quantum/command.c ****         case 5:
 653:quantum/command.c ****             if (mk_wheel_max_speed > dec)
 654:quantum/command.c ****                 mk_wheel_max_speed -= dec;
 655:quantum/command.c ****             else
 656:quantum/command.c ****                 mk_wheel_max_speed = 0;
 657:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 658:quantum/command.c ****             break;
 659:quantum/command.c ****         case 6:
 660:quantum/command.c ****             if (mk_wheel_time_to_max > dec)
 661:quantum/command.c ****                 mk_wheel_time_to_max -= dec;
 662:quantum/command.c ****             else
 663:quantum/command.c ****                 mk_wheel_time_to_max = 0;
 664:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 665:quantum/command.c ****             break;
 666:quantum/command.c ****     }
 667:quantum/command.c **** }
 668:quantum/command.c **** 
 669:quantum/command.c **** static void mousekey_console_help(void) {
  15               		.loc 1 669 41 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 670:quantum/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 670 5 view .LVU1
  22               	.LBB2:
  23               		.loc 1 670 5 view .LVU2
  24               		.loc 1 670 5 view .LVU3
  25               	.LBE2:
  26 0000 80E0      		ldi r24,lo8(__c.4181)
  27 0002 90E0      		ldi r25,hi8(__c.4181)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 671:quantum/command.c ****           "ESC/q:	quit\n"
 672:quantum/command.c ****           "1:	delay(*10ms)\n"
 673:quantum/command.c ****           "2:	interval(ms)\n"
 674:quantum/command.c ****           "3:	max_speed\n"
 675:quantum/command.c ****           "4:	time_to_max\n"
 676:quantum/command.c ****           "5:	wheel_max_speed\n"
 677:quantum/command.c ****           "6:	wheel_time_to_max\n"
 678:quantum/command.c ****           "\n"
 679:quantum/command.c ****           "p:	print values\n"
 680:quantum/command.c ****           "d:	set defaults\n"
 681:quantum/command.c ****           "up:	+1\n"
 682:quantum/command.c ****           "down:	-1\n"
 683:quantum/command.c ****           "pgup:	+10\n"
 684:quantum/command.c ****           "pgdown:	-10\n"
 685:quantum/command.c ****           "\n"
 686:quantum/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 687:quantum/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n"
  30               		.loc 1 687 5 view .LVU4
  31               	.LBB3:
  32               		.loc 1 687 5 view .LVU5
  33               		.loc 1 687 5 view .LVU6
  34               	.LBE3:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.4183)
  50 0016 90E0      		ldi r25,hi8(__c.4183)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 688:quantum/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n",
 689:quantum/command.c ****             MOUSEKEY_MOVE_DELTA, MOUSEKEY_WHEEL_DELTA);
 690:quantum/command.c **** }
  59               		.loc 1 690 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE37:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB35:
 575:quantum/command.c ****     switch (param) {
  78               		.loc 1 575 60 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 576:quantum/command.c ****         case 1:
  84               		.loc 1 576 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 578:quantum/command.c ****                 mk_delay += inc;
 105               		.loc 1 578 13 view .LVU10
 578:quantum/command.c ****                 mk_delay += inc;
 106               		.loc 1 578 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 578:quantum/command.c ****                 mk_delay += inc;
 109               		.loc 1 578 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 578:quantum/command.c ****                 mk_delay += inc;
 114               		.loc 1 578 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 579:quantum/command.c ****             else
 118               		.loc 1 579 17 is_stmt 1 view .LVU14
 579:quantum/command.c ****             else
 119               		.loc 1 579 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 579:quantum/command.c ****             else
 122               		.loc 1 579 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 582:quantum/command.c ****             break;
 125               		.loc 1 582 13 is_stmt 1 view .LVU17
 126               	.LBB4:
 582:quantum/command.c ****             break;
 127               		.loc 1 582 13 view .LVU18
 582:quantum/command.c ****             break;
 128               		.loc 1 582 13 view .LVU19
 129               	.LBE4:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.4137)
 138 0046 90E0      		ldi r25,hi8(__c.4137)
 139               	.L23:
 617:quantum/command.c ****             break;
 140               		.loc 1 617 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 618:quantum/command.c ****     }
 149               		.loc 1 618 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 620:quantum/command.c **** 
 157               		.loc 1 620 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 581:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 581 17 is_stmt 1 view .LVU23
 581:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 581 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 585:quantum/command.c ****                 mk_interval += inc;
 168               		.loc 1 585 13 is_stmt 1 view .LVU25
 585:quantum/command.c ****                 mk_interval += inc;
 169               		.loc 1 585 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 585:quantum/command.c ****                 mk_interval += inc;
 172               		.loc 1 585 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 585:quantum/command.c ****                 mk_interval += inc;
 177               		.loc 1 585 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 586:quantum/command.c ****             else
 181               		.loc 1 586 17 is_stmt 1 view .LVU29
 586:quantum/command.c ****             else
 182               		.loc 1 586 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 586:quantum/command.c ****             else
 185               		.loc 1 586 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 589:quantum/command.c ****             break;
 188               		.loc 1 589 13 is_stmt 1 view .LVU32
 189               	.LBB5:
 589:quantum/command.c ****             break;
 190               		.loc 1 589 13 view .LVU33
 589:quantum/command.c ****             break;
 191               		.loc 1 589 13 view .LVU34
 192               	.LBE5:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.4141)
 202 0084 90E0      		ldi r25,hi8(__c.4141)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 588:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 588 17 view .LVU35
 588:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 588 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 592:quantum/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 592 13 is_stmt 1 view .LVU37
 592:quantum/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 592 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 592:quantum/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 592 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 592:quantum/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 592 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 593:quantum/command.c ****             else
 228               		.loc 1 593 17 is_stmt 1 view .LVU41
 593:quantum/command.c ****             else
 229               		.loc 1 593 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 593:quantum/command.c ****             else
 232               		.loc 1 593 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 596:quantum/command.c ****             break;
 235               		.loc 1 596 13 is_stmt 1 view .LVU44
 236               	.LBB6:
 596:quantum/command.c ****             break;
 237               		.loc 1 596 13 view .LVU45
 596:quantum/command.c ****             break;
 238               		.loc 1 596 13 view .LVU46
 239               	.LBE6:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.4144)
 249 00b2 90E0      		ldi r25,hi8(__c.4144)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 595:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 595 17 view .LVU47
 595:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 595 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 599:quantum/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 599 13 is_stmt 1 view .LVU49
 599:quantum/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 599 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 599:quantum/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 599 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 599:quantum/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 599 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 600:quantum/command.c ****             else
 275               		.loc 1 600 17 is_stmt 1 view .LVU53
 600:quantum/command.c ****             else
 276               		.loc 1 600 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 600:quantum/command.c ****             else
 279               		.loc 1 600 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 603:quantum/command.c ****             break;
 282               		.loc 1 603 13 is_stmt 1 view .LVU56
 283               	.LBB7:
 603:quantum/command.c ****             break;
 284               		.loc 1 603 13 view .LVU57
 603:quantum/command.c ****             break;
 285               		.loc 1 603 13 view .LVU58
 286               	.LBE7:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.4147)
 296 00e0 90E0      		ldi r25,hi8(__c.4147)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 602:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 602 17 view .LVU59
 602:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 602 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 606:quantum/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 606 13 is_stmt 1 view .LVU61
 606:quantum/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 606 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 606:quantum/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 606 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 606:quantum/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 606 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 607:quantum/command.c ****             else
 322               		.loc 1 607 17 is_stmt 1 view .LVU65
 607:quantum/command.c ****             else
 323               		.loc 1 607 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 607:quantum/command.c ****             else
 326               		.loc 1 607 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 610:quantum/command.c ****             break;
 329               		.loc 1 610 13 is_stmt 1 view .LVU68
 330               	.LBB8:
 610:quantum/command.c ****             break;
 331               		.loc 1 610 13 view .LVU69
 610:quantum/command.c ****             break;
 332               		.loc 1 610 13 view .LVU70
 333               	.LBE8:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.4150)
 343 010e 90E0      		ldi r25,hi8(__c.4150)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 609:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 609 17 view .LVU71
 609:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 609 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 613:quantum/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 613 13 is_stmt 1 view .LVU73
 613:quantum/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 613 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 613:quantum/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 613 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 613:quantum/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 613 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 614:quantum/command.c ****             else
 369               		.loc 1 614 17 is_stmt 1 view .LVU77
 614:quantum/command.c ****             else
 370               		.loc 1 614 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 614:quantum/command.c ****             else
 373               		.loc 1 614 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 617:quantum/command.c ****             break;
 376               		.loc 1 617 13 is_stmt 1 view .LVU80
 377               	.LBB9:
 617:quantum/command.c ****             break;
 378               		.loc 1 617 13 view .LVU81
 617:quantum/command.c ****             break;
 379               		.loc 1 617 13 view .LVU82
 380               	.LBE9:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.4153)
 390 013c 90E0      		ldi r25,hi8(__c.4153)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 616:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 616 17 view .LVU83
 616:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 616 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE35:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB36:
 622:quantum/command.c ****     switch (param) {
 409               		.loc 1 622 60 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 623:quantum/command.c ****         case 1:
 415               		.loc 1 623 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 625:quantum/command.c ****                 mk_delay -= dec;
 435               		.loc 1 625 13 view .LVU87
 625:quantum/command.c ****                 mk_delay -= dec;
 436               		.loc 1 625 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 625:quantum/command.c ****                 mk_delay -= dec;
 439               		.loc 1 625 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 626:quantum/command.c ****             else
 442               		.loc 1 626 17 is_stmt 1 view .LVU90
 626:quantum/command.c ****             else
 443               		.loc 1 626 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 629:quantum/command.c ****             break;
 447               		.loc 1 629 13 is_stmt 1 view .LVU92
 448               	.LBB10:
 629:quantum/command.c ****             break;
 449               		.loc 1 629 13 view .LVU93
 629:quantum/command.c ****             break;
 450               		.loc 1 629 13 view .LVU94
 451               	.LBE10:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.4160)
 460 003a 90E0      		ldi r25,hi8(__c.4160)
 461               	.L45:
 664:quantum/command.c ****             break;
 462               		.loc 1 664 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 665:quantum/command.c ****     }
 471               		.loc 1 665 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 667:quantum/command.c **** 
 479               		.loc 1 667 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 628:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 628 17 is_stmt 1 view .LVU98
 628:quantum/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 628 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 632:quantum/command.c ****                 mk_interval -= dec;
 489               		.loc 1 632 13 is_stmt 1 view .LVU100
 632:quantum/command.c ****                 mk_interval -= dec;
 490               		.loc 1 632 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 632:quantum/command.c ****                 mk_interval -= dec;
 493               		.loc 1 632 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 633:quantum/command.c ****             else
 496               		.loc 1 633 17 is_stmt 1 view .LVU103
 633:quantum/command.c ****             else
 497               		.loc 1 633 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 636:quantum/command.c ****             break;
 501               		.loc 1 636 13 is_stmt 1 view .LVU105
 502               	.LBB11:
 636:quantum/command.c ****             break;
 503               		.loc 1 636 13 view .LVU106
 636:quantum/command.c ****             break;
 504               		.loc 1 636 13 view .LVU107
 505               	.LBE11:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.4164)
 515 006c 90E0      		ldi r25,hi8(__c.4164)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 635:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 635 17 view .LVU108
 635:quantum/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 635 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 639:quantum/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 639 13 is_stmt 1 view .LVU110
 639:quantum/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 639 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 639:quantum/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 639 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 640:quantum/command.c ****             else
 533               		.loc 1 640 17 is_stmt 1 view .LVU113
 640:quantum/command.c ****             else
 534               		.loc 1 640 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 643:quantum/command.c ****             break;
 538               		.loc 1 643 13 is_stmt 1 view .LVU115
 539               	.LBB12:
 643:quantum/command.c ****             break;
 540               		.loc 1 643 13 view .LVU116
 643:quantum/command.c ****             break;
 541               		.loc 1 643 13 view .LVU117
 542               	.LBE12:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.4167)
 552 008e 90E0      		ldi r25,hi8(__c.4167)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 642:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 642 17 view .LVU118
 642:quantum/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 642 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 646:quantum/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 646 13 is_stmt 1 view .LVU120
 646:quantum/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 646 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 646:quantum/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 646 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 647:quantum/command.c ****             else
 570               		.loc 1 647 17 is_stmt 1 view .LVU123
 647:quantum/command.c ****             else
 571               		.loc 1 647 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 650:quantum/command.c ****             break;
 575               		.loc 1 650 13 is_stmt 1 view .LVU125
 576               	.LBB13:
 650:quantum/command.c ****             break;
 577               		.loc 1 650 13 view .LVU126
 650:quantum/command.c ****             break;
 578               		.loc 1 650 13 view .LVU127
 579               	.LBE13:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.4170)
 589 00b0 90E0      		ldi r25,hi8(__c.4170)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 649:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 649 17 view .LVU128
 649:quantum/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 649 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 653:quantum/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 653 13 is_stmt 1 view .LVU130
 653:quantum/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 653 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 653:quantum/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 653 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 654:quantum/command.c ****             else
 607               		.loc 1 654 17 is_stmt 1 view .LVU133
 654:quantum/command.c ****             else
 608               		.loc 1 654 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 657:quantum/command.c ****             break;
 612               		.loc 1 657 13 is_stmt 1 view .LVU135
 613               	.LBB14:
 657:quantum/command.c ****             break;
 614               		.loc 1 657 13 view .LVU136
 657:quantum/command.c ****             break;
 615               		.loc 1 657 13 view .LVU137
 616               	.LBE14:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.4173)
 626 00d2 90E0      		ldi r25,hi8(__c.4173)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 656:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 656 17 view .LVU138
 656:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 656 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 660:quantum/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 660 13 is_stmt 1 view .LVU140
 660:quantum/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 660 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 660:quantum/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 660 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 661:quantum/command.c ****             else
 644               		.loc 1 661 17 is_stmt 1 view .LVU143
 661:quantum/command.c ****             else
 645               		.loc 1 661 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 664:quantum/command.c ****             break;
 649               		.loc 1 664 13 is_stmt 1 view .LVU145
 650               	.LBB15:
 664:quantum/command.c ****             break;
 651               		.loc 1 664 13 view .LVU146
 664:quantum/command.c ****             break;
 652               		.loc 1 664 13 view .LVU147
 653               	.LBE15:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.4176)
 663 00f4 90E0      		ldi r25,hi8(__c.4176)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 663:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 663 17 view .LVU148
 663:quantum/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 663 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE36:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB40:
 691:quantum/command.c **** 
 692:quantum/command.c **** static bool mousekey_console(uint8_t code) {
 693:quantum/command.c ****     switch (code) {
 694:quantum/command.c ****         case KC_H:
 695:quantum/command.c ****         case KC_SLASH: /* ? */
 696:quantum/command.c ****             mousekey_console_help();
 697:quantum/command.c ****             break;
 698:quantum/command.c ****         case KC_Q:
 699:quantum/command.c ****         case KC_ESC:
 700:quantum/command.c ****             if (mousekey_param) {
 701:quantum/command.c ****                 mousekey_param = 0;
 702:quantum/command.c ****             } else {
 703:quantum/command.c ****                 print("C> ");
 704:quantum/command.c ****                 command_state = CONSOLE;
 705:quantum/command.c ****                 return false;
 706:quantum/command.c ****             }
 707:quantum/command.c ****             break;
 708:quantum/command.c ****         case KC_P:
 709:quantum/command.c ****             mousekey_param_print();
 710:quantum/command.c ****             break;
 711:quantum/command.c ****         case KC_1:
 712:quantum/command.c ****         case KC_2:
 713:quantum/command.c ****         case KC_3:
 714:quantum/command.c ****         case KC_4:
 715:quantum/command.c ****         case KC_5:
 716:quantum/command.c ****         case KC_6:
 717:quantum/command.c ****             mousekey_param = numkey2num(code);
 718:quantum/command.c ****             break;
 719:quantum/command.c ****         case KC_UP:
 720:quantum/command.c ****             mousekey_param_inc(mousekey_param, 1);
 721:quantum/command.c ****             break;
 722:quantum/command.c ****         case KC_DOWN:
 723:quantum/command.c ****             mousekey_param_dec(mousekey_param, 1);
 724:quantum/command.c ****             break;
 725:quantum/command.c ****         case KC_PGUP:
 726:quantum/command.c ****             mousekey_param_inc(mousekey_param, 10);
 727:quantum/command.c ****             break;
 728:quantum/command.c ****         case KC_PGDN:
 729:quantum/command.c ****             mousekey_param_dec(mousekey_param, 10);
 730:quantum/command.c ****             break;
 731:quantum/command.c ****         case KC_D:
 732:quantum/command.c ****             mk_delay             = MOUSEKEY_DELAY / 10;
 733:quantum/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 734:quantum/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 735:quantum/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 736:quantum/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 737:quantum/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 738:quantum/command.c ****             print("set default\n");
 739:quantum/command.c ****             break;
 740:quantum/command.c ****         default:
 741:quantum/command.c ****             print("?");
 742:quantum/command.c ****             return false;
 743:quantum/command.c ****     }
 744:quantum/command.c ****     if (mousekey_param) {
 745:quantum/command.c ****         xprintf("M%d> ", mousekey_param);
 746:quantum/command.c ****     } else {
 747:quantum/command.c ****         print("M>");
 748:quantum/command.c ****     }
 749:quantum/command.c ****     return true;
 750:quantum/command.c **** }
 751:quantum/command.c **** #endif
 752:quantum/command.c **** 
 753:quantum/command.c **** /***********************************************************
 754:quantum/command.c ****  * Utilities
 755:quantum/command.c ****  ***********************************************************/
 756:quantum/command.c **** uint8_t numkey2num(uint8_t code) {
 757:quantum/command.c ****     switch (code) {
 758:quantum/command.c ****         case KC_1:
 759:quantum/command.c ****             return 1;
 760:quantum/command.c ****         case KC_2:
 761:quantum/command.c ****             return 2;
 762:quantum/command.c ****         case KC_3:
 763:quantum/command.c ****             return 3;
 764:quantum/command.c ****         case KC_4:
 765:quantum/command.c ****             return 4;
 766:quantum/command.c ****         case KC_5:
 767:quantum/command.c ****             return 5;
 768:quantum/command.c ****         case KC_6:
 769:quantum/command.c ****             return 6;
 770:quantum/command.c ****         case KC_7:
 771:quantum/command.c ****             return 7;
 772:quantum/command.c ****         case KC_8:
 773:quantum/command.c ****             return 8;
 774:quantum/command.c ****         case KC_9:
 775:quantum/command.c ****             return 9;
 776:quantum/command.c ****         case KC_0:
 777:quantum/command.c ****             return 0;
 778:quantum/command.c ****     }
 779:quantum/command.c ****     return 0;
 780:quantum/command.c **** }
 781:quantum/command.c **** 
 782:quantum/command.c **** static void switch_default_layer(uint8_t layer) {
 680               		.loc 1 782 49 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 782 49 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 783:quantum/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 783 5 is_stmt 1 view .LVU152
 693               	.LBB16:
 694               		.loc 1 783 5 view .LVU153
 695               		.loc 1 783 5 view .LVU154
 696               	.LBE16:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.4232)
 704 000a 90E0      		ldi r25,hi8(__c.4232)
 705               	.LVL42:
 706               		.loc 1 783 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 784:quantum/command.c ****     default_layer_set(1UL << layer);
 715               		.loc 1 784 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 785:quantum/command.c ****     clear_keyboard();
 731               		.loc 1 785 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 786:quantum/command.c **** }
 739               		.loc 1 786 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 785:quantum/command.c ****     clear_keyboard();
 742               		.loc 1 785 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE40:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB31:
 291:quantum/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 291 42 is_stmt 1 view -0
 753               		.cfi_startproc
 754 0000 CF93      		push r28
 755               	.LCFI53:
 756               		.cfi_def_cfa_offset 3
 757               		.cfi_offset 28, -2
 758 0002 DF93      		push r29
 759               	.LCFI54:
 760               		.cfi_def_cfa_offset 4
 761               		.cfi_offset 29, -3
 762               	/* prologue: function */
 763               	/* frame size = 0 */
 764               	/* stack size = 2 */
 765               	.L__stack_usage = 2
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 766               		.loc 1 296 5 view .LVU161
 767 0004 8B31      		cpi r24,lo8(27)
 768 0006 01F4      		brne .+2
 769 0008 00C0      		rjmp .L48
 770 000a 00F0      		brlo .+2
 771 000c 00C0      		rjmp .L49
 772 000e 8B30      		cpi r24,lo8(11)
 773 0010 01F4      		brne .+2
 774 0012 00C0      		rjmp .L50
 775 0014 00F0      		brlo .+2
 776 0016 00C0      		rjmp .L51
 777 0018 8630      		cpi r24,lo8(6)
 778 001a 01F4      		brne .+2
 779 001c 00C0      		rjmp .L52
 780 001e 00F4      		brsh .L53
 781 0020 8530      		cpi r24,lo8(5)
 782 0022 01F4      		brne .+2
 783 0024 00C0      		rjmp .L54
 784               	.L55:
 499:quantum/command.c ****             return false;
 785               		.loc 1 499 13 view .LVU162
 786               	.LBB103:
 499:quantum/command.c ****             return false;
 787               		.loc 1 499 13 view .LVU163
 499:quantum/command.c ****             return false;
 788               		.loc 1 499 13 view .LVU164
 789               	.LBE103:
 790 0026 80E0      		ldi r24,lo8(__c.4067)
 791 0028 90E0      		ldi r25,hi8(__c.4067)
 792 002a 0E94 0000 		call xputs
 500:quantum/command.c ****     }
 793               		.loc 1 500 13 view .LVU165
 500:quantum/command.c ****     }
 794               		.loc 1 500 20 is_stmt 0 view .LVU166
 795 002e 80E0      		ldi r24,0
 796 0030 00C0      		rjmp .L47
 797               	.L53:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 798               		.loc 1 296 5 view .LVU167
 799 0032 8730      		cpi r24,lo8(7)
 800 0034 01F4      		brne .+2
 801 0036 00C0      		rjmp .L56
 802 0038 8830      		cpi r24,lo8(8)
 803 003a 01F4      		brne .L55
 309:quantum/command.c ****             print_eeconfig();
 804               		.loc 1 309 13 is_stmt 1 view .LVU168
 805               	.LBB104:
 309:quantum/command.c ****             print_eeconfig();
 806               		.loc 1 309 13 view .LVU169
 309:quantum/command.c ****             print_eeconfig();
 807               		.loc 1 309 13 view .LVU170
 808               	.LBE104:
 809 003c 80E0      		ldi r24,lo8(__c.4024)
 810 003e 90E0      		ldi r25,hi8(__c.4024)
 811 0040 0E94 0000 		call xputs
 310:quantum/command.c ****             break;
 812               		.loc 1 310 13 view .LVU171
 813               	.LBB105:
 814               	.LBI105:
 212:quantum/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 815               		.loc 1 212 13 view .LVU172
 816               	.LBB106:
 216:quantum/command.c ****     print_dec(eeconfig_read_default_layer());
 817               		.loc 1 216 5 view .LVU173
 818               	.LBE106:
 819               	.LBE105:
 216:quantum/command.c ****     print_dec(eeconfig_read_default_layer());
 820               		.loc 1 216 5 view .LVU174
 216:quantum/command.c ****     print_dec(eeconfig_read_default_layer());
 821               		.loc 1 216 5 view .LVU175
 822               	.LBB158:
 823               	.LBB107:
 824 0044 80E0      		ldi r24,lo8(__c.3916)
 825 0046 90E0      		ldi r25,hi8(__c.3916)
 826 0048 0E94 0000 		call xputs
 217:quantum/command.c ****     print("\n");
 827               		.loc 1 217 5 view .LVU176
 828 004c 0E94 0000 		call eeconfig_read_default_layer
 829               	.LBE107:
 830               	.LBE158:
 217:quantum/command.c ****     print("\n");
 831               		.loc 1 217 5 view .LVU177
 217:quantum/command.c ****     print("\n");
 832               		.loc 1 217 5 view .LVU178
 833               	.LBB159:
 834               	.LBB108:
 835 0050 1F92      		push __zero_reg__
 836               	.LCFI55:
 837               		.cfi_def_cfa_offset 5
 838 0052 8F93      		push r24
 839               	.LCFI56:
 840               		.cfi_def_cfa_offset 6
 841 0054 80E0      		ldi r24,lo8(__c.3918)
 842 0056 90E0      		ldi r25,hi8(__c.3918)
 843 0058 9F93      		push r25
 844               	.LCFI57:
 845               		.cfi_def_cfa_offset 7
 846 005a 8F93      		push r24
 847               	.LCFI58:
 848               		.cfi_def_cfa_offset 8
 849 005c 0E94 0000 		call __xprintf
 218:quantum/command.c **** 
 850               		.loc 1 218 5 view .LVU179
 851               	.LBE108:
 852               	.LBE159:
 218:quantum/command.c **** 
 853               		.loc 1 218 5 view .LVU180
 218:quantum/command.c **** 
 854               		.loc 1 218 5 view .LVU181
 855               	.LBB160:
 856               	.LBB109:
 857 0060 80E0      		ldi r24,lo8(__c.3920)
 858 0062 90E0      		ldi r25,hi8(__c.3920)
 859 0064 0E94 0000 		call xputs
 220:quantum/command.c ****     dc.raw = eeconfig_read_debug();
 860               		.loc 1 220 5 view .LVU182
 221:quantum/command.c ****     print("debug_config.raw: ");
 861               		.loc 1 221 5 view .LVU183
 221:quantum/command.c ****     print("debug_config.raw: ");
 862               		.loc 1 221 14 is_stmt 0 view .LVU184
 863 0068 0E94 0000 		call eeconfig_read_debug
 864 006c C82F      		mov r28,r24
 222:quantum/command.c ****     print_hex8(dc.raw);
 865               		.loc 1 222 5 is_stmt 1 view .LVU185
 866               	.LBE109:
 867               	.LBE160:
 222:quantum/command.c ****     print_hex8(dc.raw);
 868               		.loc 1 222 5 view .LVU186
 222:quantum/command.c ****     print_hex8(dc.raw);
 869               		.loc 1 222 5 view .LVU187
 870               	.LBB161:
 871               	.LBB110:
 872 006e 80E0      		ldi r24,lo8(__c.3923)
 873 0070 90E0      		ldi r25,hi8(__c.3923)
 874 0072 0E94 0000 		call xputs
 223:quantum/command.c ****     print("\n");
 875               		.loc 1 223 5 view .LVU188
 876               	.LBE110:
 877               	.LBE161:
 223:quantum/command.c ****     print("\n");
 878               		.loc 1 223 5 view .LVU189
 223:quantum/command.c ****     print("\n");
 879               		.loc 1 223 5 view .LVU190
 880               	.LBB162:
 881               	.LBB111:
 882 0076 1F92      		push __zero_reg__
 883               	.LCFI59:
 884               		.cfi_def_cfa_offset 9
 885 0078 CF93      		push r28
 886               	.LCFI60:
 887               		.cfi_def_cfa_offset 10
 888 007a 80E0      		ldi r24,lo8(__c.3925)
 889 007c 90E0      		ldi r25,hi8(__c.3925)
 890 007e 9F93      		push r25
 891               	.LCFI61:
 892               		.cfi_def_cfa_offset 11
 893 0080 8F93      		push r24
 894               	.LCFI62:
 895               		.cfi_def_cfa_offset 12
 896 0082 0E94 0000 		call __xprintf
 224:quantum/command.c ****     print(".enable: ");
 897               		.loc 1 224 5 view .LVU191
 898               	.LBE111:
 899               	.LBE162:
 224:quantum/command.c ****     print(".enable: ");
 900               		.loc 1 224 5 view .LVU192
 224:quantum/command.c ****     print(".enable: ");
 901               		.loc 1 224 5 view .LVU193
 902               	.LBB163:
 903               	.LBB112:
 904 0086 80E0      		ldi r24,lo8(__c.3927)
 905 0088 90E0      		ldi r25,hi8(__c.3927)
 906 008a 0E94 0000 		call xputs
 225:quantum/command.c ****     print_dec(dc.enable);
 907               		.loc 1 225 5 view .LVU194
 908               	.LBE112:
 909               	.LBE163:
 225:quantum/command.c ****     print_dec(dc.enable);
 910               		.loc 1 225 5 view .LVU195
 225:quantum/command.c ****     print_dec(dc.enable);
 911               		.loc 1 225 5 view .LVU196
 912               	.LBB164:
 913               	.LBB113:
 914 008e 80E0      		ldi r24,lo8(__c.3929)
 915 0090 90E0      		ldi r25,hi8(__c.3929)
 916 0092 0E94 0000 		call xputs
 226:quantum/command.c ****     print("\n");
 917               		.loc 1 226 5 view .LVU197
 918               	.LBE113:
 919               	.LBE164:
 226:quantum/command.c ****     print("\n");
 920               		.loc 1 226 5 view .LVU198
 226:quantum/command.c ****     print("\n");
 921               		.loc 1 226 5 view .LVU199
 922               	.LBB165:
 923               	.LBB114:
 924 0096 8C2F      		mov r24,r28
 925 0098 8170      		andi r24,1
 926 009a 1F92      		push __zero_reg__
 927               	.LCFI63:
 928               		.cfi_def_cfa_offset 13
 929 009c 8F93      		push r24
 930               	.LCFI64:
 931               		.cfi_def_cfa_offset 14
 932 009e 80E0      		ldi r24,lo8(__c.3931)
 933 00a0 90E0      		ldi r25,hi8(__c.3931)
 934 00a2 9F93      		push r25
 935               	.LCFI65:
 936               		.cfi_def_cfa_offset 15
 937 00a4 8F93      		push r24
 938               	.LCFI66:
 939               		.cfi_def_cfa_offset 16
 940 00a6 0E94 0000 		call __xprintf
 227:quantum/command.c ****     print(".matrix: ");
 941               		.loc 1 227 5 view .LVU200
 942               	.LBE114:
 943               	.LBE165:
 227:quantum/command.c ****     print(".matrix: ");
 944               		.loc 1 227 5 view .LVU201
 227:quantum/command.c ****     print(".matrix: ");
 945               		.loc 1 227 5 view .LVU202
 946               	.LBB166:
 947               	.LBB115:
 948 00aa 80E0      		ldi r24,lo8(__c.3933)
 949 00ac 90E0      		ldi r25,hi8(__c.3933)
 950 00ae 0E94 0000 		call xputs
 228:quantum/command.c ****     print_dec(dc.matrix);
 951               		.loc 1 228 5 view .LVU203
 952               	.LBE115:
 953               	.LBE166:
 228:quantum/command.c ****     print_dec(dc.matrix);
 954               		.loc 1 228 5 view .LVU204
 228:quantum/command.c ****     print_dec(dc.matrix);
 955               		.loc 1 228 5 view .LVU205
 956               	.LBB167:
 957               	.LBB116:
 958 00b2 80E0      		ldi r24,lo8(__c.3935)
 959 00b4 90E0      		ldi r25,hi8(__c.3935)
 960 00b6 0E94 0000 		call xputs
 229:quantum/command.c ****     print("\n");
 961               		.loc 1 229 5 view .LVU206
 962               	.LBE116:
 963               	.LBE167:
 229:quantum/command.c ****     print("\n");
 964               		.loc 1 229 5 view .LVU207
 229:quantum/command.c ****     print("\n");
 965               		.loc 1 229 5 view .LVU208
 966               	.LBB168:
 967               	.LBB117:
 968 00ba C1FB      		bst r28,1
 969 00bc 8827      		clr r24
 970 00be 80F9      		bld r24,0
 971 00c0 1F92      		push __zero_reg__
 972               	.LCFI67:
 973               		.cfi_def_cfa_offset 17
 974 00c2 8F93      		push r24
 975               	.LCFI68:
 976               		.cfi_def_cfa_offset 18
 977 00c4 80E0      		ldi r24,lo8(__c.3937)
 978 00c6 90E0      		ldi r25,hi8(__c.3937)
 979 00c8 9F93      		push r25
 980               	.LCFI69:
 981               		.cfi_def_cfa_offset 19
 982 00ca 8F93      		push r24
 983               	.LCFI70:
 984               		.cfi_def_cfa_offset 20
 985 00cc 0E94 0000 		call __xprintf
 230:quantum/command.c ****     print(".keyboard: ");
 986               		.loc 1 230 5 view .LVU209
 987               	.LBE117:
 988               	.LBE168:
 230:quantum/command.c ****     print(".keyboard: ");
 989               		.loc 1 230 5 view .LVU210
 230:quantum/command.c ****     print(".keyboard: ");
 990               		.loc 1 230 5 view .LVU211
 991               	.LBB169:
 992               	.LBB118:
 993 00d0 80E0      		ldi r24,lo8(__c.3939)
 994 00d2 90E0      		ldi r25,hi8(__c.3939)
 995 00d4 0E94 0000 		call xputs
 231:quantum/command.c ****     print_dec(dc.keyboard);
 996               		.loc 1 231 5 view .LVU212
 997               	.LBE118:
 998               	.LBE169:
 231:quantum/command.c ****     print_dec(dc.keyboard);
 999               		.loc 1 231 5 view .LVU213
 231:quantum/command.c ****     print_dec(dc.keyboard);
 1000               		.loc 1 231 5 view .LVU214
 1001               	.LBB170:
 1002               	.LBB119:
 1003 00d8 80E0      		ldi r24,lo8(__c.3941)
 1004 00da 90E0      		ldi r25,hi8(__c.3941)
 1005 00dc 0E94 0000 		call xputs
 232:quantum/command.c ****     print("\n");
 1006               		.loc 1 232 5 view .LVU215
 1007               	.LBE119:
 1008               	.LBE170:
 232:quantum/command.c ****     print("\n");
 1009               		.loc 1 232 5 view .LVU216
 232:quantum/command.c ****     print("\n");
 1010               		.loc 1 232 5 view .LVU217
 1011               	.LBB171:
 1012               	.LBB120:
 1013 00e0 C2FB      		bst r28,2
 1014 00e2 8827      		clr r24
 1015 00e4 80F9      		bld r24,0
 1016 00e6 1F92      		push __zero_reg__
 1017               	.LCFI71:
 1018               		.cfi_def_cfa_offset 21
 1019 00e8 8F93      		push r24
 1020               	.LCFI72:
 1021               		.cfi_def_cfa_offset 22
 1022 00ea 80E0      		ldi r24,lo8(__c.3943)
 1023 00ec 90E0      		ldi r25,hi8(__c.3943)
 1024 00ee 9F93      		push r25
 1025               	.LCFI73:
 1026               		.cfi_def_cfa_offset 23
 1027 00f0 8F93      		push r24
 1028               	.LCFI74:
 1029               		.cfi_def_cfa_offset 24
 1030 00f2 0E94 0000 		call __xprintf
 233:quantum/command.c ****     print(".mouse: ");
 1031               		.loc 1 233 5 view .LVU218
 1032               	.LBE120:
 1033               	.LBE171:
 233:quantum/command.c ****     print(".mouse: ");
 1034               		.loc 1 233 5 view .LVU219
 233:quantum/command.c ****     print(".mouse: ");
 1035               		.loc 1 233 5 view .LVU220
 1036               	.LBB172:
 1037               	.LBB121:
 1038 00f6 80E0      		ldi r24,lo8(__c.3945)
 1039 00f8 90E0      		ldi r25,hi8(__c.3945)
 1040 00fa 0E94 0000 		call xputs
 234:quantum/command.c ****     print_dec(dc.mouse);
 1041               		.loc 1 234 5 view .LVU221
 1042               	.LBE121:
 1043               	.LBE172:
 234:quantum/command.c ****     print_dec(dc.mouse);
 1044               		.loc 1 234 5 view .LVU222
 234:quantum/command.c ****     print_dec(dc.mouse);
 1045               		.loc 1 234 5 view .LVU223
 1046               	.LBB173:
 1047               	.LBB122:
 1048 00fe 80E0      		ldi r24,lo8(__c.3947)
 1049 0100 90E0      		ldi r25,hi8(__c.3947)
 1050 0102 0E94 0000 		call xputs
 235:quantum/command.c ****     print("\n");
 1051               		.loc 1 235 5 view .LVU224
 1052               	.LBE122:
 1053               	.LBE173:
 235:quantum/command.c ****     print("\n");
 1054               		.loc 1 235 5 view .LVU225
 235:quantum/command.c ****     print("\n");
 1055               		.loc 1 235 5 view .LVU226
 1056               	.LBB174:
 1057               	.LBB123:
 1058 0106 C3FB      		bst r28,3
 1059 0108 CC27      		clr r28
 1060 010a C0F9      		bld r28,0
 1061 010c 1F92      		push __zero_reg__
 1062               	.LCFI75:
 1063               		.cfi_def_cfa_offset 25
 1064 010e CF93      		push r28
 1065               	.LCFI76:
 1066               		.cfi_def_cfa_offset 26
 1067 0110 80E0      		ldi r24,lo8(__c.3949)
 1068 0112 90E0      		ldi r25,hi8(__c.3949)
 1069 0114 9F93      		push r25
 1070               	.LCFI77:
 1071               		.cfi_def_cfa_offset 27
 1072 0116 8F93      		push r24
 1073               	.LCFI78:
 1074               		.cfi_def_cfa_offset 28
 1075 0118 0E94 0000 		call __xprintf
 236:quantum/command.c **** 
 1076               		.loc 1 236 5 view .LVU227
 1077               	.LBE123:
 1078               	.LBE174:
 236:quantum/command.c **** 
 1079               		.loc 1 236 5 view .LVU228
 236:quantum/command.c **** 
 1080               		.loc 1 236 5 view .LVU229
 1081               	.LBB175:
 1082               	.LBB124:
 1083 011c 80E0      		ldi r24,lo8(__c.3951)
 1084 011e 90E0      		ldi r25,hi8(__c.3951)
 1085 0120 0E94 0000 		call xputs
 238:quantum/command.c ****     kc.raw = eeconfig_read_keymap();
 1086               		.loc 1 238 5 view .LVU230
 239:quantum/command.c ****     print("keymap_config.raw: ");
 1087               		.loc 1 239 5 view .LVU231
 239:quantum/command.c ****     print("keymap_config.raw: ");
 1088               		.loc 1 239 14 is_stmt 0 view .LVU232
 1089 0124 0E94 0000 		call eeconfig_read_keymap
 1090 0128 EC01      		movw r28,r24
 240:quantum/command.c ****     print_hex8(kc.raw);
 1091               		.loc 1 240 5 is_stmt 1 view .LVU233
 1092               	.LBE124:
 1093               	.LBE175:
 240:quantum/command.c ****     print_hex8(kc.raw);
 1094               		.loc 1 240 5 view .LVU234
 240:quantum/command.c ****     print_hex8(kc.raw);
 1095               		.loc 1 240 5 view .LVU235
 1096               	.LBB176:
 1097               	.LBB125:
 1098 012a 80E0      		ldi r24,lo8(__c.3954)
 1099 012c 90E0      		ldi r25,hi8(__c.3954)
 1100 012e 0E94 0000 		call xputs
 241:quantum/command.c ****     print("\n");
 1101               		.loc 1 241 5 view .LVU236
 1102               	.LBE125:
 1103               	.LBE176:
 241:quantum/command.c ****     print("\n");
 1104               		.loc 1 241 5 view .LVU237
 241:quantum/command.c ****     print("\n");
 1105               		.loc 1 241 5 view .LVU238
 1106               	.LBB177:
 1107               	.LBB126:
 1108 0132 DF93      		push r29
 1109               	.LCFI79:
 1110               		.cfi_def_cfa_offset 29
 1111 0134 CF93      		push r28
 1112               	.LCFI80:
 1113               		.cfi_def_cfa_offset 30
 1114 0136 80E0      		ldi r24,lo8(__c.3956)
 1115 0138 90E0      		ldi r25,hi8(__c.3956)
 1116 013a 9F93      		push r25
 1117               	.LCFI81:
 1118               		.cfi_def_cfa_offset 31
 1119 013c 8F93      		push r24
 1120               	.LCFI82:
 1121               		.cfi_def_cfa_offset 32
 1122 013e 0E94 0000 		call __xprintf
 242:quantum/command.c ****     print(".swap_control_capslock: ");
 1123               		.loc 1 242 5 view .LVU239
 1124               	.LBE126:
 1125               	.LBE177:
 242:quantum/command.c ****     print(".swap_control_capslock: ");
 1126               		.loc 1 242 5 view .LVU240
 242:quantum/command.c ****     print(".swap_control_capslock: ");
 1127               		.loc 1 242 5 view .LVU241
 1128               	.LBB178:
 1129               	.LBB127:
 1130 0142 80E0      		ldi r24,lo8(__c.3958)
 1131 0144 90E0      		ldi r25,hi8(__c.3958)
 1132 0146 0E94 0000 		call xputs
 243:quantum/command.c ****     print_dec(kc.swap_control_capslock);
 1133               		.loc 1 243 5 view .LVU242
 1134               	.LBE127:
 1135               	.LBE178:
 243:quantum/command.c ****     print_dec(kc.swap_control_capslock);
 1136               		.loc 1 243 5 view .LVU243
 243:quantum/command.c ****     print_dec(kc.swap_control_capslock);
 1137               		.loc 1 243 5 view .LVU244
 1138               	.LBB179:
 1139               	.LBB128:
 1140 014a 80E0      		ldi r24,lo8(__c.3960)
 1141 014c 90E0      		ldi r25,hi8(__c.3960)
 1142 014e 0E94 0000 		call xputs
 244:quantum/command.c ****     print("\n");
 1143               		.loc 1 244 5 view .LVU245
 1144               	.LBE128:
 1145               	.LBE179:
 244:quantum/command.c ****     print("\n");
 1146               		.loc 1 244 5 view .LVU246
 244:quantum/command.c ****     print("\n");
 1147               		.loc 1 244 5 view .LVU247
 1148               	.LBB180:
 1149               	.LBB129:
 1150 0152 8C2F      		mov r24,r28
 1151 0154 8170      		andi r24,1
 1152 0156 1F92      		push __zero_reg__
 1153               	.LCFI83:
 1154               		.cfi_def_cfa_offset 33
 1155 0158 8F93      		push r24
 1156               	.LCFI84:
 1157               		.cfi_def_cfa_offset 34
 1158 015a 80E0      		ldi r24,lo8(__c.3962)
 1159 015c 90E0      		ldi r25,hi8(__c.3962)
 1160 015e 9F93      		push r25
 1161               	.LCFI85:
 1162               		.cfi_def_cfa_offset 35
 1163 0160 8F93      		push r24
 1164               	.LCFI86:
 1165               		.cfi_def_cfa_offset 36
 1166 0162 0E94 0000 		call __xprintf
 245:quantum/command.c ****     print(".capslock_to_control: ");
 1167               		.loc 1 245 5 view .LVU248
 1168               	.LBE129:
 1169               	.LBE180:
 245:quantum/command.c ****     print(".capslock_to_control: ");
 1170               		.loc 1 245 5 view .LVU249
 245:quantum/command.c ****     print(".capslock_to_control: ");
 1171               		.loc 1 245 5 view .LVU250
 1172               	.LBB181:
 1173               	.LBB130:
 1174 0166 8DB7      		in r24,__SP_L__
 1175 0168 9EB7      		in r25,__SP_H__
 1176 016a 8096      		adiw r24,32
 1177 016c 0FB6      		in __tmp_reg__,__SREG__
 1178 016e F894      		cli
 1179 0170 9EBF      		out __SP_H__,r25
 1180 0172 0FBE      		out __SREG__,__tmp_reg__
 1181 0174 8DBF      		out __SP_L__,r24
 1182               	.LCFI87:
 1183               		.cfi_def_cfa_offset 4
 1184 0176 80E0      		ldi r24,lo8(__c.3964)
 1185 0178 90E0      		ldi r25,hi8(__c.3964)
 1186 017a 0E94 0000 		call xputs
 246:quantum/command.c ****     print_dec(kc.capslock_to_control);
 1187               		.loc 1 246 5 view .LVU251
 1188               	.LBE130:
 1189               	.LBE181:
 246:quantum/command.c ****     print_dec(kc.capslock_to_control);
 1190               		.loc 1 246 5 view .LVU252
 246:quantum/command.c ****     print_dec(kc.capslock_to_control);
 1191               		.loc 1 246 5 view .LVU253
 1192               	.LBB182:
 1193               	.LBB131:
 1194 017e 80E0      		ldi r24,lo8(__c.3966)
 1195 0180 90E0      		ldi r25,hi8(__c.3966)
 1196 0182 0E94 0000 		call xputs
 247:quantum/command.c ****     print("\n");
 1197               		.loc 1 247 5 view .LVU254
 1198               	.LBE131:
 1199               	.LBE182:
 247:quantum/command.c ****     print("\n");
 1200               		.loc 1 247 5 view .LVU255
 247:quantum/command.c ****     print("\n");
 1201               		.loc 1 247 5 view .LVU256
 1202               	.LBB183:
 1203               	.LBB132:
 1204 0186 C1FB      		bst r28,1
 1205 0188 8827      		clr r24
 1206 018a 80F9      		bld r24,0
 1207 018c 1F92      		push __zero_reg__
 1208               	.LCFI88:
 1209               		.cfi_def_cfa_offset 5
 1210 018e 8F93      		push r24
 1211               	.LCFI89:
 1212               		.cfi_def_cfa_offset 6
 1213 0190 80E0      		ldi r24,lo8(__c.3968)
 1214 0192 90E0      		ldi r25,hi8(__c.3968)
 1215 0194 9F93      		push r25
 1216               	.LCFI90:
 1217               		.cfi_def_cfa_offset 7
 1218 0196 8F93      		push r24
 1219               	.LCFI91:
 1220               		.cfi_def_cfa_offset 8
 1221 0198 0E94 0000 		call __xprintf
 248:quantum/command.c ****     print(".swap_lctl_lgui: ");
 1222               		.loc 1 248 5 view .LVU257
 1223               	.LBE132:
 1224               	.LBE183:
 248:quantum/command.c ****     print(".swap_lctl_lgui: ");
 1225               		.loc 1 248 5 view .LVU258
 248:quantum/command.c ****     print(".swap_lctl_lgui: ");
 1226               		.loc 1 248 5 view .LVU259
 1227               	.LBB184:
 1228               	.LBB133:
 1229 019c 80E0      		ldi r24,lo8(__c.3970)
 1230 019e 90E0      		ldi r25,hi8(__c.3970)
 1231 01a0 0E94 0000 		call xputs
 249:quantum/command.c ****     print_dec(kc.swap_lctl_lgui);
 1232               		.loc 1 249 5 view .LVU260
 1233               	.LBE133:
 1234               	.LBE184:
 249:quantum/command.c ****     print_dec(kc.swap_lctl_lgui);
 1235               		.loc 1 249 5 view .LVU261
 249:quantum/command.c ****     print_dec(kc.swap_lctl_lgui);
 1236               		.loc 1 249 5 view .LVU262
 1237               	.LBB185:
 1238               	.LBB134:
 1239 01a4 80E0      		ldi r24,lo8(__c.3972)
 1240 01a6 90E0      		ldi r25,hi8(__c.3972)
 1241 01a8 0E94 0000 		call xputs
 250:quantum/command.c ****     print("\n");
 1242               		.loc 1 250 5 view .LVU263
 1243               	.LBE134:
 1244               	.LBE185:
 250:quantum/command.c ****     print("\n");
 1245               		.loc 1 250 5 view .LVU264
 250:quantum/command.c ****     print("\n");
 1246               		.loc 1 250 5 view .LVU265
 1247               	.LBB186:
 1248               	.LBB135:
 1249 01ac 8D2F      		mov r24,r29
 1250 01ae 8170      		andi r24,1
 1251 01b0 1F92      		push __zero_reg__
 1252               	.LCFI92:
 1253               		.cfi_def_cfa_offset 9
 1254 01b2 8F93      		push r24
 1255               	.LCFI93:
 1256               		.cfi_def_cfa_offset 10
 1257 01b4 80E0      		ldi r24,lo8(__c.3974)
 1258 01b6 90E0      		ldi r25,hi8(__c.3974)
 1259 01b8 9F93      		push r25
 1260               	.LCFI94:
 1261               		.cfi_def_cfa_offset 11
 1262 01ba 8F93      		push r24
 1263               	.LCFI95:
 1264               		.cfi_def_cfa_offset 12
 1265 01bc 0E94 0000 		call __xprintf
 251:quantum/command.c ****     print(".swap_rctl_rgui: ");
 1266               		.loc 1 251 5 view .LVU266
 1267               	.LBE135:
 1268               	.LBE186:
 251:quantum/command.c ****     print(".swap_rctl_rgui: ");
 1269               		.loc 1 251 5 view .LVU267
 251:quantum/command.c ****     print(".swap_rctl_rgui: ");
 1270               		.loc 1 251 5 view .LVU268
 1271               	.LBB187:
 1272               	.LBB136:
 1273 01c0 80E0      		ldi r24,lo8(__c.3976)
 1274 01c2 90E0      		ldi r25,hi8(__c.3976)
 1275 01c4 0E94 0000 		call xputs
 252:quantum/command.c ****     print_dec(kc.swap_rctl_rgui);
 1276               		.loc 1 252 5 view .LVU269
 1277               	.LBE136:
 1278               	.LBE187:
 252:quantum/command.c ****     print_dec(kc.swap_rctl_rgui);
 1279               		.loc 1 252 5 view .LVU270
 252:quantum/command.c ****     print_dec(kc.swap_rctl_rgui);
 1280               		.loc 1 252 5 view .LVU271
 1281               	.LBB188:
 1282               	.LBB137:
 1283 01c8 80E0      		ldi r24,lo8(__c.3978)
 1284 01ca 90E0      		ldi r25,hi8(__c.3978)
 1285 01cc 0E94 0000 		call xputs
 253:quantum/command.c ****     print("\n");
 1286               		.loc 1 253 5 view .LVU272
 1287               	.LBE137:
 1288               	.LBE188:
 253:quantum/command.c ****     print("\n");
 1289               		.loc 1 253 5 view .LVU273
 253:quantum/command.c ****     print("\n");
 1290               		.loc 1 253 5 view .LVU274
 1291               	.LBB189:
 1292               	.LBB138:
 1293 01d0 D695      		lsr r29
 1294 01d2 D170      		andi r29,1
 1295 01d4 1F92      		push __zero_reg__
 1296               	.LCFI96:
 1297               		.cfi_def_cfa_offset 13
 1298 01d6 DF93      		push r29
 1299               	.LCFI97:
 1300               		.cfi_def_cfa_offset 14
 1301 01d8 80E0      		ldi r24,lo8(__c.3980)
 1302 01da 90E0      		ldi r25,hi8(__c.3980)
 1303 01dc 9F93      		push r25
 1304               	.LCFI98:
 1305               		.cfi_def_cfa_offset 15
 1306 01de 8F93      		push r24
 1307               	.LCFI99:
 1308               		.cfi_def_cfa_offset 16
 1309 01e0 0E94 0000 		call __xprintf
 254:quantum/command.c ****     print(".swap_lalt_lgui: ");
 1310               		.loc 1 254 5 view .LVU275
 1311               	.LBE138:
 1312               	.LBE189:
 254:quantum/command.c ****     print(".swap_lalt_lgui: ");
 1313               		.loc 1 254 5 view .LVU276
 254:quantum/command.c ****     print(".swap_lalt_lgui: ");
 1314               		.loc 1 254 5 view .LVU277
 1315               	.LBB190:
 1316               	.LBB139:
 1317 01e4 80E0      		ldi r24,lo8(__c.3982)
 1318 01e6 90E0      		ldi r25,hi8(__c.3982)
 1319 01e8 0E94 0000 		call xputs
 255:quantum/command.c ****     print_dec(kc.swap_lalt_lgui);
 1320               		.loc 1 255 5 view .LVU278
 1321               	.LBE139:
 1322               	.LBE190:
 255:quantum/command.c ****     print_dec(kc.swap_lalt_lgui);
 1323               		.loc 1 255 5 view .LVU279
 255:quantum/command.c ****     print_dec(kc.swap_lalt_lgui);
 1324               		.loc 1 255 5 view .LVU280
 1325               	.LBB191:
 1326               	.LBB140:
 1327 01ec 80E0      		ldi r24,lo8(__c.3984)
 1328 01ee 90E0      		ldi r25,hi8(__c.3984)
 1329 01f0 0E94 0000 		call xputs
 256:quantum/command.c ****     print("\n");
 1330               		.loc 1 256 5 view .LVU281
 1331               	.LBE140:
 1332               	.LBE191:
 256:quantum/command.c ****     print("\n");
 1333               		.loc 1 256 5 view .LVU282
 256:quantum/command.c ****     print("\n");
 1334               		.loc 1 256 5 view .LVU283
 1335               	.LBB192:
 1336               	.LBB141:
 1337 01f4 C2FB      		bst r28,2
 1338 01f6 8827      		clr r24
 1339 01f8 80F9      		bld r24,0
 1340 01fa 1F92      		push __zero_reg__
 1341               	.LCFI100:
 1342               		.cfi_def_cfa_offset 17
 1343 01fc 8F93      		push r24
 1344               	.LCFI101:
 1345               		.cfi_def_cfa_offset 18
 1346 01fe 80E0      		ldi r24,lo8(__c.3986)
 1347 0200 90E0      		ldi r25,hi8(__c.3986)
 1348 0202 9F93      		push r25
 1349               	.LCFI102:
 1350               		.cfi_def_cfa_offset 19
 1351 0204 8F93      		push r24
 1352               	.LCFI103:
 1353               		.cfi_def_cfa_offset 20
 1354 0206 0E94 0000 		call __xprintf
 257:quantum/command.c ****     print(".swap_ralt_rgui: ");
 1355               		.loc 1 257 5 view .LVU284
 1356               	.LBE141:
 1357               	.LBE192:
 257:quantum/command.c ****     print(".swap_ralt_rgui: ");
 1358               		.loc 1 257 5 view .LVU285
 257:quantum/command.c ****     print(".swap_ralt_rgui: ");
 1359               		.loc 1 257 5 view .LVU286
 1360               	.LBB193:
 1361               	.LBB142:
 1362 020a 80E0      		ldi r24,lo8(__c.3988)
 1363 020c 90E0      		ldi r25,hi8(__c.3988)
 1364 020e 0E94 0000 		call xputs
 258:quantum/command.c ****     print_dec(kc.swap_ralt_rgui);
 1365               		.loc 1 258 5 view .LVU287
 1366               	.LBE142:
 1367               	.LBE193:
 258:quantum/command.c ****     print_dec(kc.swap_ralt_rgui);
 1368               		.loc 1 258 5 view .LVU288
 258:quantum/command.c ****     print_dec(kc.swap_ralt_rgui);
 1369               		.loc 1 258 5 view .LVU289
 1370               	.LBB194:
 1371               	.LBB143:
 1372 0212 80E0      		ldi r24,lo8(__c.3990)
 1373 0214 90E0      		ldi r25,hi8(__c.3990)
 1374 0216 0E94 0000 		call xputs
 259:quantum/command.c ****     print("\n");
 1375               		.loc 1 259 5 view .LVU290
 1376               	.LBE143:
 1377               	.LBE194:
 259:quantum/command.c ****     print("\n");
 1378               		.loc 1 259 5 view .LVU291
 259:quantum/command.c ****     print("\n");
 1379               		.loc 1 259 5 view .LVU292
 1380               	.LBB195:
 1381               	.LBB144:
 1382 021a C3FB      		bst r28,3
 1383 021c 8827      		clr r24
 1384 021e 80F9      		bld r24,0
 1385 0220 1F92      		push __zero_reg__
 1386               	.LCFI104:
 1387               		.cfi_def_cfa_offset 21
 1388 0222 8F93      		push r24
 1389               	.LCFI105:
 1390               		.cfi_def_cfa_offset 22
 1391 0224 80E0      		ldi r24,lo8(__c.3992)
 1392 0226 90E0      		ldi r25,hi8(__c.3992)
 1393 0228 9F93      		push r25
 1394               	.LCFI106:
 1395               		.cfi_def_cfa_offset 23
 1396 022a 8F93      		push r24
 1397               	.LCFI107:
 1398               		.cfi_def_cfa_offset 24
 1399 022c 0E94 0000 		call __xprintf
 260:quantum/command.c ****     print(".no_gui: ");
 1400               		.loc 1 260 5 view .LVU293
 1401               	.LBE144:
 1402               	.LBE195:
 260:quantum/command.c ****     print(".no_gui: ");
 1403               		.loc 1 260 5 view .LVU294
 260:quantum/command.c ****     print(".no_gui: ");
 1404               		.loc 1 260 5 view .LVU295
 1405               	.LBB196:
 1406               	.LBB145:
 1407 0230 80E0      		ldi r24,lo8(__c.3994)
 1408 0232 90E0      		ldi r25,hi8(__c.3994)
 1409 0234 0E94 0000 		call xputs
 261:quantum/command.c ****     print_dec(kc.no_gui);
 1410               		.loc 1 261 5 view .LVU296
 1411               	.LBE145:
 1412               	.LBE196:
 261:quantum/command.c ****     print_dec(kc.no_gui);
 1413               		.loc 1 261 5 view .LVU297
 261:quantum/command.c ****     print_dec(kc.no_gui);
 1414               		.loc 1 261 5 view .LVU298
 1415               	.LBB197:
 1416               	.LBB146:
 1417 0238 80E0      		ldi r24,lo8(__c.3996)
 1418 023a 90E0      		ldi r25,hi8(__c.3996)
 1419 023c 0E94 0000 		call xputs
 262:quantum/command.c ****     print("\n");
 1420               		.loc 1 262 5 view .LVU299
 1421               	.LBE146:
 1422               	.LBE197:
 262:quantum/command.c ****     print("\n");
 1423               		.loc 1 262 5 view .LVU300
 262:quantum/command.c ****     print("\n");
 1424               		.loc 1 262 5 view .LVU301
 1425               	.LBB198:
 1426               	.LBB147:
 1427 0240 C4FB      		bst r28,4
 1428 0242 8827      		clr r24
 1429 0244 80F9      		bld r24,0
 1430 0246 1F92      		push __zero_reg__
 1431               	.LCFI108:
 1432               		.cfi_def_cfa_offset 25
 1433 0248 8F93      		push r24
 1434               	.LCFI109:
 1435               		.cfi_def_cfa_offset 26
 1436 024a 80E0      		ldi r24,lo8(__c.3998)
 1437 024c 90E0      		ldi r25,hi8(__c.3998)
 1438 024e 9F93      		push r25
 1439               	.LCFI110:
 1440               		.cfi_def_cfa_offset 27
 1441 0250 8F93      		push r24
 1442               	.LCFI111:
 1443               		.cfi_def_cfa_offset 28
 1444 0252 0E94 0000 		call __xprintf
 263:quantum/command.c ****     print(".swap_grave_esc: ");
 1445               		.loc 1 263 5 view .LVU302
 1446               	.LBE147:
 1447               	.LBE198:
 263:quantum/command.c ****     print(".swap_grave_esc: ");
 1448               		.loc 1 263 5 view .LVU303
 263:quantum/command.c ****     print(".swap_grave_esc: ");
 1449               		.loc 1 263 5 view .LVU304
 1450               	.LBB199:
 1451               	.LBB148:
 1452 0256 80E0      		ldi r24,lo8(__c.4000)
 1453 0258 90E0      		ldi r25,hi8(__c.4000)
 1454 025a 0E94 0000 		call xputs
 264:quantum/command.c ****     print_dec(kc.swap_grave_esc);
 1455               		.loc 1 264 5 view .LVU305
 1456               	.LBE148:
 1457               	.LBE199:
 264:quantum/command.c ****     print_dec(kc.swap_grave_esc);
 1458               		.loc 1 264 5 view .LVU306
 264:quantum/command.c ****     print_dec(kc.swap_grave_esc);
 1459               		.loc 1 264 5 view .LVU307
 1460               	.LBB200:
 1461               	.LBB149:
 1462 025e 80E0      		ldi r24,lo8(__c.4002)
 1463 0260 90E0      		ldi r25,hi8(__c.4002)
 1464 0262 0E94 0000 		call xputs
 265:quantum/command.c ****     print("\n");
 1465               		.loc 1 265 5 view .LVU308
 1466               	.LBE149:
 1467               	.LBE200:
 265:quantum/command.c ****     print("\n");
 1468               		.loc 1 265 5 view .LVU309
 265:quantum/command.c ****     print("\n");
 1469               		.loc 1 265 5 view .LVU310
 1470               	.LBB201:
 1471               	.LBB150:
 1472 0266 C5FB      		bst r28,5
 1473 0268 8827      		clr r24
 1474 026a 80F9      		bld r24,0
 1475 026c 1F92      		push __zero_reg__
 1476               	.LCFI112:
 1477               		.cfi_def_cfa_offset 29
 1478 026e 8F93      		push r24
 1479               	.LCFI113:
 1480               		.cfi_def_cfa_offset 30
 1481 0270 80E0      		ldi r24,lo8(__c.4004)
 1482 0272 90E0      		ldi r25,hi8(__c.4004)
 1483 0274 9F93      		push r25
 1484               	.LCFI114:
 1485               		.cfi_def_cfa_offset 31
 1486 0276 8F93      		push r24
 1487               	.LCFI115:
 1488               		.cfi_def_cfa_offset 32
 1489 0278 0E94 0000 		call __xprintf
 266:quantum/command.c ****     print(".swap_backslash_backspace: ");
 1490               		.loc 1 266 5 view .LVU311
 1491               	.LBE150:
 1492               	.LBE201:
 266:quantum/command.c ****     print(".swap_backslash_backspace: ");
 1493               		.loc 1 266 5 view .LVU312
 266:quantum/command.c ****     print(".swap_backslash_backspace: ");
 1494               		.loc 1 266 5 view .LVU313
 1495               	.LBB202:
 1496               	.LBB151:
 1497 027c 80E0      		ldi r24,lo8(__c.4006)
 1498 027e 90E0      		ldi r25,hi8(__c.4006)
 1499 0280 0E94 0000 		call xputs
 267:quantum/command.c ****     print_dec(kc.swap_backslash_backspace);
 1500               		.loc 1 267 5 view .LVU314
 1501               	.LBE151:
 1502               	.LBE202:
 267:quantum/command.c ****     print_dec(kc.swap_backslash_backspace);
 1503               		.loc 1 267 5 view .LVU315
 267:quantum/command.c ****     print_dec(kc.swap_backslash_backspace);
 1504               		.loc 1 267 5 view .LVU316
 1505               	.LBB203:
 1506               	.LBB152:
 1507 0284 80E0      		ldi r24,lo8(__c.4008)
 1508 0286 90E0      		ldi r25,hi8(__c.4008)
 1509 0288 0E94 0000 		call xputs
 268:quantum/command.c ****     print("\n");
 1510               		.loc 1 268 5 view .LVU317
 1511               	.LBE152:
 1512               	.LBE203:
 268:quantum/command.c ****     print("\n");
 1513               		.loc 1 268 5 view .LVU318
 268:quantum/command.c ****     print("\n");
 1514               		.loc 1 268 5 view .LVU319
 1515               	.LBB204:
 1516               	.LBB153:
 1517 028c C6FB      		bst r28,6
 1518 028e 8827      		clr r24
 1519 0290 80F9      		bld r24,0
 1520 0292 1F92      		push __zero_reg__
 1521               	.LCFI116:
 1522               		.cfi_def_cfa_offset 33
 1523 0294 8F93      		push r24
 1524               	.LCFI117:
 1525               		.cfi_def_cfa_offset 34
 1526 0296 80E0      		ldi r24,lo8(__c.4010)
 1527 0298 90E0      		ldi r25,hi8(__c.4010)
 1528 029a 9F93      		push r25
 1529               	.LCFI118:
 1530               		.cfi_def_cfa_offset 35
 1531 029c 8F93      		push r24
 1532               	.LCFI119:
 1533               		.cfi_def_cfa_offset 36
 1534 029e 0E94 0000 		call __xprintf
 269:quantum/command.c ****     print(".nkro: ");
 1535               		.loc 1 269 5 view .LVU320
 1536               	.LBE153:
 1537               	.LBE204:
 269:quantum/command.c ****     print(".nkro: ");
 1538               		.loc 1 269 5 view .LVU321
 269:quantum/command.c ****     print(".nkro: ");
 1539               		.loc 1 269 5 view .LVU322
 1540               	.LBB205:
 1541               	.LBB154:
 1542 02a2 8DB7      		in r24,__SP_L__
 1543 02a4 9EB7      		in r25,__SP_H__
 1544 02a6 8096      		adiw r24,32
 1545 02a8 0FB6      		in __tmp_reg__,__SREG__
 1546 02aa F894      		cli
 1547 02ac 9EBF      		out __SP_H__,r25
 1548 02ae 0FBE      		out __SREG__,__tmp_reg__
 1549 02b0 8DBF      		out __SP_L__,r24
 1550               	.LCFI120:
 1551               		.cfi_def_cfa_offset 4
 1552 02b2 80E0      		ldi r24,lo8(__c.4012)
 1553 02b4 90E0      		ldi r25,hi8(__c.4012)
 1554 02b6 0E94 0000 		call xputs
 270:quantum/command.c ****     print_dec(kc.nkro);
 1555               		.loc 1 270 5 view .LVU323
 1556               	.LBE154:
 1557               	.LBE205:
 270:quantum/command.c ****     print_dec(kc.nkro);
 1558               		.loc 1 270 5 view .LVU324
 270:quantum/command.c ****     print_dec(kc.nkro);
 1559               		.loc 1 270 5 view .LVU325
 1560               	.LBB206:
 1561               	.LBB155:
 1562 02ba 80E0      		ldi r24,lo8(__c.4014)
 1563 02bc 90E0      		ldi r25,hi8(__c.4014)
 1564 02be 0E94 0000 		call xputs
 271:quantum/command.c ****     print("\n");
 1565               		.loc 1 271 5 view .LVU326
 1566               	.LBE155:
 1567               	.LBE206:
 271:quantum/command.c ****     print("\n");
 1568               		.loc 1 271 5 view .LVU327
 271:quantum/command.c ****     print("\n");
 1569               		.loc 1 271 5 view .LVU328
 1570               	.LBB207:
 1571               	.LBB156:
 1572 02c2 C7FB      		bst r28,7
 1573 02c4 CC27      		clr r28
 1574 02c6 C0F9      		bld r28,0
 1575 02c8 1F92      		push __zero_reg__
 1576               	.LCFI121:
 1577               		.cfi_def_cfa_offset 5
 1578 02ca CF93      		push r28
 1579               	.LCFI122:
 1580               		.cfi_def_cfa_offset 6
 1581 02cc 80E0      		ldi r24,lo8(__c.4016)
 1582 02ce 90E0      		ldi r25,hi8(__c.4016)
 1583 02d0 9F93      		push r25
 1584               	.LCFI123:
 1585               		.cfi_def_cfa_offset 7
 1586 02d2 8F93      		push r24
 1587               	.LCFI124:
 1588               		.cfi_def_cfa_offset 8
 1589 02d4 0E94 0000 		call __xprintf
 272:quantum/command.c **** 
 1590               		.loc 1 272 5 view .LVU329
 1591               	.LBE156:
 1592               	.LBE207:
 272:quantum/command.c **** 
 1593               		.loc 1 272 5 view .LVU330
 272:quantum/command.c **** 
 1594               		.loc 1 272 5 view .LVU331
 1595               	.LBB208:
 1596               	.LBB157:
 1597 02d8 80E0      		ldi r24,lo8(__c.4018)
 1598 02da 90E0      		ldi r25,hi8(__c.4018)
 1599 02dc 0E94 0000 		call xputs
 1600 02e0 0F90      		pop __tmp_reg__
 1601 02e2 0F90      		pop __tmp_reg__
 1602 02e4 0F90      		pop __tmp_reg__
 1603 02e6 0F90      		pop __tmp_reg__
 1604               	.LCFI125:
 1605               		.cfi_def_cfa_offset 4
 1606               	.L98:
 1607               	.LBE157:
 1608               	.LBE208:
 492:quantum/command.c ****         case KC_0:
 1609               		.loc 1 492 13 view .LVU332
 502:quantum/command.c **** }
 1610               		.loc 1 502 12 is_stmt 0 view .LVU333
 1611 02e8 81E0      		ldi r24,lo8(1)
 492:quantum/command.c ****         case KC_0:
 1612               		.loc 1 492 13 view .LVU334
 1613 02ea 00C0      		rjmp .L47
 1614               	.L51:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1615               		.loc 1 296 5 view .LVU335
 1616 02ec 8031      		cpi r24,lo8(16)
 1617 02ee 01F4      		brne .+2
 1618 02f0 00C0      		rjmp .L58
 1619 02f2 00F4      		brsh .L59
 1620 02f4 8E30      		cpi r24,lo8(14)
 1621 02f6 01F0      		breq .+2
 1622 02f8 00C0      		rjmp .L55
 385:quantum/command.c ****             if (debug_keyboard) {
 1623               		.loc 1 385 13 is_stmt 1 view .LVU336
 385:quantum/command.c ****             if (debug_keyboard) {
 1624               		.loc 1 385 31 is_stmt 0 view .LVU337
 1625 02fa 9091 0000 		lds r25,debug_config
 385:quantum/command.c ****             if (debug_keyboard) {
 1626               		.loc 1 385 28 view .LVU338
 1627 02fe 892F      		mov r24,r25
 1628 0300 8B7F      		andi r24,~(1<<2)
 1629 0302 92FF      		sbrs r25,2
 1630 0304 8460      		ori r24,1<<2
 1631 0306 8093 0000 		sts debug_config,r24
 386:quantum/command.c ****                 print("\nkeyboard: on\n");
 1632               		.loc 1 386 13 is_stmt 1 view .LVU339
 386:quantum/command.c ****                 print("\nkeyboard: on\n");
 1633               		.loc 1 386 16 is_stmt 0 view .LVU340
 1634 030a 82FF      		sbrs r24,2
 1635 030c 00C0      		rjmp .L73
 387:quantum/command.c ****                 debug_enable = true;
 1636               		.loc 1 387 17 is_stmt 1 view .LVU341
 1637               	.LBB209:
 387:quantum/command.c ****                 debug_enable = true;
 1638               		.loc 1 387 17 view .LVU342
 387:quantum/command.c ****                 debug_enable = true;
 1639               		.loc 1 387 17 view .LVU343
 1640               	.LBE209:
 1641 030e 80E0      		ldi r24,lo8(__c.4050)
 1642 0310 90E0      		ldi r25,hi8(__c.4050)
 1643 0312 00C0      		rjmp .L100
 1644               	.L59:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1645               		.loc 1 296 5 is_stmt 0 view .LVU344
 1646 0314 8631      		cpi r24,lo8(22)
 1647 0316 01F4      		brne .+2
 1648 0318 00C0      		rjmp .L61
 1649 031a 8931      		cpi r24,lo8(25)
 1650 031c 01F0      		breq .+2
 1651 031e 00C0      		rjmp .L55
 407:quantum/command.c ****             break;
 1652               		.loc 1 407 13 is_stmt 1 view .LVU345
 1653               	.LBB210:
 1654               	.LBI210:
 141:quantum/command.c ****     // print version & information
 1655               		.loc 1 141 13 view .LVU346
 1656               	.LBB211:
 143:quantum/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1657               		.loc 1 143 5 view .LVU347
 1658               	.LBE211:
 1659               	.LBE210:
 143:quantum/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1660               		.loc 1 143 5 view .LVU348
 143:quantum/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1661               		.loc 1 143 5 view .LVU349
 1662               	.LBB218:
 1663               	.LBB212:
 1664 0320 80E0      		ldi r24,lo8(__c.3890)
 1665 0322 90E0      		ldi r25,hi8(__c.3890)
 1666 0324 0E94 0000 		call xputs
 144:quantum/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1667               		.loc 1 144 5 view .LVU350
 1668               	.LBE212:
 1669               	.LBE218:
 144:quantum/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1670               		.loc 1 144 5 view .LVU351
 144:quantum/command.c ****                                                        "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") 
 1671               		.loc 1 144 5 view .LVU352
 1672               	.LBB219:
 1673               	.LBB213:
 1674 0328 80E0      		ldi r24,lo8(__c.3892)
 1675 032a 90E0      		ldi r25,hi8(__c.3892)
 1676 032c 0E94 0000 		call xputs
 147:quantum/command.c **** #ifndef SKIP_VERSION
 1677               		.loc 1 147 5 view .LVU353
 1678               	.LBE213:
 1679               	.LBE219:
 147:quantum/command.c **** #ifndef SKIP_VERSION
 1680               		.loc 1 147 5 view .LVU354
 147:quantum/command.c **** #ifndef SKIP_VERSION
 1681               		.loc 1 147 5 view .LVU355
 1682               	.LBB220:
 1683               	.LBB214:
 1684 0330 80E0      		ldi r24,lo8(__c.3894)
 1685 0332 90E0      		ldi r25,hi8(__c.3894)
 1686 0334 0E94 0000 		call xputs
 155:quantum/command.c **** 
 1687               		.loc 1 155 5 view .LVU356
 1688               	.LBE214:
 1689               	.LBE220:
 155:quantum/command.c **** 
 1690               		.loc 1 155 5 view .LVU357
 155:quantum/command.c **** 
 1691               		.loc 1 155 5 view .LVU358
 1692               	.LBB221:
 1693               	.LBB215:
 1694 0338 80E0      		ldi r24,lo8(__c.3896)
 1695 033a 90E0      		ldi r25,hi8(__c.3896)
 1696 033c 0E94 0000 		call xputs
 187:quantum/command.c **** #if defined(__AVR__)
 1697               		.loc 1 187 5 view .LVU359
 1698               	.LBE215:
 1699               	.LBE221:
 187:quantum/command.c **** #if defined(__AVR__)
 1700               		.loc 1 187 5 view .LVU360
 187:quantum/command.c **** #if defined(__AVR__)
 1701               		.loc 1 187 5 view .LVU361
 1702               	.LBB222:
 1703               	.LBB216:
 1704 0340 80E0      		ldi r24,lo8(__c.3898)
 1705 0342 90E0      		ldi r25,hi8(__c.3898)
 1706 0344 00C0      		rjmp .L99
 1707               	.L49:
 1708               	.LBE216:
 1709               	.LBE222:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1710               		.loc 1 296 5 is_stmt 0 view .LVU362
 1711 0346 8A32      		cpi r24,lo8(42)
 1712 0348 01F0      		breq .L63
 1713 034a 00F4      		brsh .L64
 1714 034c 8732      		cpi r24,lo8(39)
 1715 034e 01F0      		breq .L65
 1716 0350 00F4      		brsh .L66
 1717 0352 8E31      		cpi r24,lo8(30)
 1718 0354 00F4      		brsh .+2
 1719 0356 00C0      		rjmp .L55
 491:quantum/command.c ****             break;
 1720               		.loc 1 491 13 is_stmt 1 view .LVU363
 1721 0358 8D51      		subi r24,lo8(-(-29))
 1722 035a 00C0      		rjmp .L97
 1723               	.L66:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1724               		.loc 1 296 5 is_stmt 0 view .LVU364
 1725 035c 8932      		cpi r24,lo8(41)
 1726 035e 01F0      		breq .+2
 1727 0360 00C0      		rjmp .L55
 1728               	.L54:
 355:quantum/command.c ****             reset_keyboard();
 1729               		.loc 1 355 13 is_stmt 1 view .LVU365
 1730               	.LBB223:
 355:quantum/command.c ****             reset_keyboard();
 1731               		.loc 1 355 13 view .LVU366
 355:quantum/command.c ****             reset_keyboard();
 1732               		.loc 1 355 13 view .LVU367
 1733               	.LBE223:
 1734 0362 80E0      		ldi r24,lo8(__c.4037)
 1735 0364 90E0      		ldi r25,hi8(__c.4037)
 1736 0366 0E94 0000 		call xputs
 356:quantum/command.c ****             break;
 1737               		.loc 1 356 13 view .LVU368
 1738 036a 0E94 0000 		call reset_keyboard
 357:quantum/command.c **** 
 1739               		.loc 1 357 13 view .LVU369
 1740 036e 00C0      		rjmp .L98
 1741               	.L64:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1742               		.loc 1 296 5 is_stmt 0 view .LVU370
 1743 0370 8334      		cpi r24,lo8(67)
 1744 0372 00F4      		brsh .L68
 1745 0374 8A33      		cpi r24,lo8(58)
 1746 0376 00F0      		brlo .+2
 1747 0378 00C0      		rjmp .L69
 1748 037a 8533      		cpi r24,lo8(53)
 1749 037c 01F0      		breq .L65
 1750 037e 8833      		cpi r24,lo8(56)
 1751 0380 01F0      		breq .+2
 1752 0382 00C0      		rjmp .L55
 1753               	.L50:
 338:quantum/command.c ****             break;
 1754               		.loc 1 338 13 is_stmt 1 view .LVU371
 1755               	.LBB224:
 1756               	.LBI224:
 106:quantum/command.c ****     print("\n\t- Magic -\n" STR(MAGIC_KEY_DEBUG) ":	Debug Message Toggle\n" STR(MAGIC_KEY_DEBUG_MAT
 1757               		.loc 1 106 13 view .LVU372
 1758               	.LBB225:
 107:quantum/command.c **** 
 1759               		.loc 1 107 5 view .LVU373
 1760               	.LBE225:
 1761               	.LBE224:
 107:quantum/command.c **** 
 1762               		.loc 1 107 5 view .LVU374
 107:quantum/command.c **** 
 1763               		.loc 1 107 5 view .LVU375
 1764               	.LBB227:
 1765               	.LBB226:
 1766 0384 80E0      		ldi r24,lo8(__c.3885)
 1767 0386 90E0      		ldi r25,hi8(__c.3885)
 1768               	.L99:
 1769               	.LBE226:
 1770               	.LBE227:
 1771               	.LBB228:
 1772               	.LBB217:
 187:quantum/command.c **** #if defined(__AVR__)
 1773               		.loc 1 187 5 is_stmt 0 view .LVU376
 1774 0388 0E94 0000 		call xputs
 193:quantum/command.c **** }
 1775               		.loc 1 193 5 is_stmt 1 view .LVU377
 1776 038c 00C0      		rjmp .L98
 1777               	.L68:
 1778               	.LBE217:
 1779               	.LBE228:
 296:quantum/command.c **** #ifdef SLEEP_LED_ENABLE
 1780               		.loc 1 296 5 is_stmt 0 view .LVU378
 1781 038e 8334      		cpi r24,lo8(67)
 1782 0390 01F0      		breq .+2
 1783 0392 00C0      		rjmp .L55
 1784               	.L65:
 432:quantum/command.c ****             break;
 1785               		.loc 1 432 13 is_stmt 1 view .LVU379
 1786 0394 80E0      		ldi r24,0
 1787               	.L97:
 491:quantum/command.c ****             break;
 1788               		.loc 1 491 13 is_stmt 0 view .LVU380
 1789 0396 0E94 0000 		call switch_default_layer
 1790 039a 00C0      		rjmp .L98
 1791               	.L63:
 315:quantum/command.c ****             eeconfig_init();
 1792               		.loc 1 315 13 is_stmt 1 view .LVU381
 1793               	.LBB229:
 315:quantum/command.c ****             eeconfig_init();
 1794               		.loc 1 315 13 view .LVU382
 315:quantum/command.c ****             eeconfig_init();
 1795               		.loc 1 315 13 view .LVU383
 1796               	.LBE229:
 1797 039c 80E0      		ldi r24,lo8(__c.4028)
 1798 039e 90E0      		ldi r25,hi8(__c.4028)
 1799 03a0 0E94 0000 		call xputs
 316:quantum/command.c ****             break;
 1800               		.loc 1 316 13 view .LVU384
 1801 03a4 0E94 0000 		call eeconfig_init
 317:quantum/command.c **** 
 1802               		.loc 1 317 13 view .LVU385
 1803 03a8 00C0      		rjmp .L98
 1804               	.L52:
 343:quantum/command.c ****             debug_keyboard = false;
 1805               		.loc 1 343 13 view .LVU386
 344:quantum/command.c ****             debug_mouse    = false;
 1806               		.loc 1 344 13 view .LVU387
 345:quantum/command.c ****             debug_enable   = false;
 1807               		.loc 1 345 13 view .LVU388
 346:quantum/command.c ****             command_console_help();
 1808               		.loc 1 346 13 view .LVU389
 346:quantum/command.c ****             command_console_help();
 1809               		.loc 1 346 28 is_stmt 0 view .LVU390
 1810 03aa 8091 0000 		lds r24,debug_config
 1811 03ae 807F      		andi r24,lo8(-16)
 1812 03b0 8093 0000 		sts debug_config,r24
 347:quantum/command.c ****             print("C> ");
 1813               		.loc 1 347 13 is_stmt 1 view .LVU391
 1814               	.LBB230:
 1815               	.LBI230:
 508:quantum/command.c ****     print("\n\t- Console -\n"
 1816               		.loc 1 508 13 view .LVU392
 1817               	.LBB231:
 509:quantum/command.c ****           "ESC/q:	quit\n"
 1818               		.loc 1 509 5 view .LVU393
 1819               	.LBE231:
 1820               	.LBE230:
 509:quantum/command.c ****           "ESC/q:	quit\n"
 1821               		.loc 1 509 5 view .LVU394
 509:quantum/command.c ****           "ESC/q:	quit\n"
 1822               		.loc 1 509 5 view .LVU395
 1823               	.LBB233:
 1824               	.LBB232:
 1825 03b4 80E0      		ldi r24,lo8(__c.4072)
 1826 03b6 90E0      		ldi r25,hi8(__c.4072)
 1827 03b8 0E94 0000 		call xputs
 1828               	.LBE232:
 1829               	.LBE233:
 348:quantum/command.c ****             command_state = CONSOLE;
 1830               		.loc 1 348 13 view .LVU396
 1831               	.LBB234:
 348:quantum/command.c ****             command_state = CONSOLE;
 1832               		.loc 1 348 13 view .LVU397
 348:quantum/command.c ****             command_state = CONSOLE;
 1833               		.loc 1 348 13 view .LVU398
 1834               	.LBE234:
 1835 03bc 80E0      		ldi r24,lo8(__c.4033)
 1836 03be 90E0      		ldi r25,hi8(__c.4033)
 1837 03c0 0E94 0000 		call xputs
 349:quantum/command.c ****             break;
 1838               		.loc 1 349 13 view .LVU399
 349:quantum/command.c ****             break;
 1839               		.loc 1 349 27 is_stmt 0 view .LVU400
 1840 03c4 81E0      		ldi r24,lo8(1)
 1841 03c6 8093 0000 		sts command_state,r24
 350:quantum/command.c **** 
 1842               		.loc 1 350 13 is_stmt 1 view .LVU401
 1843               	.L47:
 1844               	/* epilogue start */
 503:quantum/command.c **** 
 1845               		.loc 1 503 1 is_stmt 0 view .LVU402
 1846 03ca DF91      		pop r29
 1847 03cc CF91      		pop r28
 1848 03ce 0895      		ret
 1849               	.L56:
 361:quantum/command.c ****             if (debug_enable) {
 1850               		.loc 1 361 13 is_stmt 1 view .LVU403
 361:quantum/command.c ****             if (debug_enable) {
 1851               		.loc 1 361 29 is_stmt 0 view .LVU404
 1852 03d0 9091 0000 		lds r25,debug_config
 361:quantum/command.c ****             if (debug_enable) {
 1853               		.loc 1 361 26 view .LVU405
 1854 03d4 892F      		mov r24,r25
 1855 03d6 8E7F      		andi r24,~(1<<0)
 1856 03d8 90FF      		sbrs r25,0
 1857 03da 8160      		ori r24,1<<0
 1858 03dc 8093 0000 		sts debug_config,r24
 362:quantum/command.c ****                 print("\ndebug: on\n");
 1859               		.loc 1 362 13 is_stmt 1 view .LVU406
 362:quantum/command.c ****                 print("\ndebug: on\n");
 1860               		.loc 1 362 16 is_stmt 0 view .LVU407
 1861 03e0 80FF      		sbrs r24,0
 1862 03e2 00C0      		rjmp .L71
 363:quantum/command.c ****             } else {
 1863               		.loc 1 363 17 is_stmt 1 view .LVU408
 1864               	.LBB235:
 363:quantum/command.c ****             } else {
 1865               		.loc 1 363 17 view .LVU409
 363:quantum/command.c ****             } else {
 1866               		.loc 1 363 17 view .LVU410
 1867               	.LBE235:
 1868 03e4 80E0      		ldi r24,lo8(__c.4040)
 1869 03e6 90E0      		ldi r25,hi8(__c.4040)
 1870 03e8 00C0      		rjmp .L99
 1871               	.L71:
 365:quantum/command.c ****                 debug_matrix   = false;
 1872               		.loc 1 365 17 view .LVU411
 1873               	.LBB236:
 365:quantum/command.c ****                 debug_matrix   = false;
 1874               		.loc 1 365 17 view .LVU412
 365:quantum/command.c ****                 debug_matrix   = false;
 1875               		.loc 1 365 17 view .LVU413
 1876               	.LBE236:
 1877 03ea 80E0      		ldi r24,lo8(__c.4042)
 1878 03ec 90E0      		ldi r25,hi8(__c.4042)
 1879 03ee 0E94 0000 		call xputs
 366:quantum/command.c ****                 debug_keyboard = false;
 1880               		.loc 1 366 17 view .LVU414
 367:quantum/command.c ****                 debug_mouse    = false;
 1881               		.loc 1 367 17 view .LVU415
 368:quantum/command.c ****             }
 1882               		.loc 1 368 17 view .LVU416
 366:quantum/command.c ****                 debug_keyboard = false;
 1883               		.loc 1 366 32 is_stmt 0 view .LVU417
 1884 03f2 8091 0000 		lds r24,debug_config
 1885 03f6 817F      		andi r24,lo8(-15)
 1886               	.L101:
 399:quantum/command.c ****             } else {
 1887               		.loc 1 399 30 view .LVU418
 1888 03f8 8093 0000 		sts debug_config,r24
 1889 03fc 00C0      		rjmp .L98
 1890               	.L48:
 374:quantum/command.c ****             if (debug_matrix) {
 1891               		.loc 1 374 13 is_stmt 1 view .LVU419
 374:quantum/command.c ****             if (debug_matrix) {
 1892               		.loc 1 374 29 is_stmt 0 view .LVU420
 1893 03fe 9091 0000 		lds r25,debug_config
 374:quantum/command.c ****             if (debug_matrix) {
 1894               		.loc 1 374 26 view .LVU421
 1895 0402 892F      		mov r24,r25
 1896 0404 8D7F      		andi r24,~(1<<1)
 1897 0406 91FF      		sbrs r25,1
 1898 0408 8260      		ori r24,1<<1
 1899 040a 8093 0000 		sts debug_config,r24
 375:quantum/command.c ****                 print("\nmatrix: on\n");
 1900               		.loc 1 375 13 is_stmt 1 view .LVU422
 375:quantum/command.c ****                 print("\nmatrix: on\n");
 1901               		.loc 1 375 16 is_stmt 0 view .LVU423
 1902 040e 81FF      		sbrs r24,1
 1903 0410 00C0      		rjmp .L72
 376:quantum/command.c ****                 debug_enable = true;
 1904               		.loc 1 376 17 is_stmt 1 view .LVU424
 1905               	.LBB237:
 376:quantum/command.c ****                 debug_enable = true;
 1906               		.loc 1 376 17 view .LVU425
 376:quantum/command.c ****                 debug_enable = true;
 1907               		.loc 1 376 17 view .LVU426
 1908               	.LBE237:
 1909 0412 80E0      		ldi r24,lo8(__c.4045)
 1910 0414 90E0      		ldi r25,hi8(__c.4045)
 1911               	.L100:
 398:quantum/command.c ****                 debug_enable = true;
 1912               		.loc 1 398 17 is_stmt 0 view .LVU427
 1913 0416 0E94 0000 		call xputs
 399:quantum/command.c ****             } else {
 1914               		.loc 1 399 17 is_stmt 1 view .LVU428
 399:quantum/command.c ****             } else {
 1915               		.loc 1 399 30 is_stmt 0 view .LVU429
 1916 041a 8091 0000 		lds r24,debug_config
 1917 041e 8160      		ori r24,lo8(1<<0)
 1918 0420 00C0      		rjmp .L101
 1919               	.L72:
 379:quantum/command.c ****             }
 1920               		.loc 1 379 17 is_stmt 1 view .LVU430
 1921               	.LBB238:
 379:quantum/command.c ****             }
 1922               		.loc 1 379 17 view .LVU431
 379:quantum/command.c ****             }
 1923               		.loc 1 379 17 view .LVU432
 1924               	.LBE238:
 1925 0422 80E0      		ldi r24,lo8(__c.4047)
 1926 0424 90E0      		ldi r25,hi8(__c.4047)
 1927 0426 00C0      		rjmp .L99
 1928               	.L73:
 390:quantum/command.c ****             }
 1929               		.loc 1 390 17 view .LVU433
 1930               	.LBB239:
 390:quantum/command.c ****             }
 1931               		.loc 1 390 17 view .LVU434
 390:quantum/command.c ****             }
 1932               		.loc 1 390 17 view .LVU435
 1933               	.LBE239:
 1934 0428 80E0      		ldi r24,lo8(__c.4052)
 1935 042a 90E0      		ldi r25,hi8(__c.4052)
 1936 042c 00C0      		rjmp .L99
 1937               	.L58:
 396:quantum/command.c ****             if (debug_mouse) {
 1938               		.loc 1 396 13 view .LVU436
 396:quantum/command.c ****             if (debug_mouse) {
 1939               		.loc 1 396 28 is_stmt 0 view .LVU437
 1940 042e 9091 0000 		lds r25,debug_config
 396:quantum/command.c ****             if (debug_mouse) {
 1941               		.loc 1 396 25 view .LVU438
 1942 0432 892F      		mov r24,r25
 1943 0434 877F      		andi r24,~(1<<3)
 1944 0436 93FF      		sbrs r25,3
 1945 0438 8860      		ori r24,1<<3
 1946 043a 8093 0000 		sts debug_config,r24
 397:quantum/command.c ****                 print("\nmouse: on\n");
 1947               		.loc 1 397 13 is_stmt 1 view .LVU439
 397:quantum/command.c ****                 print("\nmouse: on\n");
 1948               		.loc 1 397 16 is_stmt 0 view .LVU440
 1949 043e 83FF      		sbrs r24,3
 1950 0440 00C0      		rjmp .L74
 398:quantum/command.c ****                 debug_enable = true;
 1951               		.loc 1 398 17 is_stmt 1 view .LVU441
 1952               	.LBB240:
 398:quantum/command.c ****                 debug_enable = true;
 1953               		.loc 1 398 17 view .LVU442
 398:quantum/command.c ****                 debug_enable = true;
 1954               		.loc 1 398 17 view .LVU443
 1955               	.LBE240:
 1956 0442 80E0      		ldi r24,lo8(__c.4055)
 1957 0444 90E0      		ldi r25,hi8(__c.4055)
 1958 0446 00C0      		rjmp .L100
 1959               	.L74:
 401:quantum/command.c ****             }
 1960               		.loc 1 401 17 view .LVU444
 1961               	.LBB241:
 401:quantum/command.c ****             }
 1962               		.loc 1 401 17 view .LVU445
 401:quantum/command.c ****             }
 1963               		.loc 1 401 17 view .LVU446
 1964               	.LBE241:
 1965 0448 80E0      		ldi r24,lo8(__c.4057)
 1966 044a 90E0      		ldi r25,hi8(__c.4057)
 1967 044c 00C0      		rjmp .L99
 1968               	.L61:
 412:quantum/command.c ****             break;
 1969               		.loc 1 412 13 view .LVU447
 1970               	.LBB242:
 1971               	.LBI242:
 196:quantum/command.c ****     print("\n\t- Status -\n");
 1972               		.loc 1 196 13 view .LVU448
 1973               	.LBB243:
 197:quantum/command.c **** 
 1974               		.loc 1 197 5 view .LVU449
 1975               	.LBE243:
 1976               	.LBE242:
 197:quantum/command.c **** 
 1977               		.loc 1 197 5 view .LVU450
 197:quantum/command.c **** 
 1978               		.loc 1 197 5 view .LVU451
 1979               	.LBB249:
 1980               	.LBB244:
 1981 044e 80E0      		ldi r24,lo8(__c.3903)
 1982 0450 90E0      		ldi r25,hi8(__c.3903)
 1983 0452 0E94 0000 		call xputs
 199:quantum/command.c **** #ifndef PROTOCOL_VUSB
 1984               		.loc 1 199 5 view .LVU452
 1985 0456 0E94 0000 		call host_keyboard_leds
 1986               	.LBE244:
 1987               	.LBE249:
 199:quantum/command.c **** #ifndef PROTOCOL_VUSB
 1988               		.loc 1 199 5 view .LVU453
 199:quantum/command.c **** #ifndef PROTOCOL_VUSB
 1989               		.loc 1 199 5 view .LVU454
 1990               	.LBB250:
 1991               	.LBB245:
 1992 045a 1F92      		push __zero_reg__
 1993               	.LCFI126:
 1994               		.cfi_def_cfa_offset 5
 1995 045c 8F93      		push r24
 1996               	.LCFI127:
 1997               		.cfi_def_cfa_offset 6
 1998 045e 80E0      		ldi r24,lo8(__c.3905)
 1999 0460 90E0      		ldi r25,hi8(__c.3905)
 2000 0462 9F93      		push r25
 2001               	.LCFI128:
 2002               		.cfi_def_cfa_offset 7
 2003 0464 8F93      		push r24
 2004               	.LCFI129:
 2005               		.cfi_def_cfa_offset 8
 2006 0466 0E94 0000 		call __xprintf
 202:quantum/command.c ****     print_val_hex8(keyboard_idle);
 2007               		.loc 1 202 5 view .LVU455
 2008               	.LBE245:
 2009               	.LBE250:
 202:quantum/command.c ****     print_val_hex8(keyboard_idle);
 2010               		.loc 1 202 5 view .LVU456
 202:quantum/command.c ****     print_val_hex8(keyboard_idle);
 2011               		.loc 1 202 5 view .LVU457
 2012               	.LBB251:
 2013               	.LBB246:
 2014 046a 8091 0000 		lds r24,keyboard_protocol
 2015 046e 1F92      		push __zero_reg__
 2016               	.LCFI130:
 2017               		.cfi_def_cfa_offset 9
 2018 0470 8F93      		push r24
 2019               	.LCFI131:
 2020               		.cfi_def_cfa_offset 10
 2021 0472 80E0      		ldi r24,lo8(__c.3907)
 2022 0474 90E0      		ldi r25,hi8(__c.3907)
 2023 0476 9F93      		push r25
 2024               	.LCFI132:
 2025               		.cfi_def_cfa_offset 11
 2026 0478 8F93      		push r24
 2027               	.LCFI133:
 2028               		.cfi_def_cfa_offset 12
 2029 047a 0E94 0000 		call __xprintf
 203:quantum/command.c **** #endif
 2030               		.loc 1 203 5 view .LVU458
 2031               	.LBE246:
 2032               	.LBE251:
 203:quantum/command.c **** #endif
 2033               		.loc 1 203 5 view .LVU459
 203:quantum/command.c **** #endif
 2034               		.loc 1 203 5 view .LVU460
 2035               	.LBB252:
 2036               	.LBB247:
 2037 047e 8091 0000 		lds r24,keyboard_idle
 2038 0482 1F92      		push __zero_reg__
 2039               	.LCFI134:
 2040               		.cfi_def_cfa_offset 13
 2041 0484 8F93      		push r24
 2042               	.LCFI135:
 2043               		.cfi_def_cfa_offset 14
 2044 0486 80E0      		ldi r24,lo8(__c.3909)
 2045 0488 90E0      		ldi r25,hi8(__c.3909)
 2046 048a 9F93      		push r25
 2047               	.LCFI136:
 2048               		.cfi_def_cfa_offset 15
 2049 048c 8F93      		push r24
 2050               	.LCFI137:
 2051               		.cfi_def_cfa_offset 16
 2052 048e 0E94 0000 		call __xprintf
 208:quantum/command.c ****     return;
 2053               		.loc 1 208 5 view .LVU461
 2054 0492 0E94 0000 		call timer_read32
 2055               	.LBE247:
 2056               	.LBE252:
 208:quantum/command.c ****     return;
 2057               		.loc 1 208 5 view .LVU462
 208:quantum/command.c ****     return;
 2058               		.loc 1 208 5 view .LVU463
 2059               	.LBB253:
 2060               	.LBB248:
 2061 0496 9F93      		push r25
 2062               	.LCFI138:
 2063               		.cfi_def_cfa_offset 17
 2064 0498 8F93      		push r24
 2065               	.LCFI139:
 2066               		.cfi_def_cfa_offset 18
 2067 049a 7F93      		push r23
 2068               	.LCFI140:
 2069               		.cfi_def_cfa_offset 19
 2070 049c 6F93      		push r22
 2071               	.LCFI141:
 2072               		.cfi_def_cfa_offset 20
 2073 049e 80E0      		ldi r24,lo8(__c.3911)
 2074 04a0 90E0      		ldi r25,hi8(__c.3911)
 2075 04a2 9F93      		push r25
 2076               	.LCFI142:
 2077               		.cfi_def_cfa_offset 21
 2078 04a4 8F93      		push r24
 2079               	.LCFI143:
 2080               		.cfi_def_cfa_offset 22
 2081 04a6 0E94 0000 		call __xprintf
 209:quantum/command.c **** }
 2082               		.loc 1 209 5 view .LVU464
 208:quantum/command.c ****     return;
 2083               		.loc 1 208 5 is_stmt 0 view .LVU465
 2084 04aa 8DB7      		in r24,__SP_L__
 2085 04ac 9EB7      		in r25,__SP_H__
 2086 04ae 4296      		adiw r24,18
 2087 04b0 0FB6      		in __tmp_reg__,__SREG__
 2088 04b2 F894      		cli
 2089 04b4 9EBF      		out __SP_H__,r25
 2090 04b6 0FBE      		out __SREG__,__tmp_reg__
 2091 04b8 8DBF      		out __SP_L__,r24
 2092               	.LCFI144:
 2093               		.cfi_def_cfa_offset 4
 2094 04ba 00C0      		rjmp .L98
 2095               	.L69:
 2096               	.LBE248:
 2097               	.LBE253:
 481:quantum/command.c ****             break;
 2098               		.loc 1 481 13 is_stmt 1 view .LVU466
 2099 04bc 8953      		subi r24,lo8(-(-57))
 2100 04be 00C0      		rjmp .L97
 2101               		.cfi_endproc
 2102               	.LFE31:
 2104               		.section	.text.command_extra,"ax",@progbits
 2105               		.weak	command_extra
 2107               	command_extra:
 2108               	.LVL47:
 2109               	.LFB25:
  92:quantum/command.c ****     (void)code;
 2110               		.loc 1 92 34 view -0
 2111               		.cfi_startproc
 2112               	/* prologue: function */
 2113               	/* frame size = 0 */
 2114               	/* stack size = 0 */
 2115               	.L__stack_usage = 0
  93:quantum/command.c ****     return false;
 2116               		.loc 1 93 5 view .LVU468
  94:quantum/command.c **** }
 2117               		.loc 1 94 5 view .LVU469
  95:quantum/command.c **** 
 2118               		.loc 1 95 1 is_stmt 0 view .LVU470
 2119 0000 80E0      		ldi r24,0
 2120               	.LVL48:
 2121               	/* epilogue start */
  95:quantum/command.c **** 
 2122               		.loc 1 95 1 view .LVU471
 2123 0002 0895      		ret
 2124               		.cfi_endproc
 2125               	.LFE25:
 2127               		.set	command_extra.localalias.0,command_extra
 2128               		.section	.text.command_console_extra,"ax",@progbits
 2129               		.weak	command_console_extra
 2131               	command_console_extra:
 2132               	.LFB42:
 2133               		.cfi_startproc
 2134               	/* prologue: function */
 2135               	/* frame size = 0 */
 2136               	/* stack size = 0 */
 2137               	.L__stack_usage = 0
 2138 0000 0C94 0000 		jmp command_extra.localalias.0
 2139               		.cfi_endproc
 2140               	.LFE42:
 2142               		.section	.text.numkey2num,"ax",@progbits
 2143               	.global	numkey2num
 2145               	numkey2num:
 2146               	.LVL49:
 2147               	.LFB39:
 756:quantum/command.c ****     switch (code) {
 2148               		.loc 1 756 34 is_stmt 1 view -0
 2149               		.cfi_startproc
 2150               	/* prologue: function */
 2151               	/* frame size = 0 */
 2152               	/* stack size = 0 */
 2153               	.L__stack_usage = 0
 757:quantum/command.c ****         case KC_1:
 2154               		.loc 1 757 5 view .LVU473
 2155 0000 8E51      		subi r24,lo8(-(-30))
 2156               	.LVL50:
 757:quantum/command.c ****         case KC_1:
 2157               		.loc 1 757 5 is_stmt 0 view .LVU474
 2158 0002 8A30      		cpi r24,lo8(10)
 2159 0004 00F4      		brsh .L106
 2160 0006 E82F      		mov r30,r24
 2161 0008 F0E0      		ldi r31,0
 2162 000a E050      		subi r30,lo8(-(CSWTCH.55))
 2163 000c F040      		sbci r31,hi8(-(CSWTCH.55))
 2164 000e 8081      		ld r24,Z
 2165               	.LVL51:
 757:quantum/command.c ****         case KC_1:
 2166               		.loc 1 757 5 view .LVU475
 2167 0010 0895      		ret
 2168               	.L106:
 756:quantum/command.c ****     switch (code) {
 2169               		.loc 1 756 34 view .LVU476
 2170 0012 80E0      		ldi r24,0
 2171               	/* epilogue start */
 780:quantum/command.c **** 
 2172               		.loc 1 780 1 view .LVU477
 2173 0014 0895      		ret
 2174               		.cfi_endproc
 2175               	.LFE39:
 2177               		.section	.text.command_proc,"ax",@progbits
 2178               	.global	command_proc
 2180               	command_proc:
 2181               	.LFB24:
  65:quantum/command.c ****     switch (command_state) {
 2182               		.loc 1 65 33 is_stmt 1 view -0
 2183               		.cfi_startproc
 2184 0000 CF93      		push r28
 2185               	.LCFI145:
 2186               		.cfi_def_cfa_offset 3
 2187               		.cfi_offset 28, -2
 2188               	/* prologue: function */
 2189               	/* frame size = 0 */
 2190               	/* stack size = 1 */
 2191               	.L__stack_usage = 1
 2192 0002 C82F      		mov r28,r24
  66:quantum/command.c ****         case ONESHOT:
 2193               		.loc 1 66 5 view .LVU479
 2194 0004 8091 0000 		lds r24,command_state
 2195 0008 8130      		cpi r24,lo8(1)
 2196 000a 01F0      		breq .L108
 2197 000c 8823      		tst r24
 2198 000e 01F0      		breq .L109
 2199 0010 8230      		cpi r24,lo8(2)
 2200 0012 01F4      		brne .+2
 2201 0014 00C0      		rjmp .L110
  83:quantum/command.c ****             return false;
 2202               		.loc 1 83 13 view .LVU480
  83:quantum/command.c ****             return false;
 2203               		.loc 1 83 27 is_stmt 0 view .LVU481
 2204 0016 1092 0000 		sts command_state,__zero_reg__
  84:quantum/command.c ****     }
 2205               		.loc 1 84 13 is_stmt 1 view .LVU482
 2206               	.L138:
  68:quantum/command.c ****             return (command_extra(code) || command_common(code));
 2207               		.loc 1 68 39 is_stmt 0 view .LVU483
 2208 001a 80E0      		ldi r24,0
 2209 001c 00C0      		rjmp .L107
 2210               	.L109:
  68:quantum/command.c ****             return (command_extra(code) || command_common(code));
 2211               		.loc 1 68 13 is_stmt 1 view .LVU484
  68:quantum/command.c ****             return (command_extra(code) || command_common(code));
 2212               		.loc 1 68 18 is_stmt 0 view .LVU485
 2213 001e 0E94 0000 		call get_mods
  68:quantum/command.c ****             return (command_extra(code) || command_common(code));
 2214               		.loc 1 68 16 view .LVU486
 2215 0022 8232      		cpi r24,lo8(34)
 2216 0024 01F4      		brne .L138
 2217               	.L171:
  73:quantum/command.c ****             else
 2218               		.loc 1 73 17 is_stmt 1 view .LVU487
  73:quantum/command.c ****             else
 2219               		.loc 1 73 25 is_stmt 0 view .LVU488
 2220 0026 8C2F      		mov r24,r28
 2221 0028 0E94 0000 		call command_extra
  73:quantum/command.c ****             else
 2222               		.loc 1 73 45 view .LVU489
 2223 002c 8111      		cpse r24,__zero_reg__
 2224 002e 00C0      		rjmp .L140
  73:quantum/command.c ****             else
 2225               		.loc 1 73 48 discriminator 2 view .LVU490
 2226 0030 8C2F      		mov r24,r28
 2227 0032 0E94 0000 		call command_common
 2228               	.L116:
  75:quantum/command.c ****             break;
 2229               		.loc 1 75 53 discriminator 6 view .LVU491
 2230 0036 8170      		andi r24,lo8(1)
 2231               	.L107:
 2232               	/* epilogue start */
  87:quantum/command.c **** 
 2233               		.loc 1 87 1 view .LVU492
 2234 0038 CF91      		pop r28
 2235 003a 0895      		ret
 2236               	.L108:
  70:quantum/command.c ****         case CONSOLE:
 2237               		.loc 1 70 13 is_stmt 1 view .LVU493
  72:quantum/command.c ****                 return (command_extra(code) || command_common(code));
 2238               		.loc 1 72 13 view .LVU494
  72:quantum/command.c ****                 return (command_extra(code) || command_common(code));
 2239               		.loc 1 72 17 is_stmt 0 view .LVU495
 2240 003c 0E94 0000 		call get_mods
  72:quantum/command.c ****                 return (command_extra(code) || command_common(code));
 2241               		.loc 1 72 16 view .LVU496
 2242 0040 8232      		cpi r24,lo8(34)
 2243 0042 01F0      		breq .L171
  75:quantum/command.c ****             break;
 2244               		.loc 1 75 17 is_stmt 1 view .LVU497
  75:quantum/command.c ****             break;
 2245               		.loc 1 75 25 is_stmt 0 view .LVU498
 2246 0044 8C2F      		mov r24,r28
 2247 0046 0E94 0000 		call command_console_extra
  75:quantum/command.c ****             break;
 2248               		.loc 1 75 53 view .LVU499
 2249 004a 8111      		cpse r24,__zero_reg__
 2250 004c 00C0      		rjmp .L141
 2251               	.LBB290:
 2252               	.LBI290:
 517:quantum/command.c ****     switch (code) {
 2253               		.loc 1 517 13 is_stmt 1 view .LVU500
 2254               	.LBB291:
 518:quantum/command.c ****         case KC_H:
 2255               		.loc 1 518 5 view .LVU501
 2256 004e C431      		cpi r28,lo8(20)
 2257 0050 01F0      		breq .L117
 2258 0052 00F4      		brsh .L118
 2259 0054 CB30      		cpi r28,lo8(11)
 2260 0056 01F0      		breq .L119
 2261 0058 C031      		cpi r28,lo8(16)
 2262 005a 01F0      		breq .L120
 2263               	.L121:
 535:quantum/command.c ****             return false;
 2264               		.loc 1 535 13 view .LVU502
 2265               	.LBE291:
 2266               	.LBE290:
 535:quantum/command.c ****             return false;
 2267               		.loc 1 535 13 view .LVU503
 535:quantum/command.c ****             return false;
 2268               		.loc 1 535 13 view .LVU504
 2269               	.LBB303:
 2270               	.LBB296:
 2271 005c 80E0      		ldi r24,lo8(__c.4086)
 2272 005e 90E0      		ldi r25,hi8(__c.4086)
 2273 0060 0E94 0000 		call xputs
 2274 0064 00C0      		rjmp .L164
 2275               	.L140:
 2276               	.LBE296:
 2277               	.LBE303:
  73:quantum/command.c ****             else
 2278               		.loc 1 73 45 is_stmt 0 view .LVU505
 2279 0066 81E0      		ldi r24,lo8(1)
 2280 0068 90E0      		ldi r25,0
 2281 006a 00C0      		rjmp .L116
 2282               	.L118:
 2283               	.LBB304:
 2284               	.LBB297:
 518:quantum/command.c ****         case KC_H:
 2285               		.loc 1 518 5 view .LVU506
 2286 006c C932      		cpi r28,lo8(41)
 2287 006e 01F0      		breq .L117
 2288 0070 C833      		cpi r28,lo8(56)
 2289 0072 01F4      		brne .L121
 2290               	.L119:
 521:quantum/command.c ****             break;
 2291               		.loc 1 521 13 is_stmt 1 view .LVU507
 2292               	.LBB292:
 2293               	.LBI292:
 508:quantum/command.c ****     print("\n\t- Console -\n"
 2294               		.loc 1 508 13 view .LVU508
 2295               	.LBB293:
 509:quantum/command.c ****           "ESC/q:	quit\n"
 2296               		.loc 1 509 5 view .LVU509
 2297               	.LBE293:
 2298               	.LBE292:
 2299               	.LBE297:
 2300               	.LBE304:
 509:quantum/command.c ****           "ESC/q:	quit\n"
 2301               		.loc 1 509 5 view .LVU510
 509:quantum/command.c ****           "ESC/q:	quit\n"
 2302               		.loc 1 509 5 view .LVU511
 2303               	.LBB305:
 2304               	.LBB298:
 2305               	.LBB295:
 2306               	.LBB294:
 2307 0074 80E0      		ldi r24,lo8(__c.4072)
 2308 0076 90E0      		ldi r25,hi8(__c.4072)
 2309 0078 0E94 0000 		call xputs
 2310               	.LBE294:
 2311               	.LBE295:
 522:quantum/command.c ****         case KC_Q:
 2312               		.loc 1 522 13 view .LVU512
 538:quantum/command.c ****     return true;
 2313               		.loc 1 538 5 view .LVU513
 2314               	.LBE298:
 2315               	.LBE305:
 538:quantum/command.c ****     return true;
 2316               		.loc 1 538 5 view .LVU514
 538:quantum/command.c ****     return true;
 2317               		.loc 1 538 5 view .LVU515
 2318               	.LBB306:
 2319               	.LBB299:
 2320 007c 80E0      		ldi r24,lo8(__c.4088)
 2321 007e 90E0      		ldi r25,hi8(__c.4088)
 2322 0080 0E94 0000 		call xputs
 539:quantum/command.c **** }
 2323               		.loc 1 539 5 view .LVU516
 2324               	.L141:
 2325               	.LBE299:
 2326               	.LBE306:
  75:quantum/command.c ****             break;
 2327               		.loc 1 75 53 is_stmt 0 view .LVU517
 2328 0084 81E0      		ldi r24,lo8(1)
 2329 0086 00C0      		rjmp .L116
 2330               	.L117:
 2331               	.LBB307:
 2332               	.LBB300:
 525:quantum/command.c ****             return false;
 2333               		.loc 1 525 13 is_stmt 1 view .LVU518
 525:quantum/command.c ****             return false;
 2334               		.loc 1 525 27 is_stmt 0 view .LVU519
 2335 0088 1092 0000 		sts command_state,__zero_reg__
 526:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
 2336               		.loc 1 526 13 is_stmt 1 view .LVU520
 2337               	.L164:
 536:quantum/command.c ****     }
 2338               		.loc 1 536 13 view .LVU521
 2339               	.LBE300:
 2340               	.LBE307:
  75:quantum/command.c ****             break;
 2341               		.loc 1 75 53 is_stmt 0 view .LVU522
 2342 008c 80E0      		ldi r24,0
 2343 008e 00C0      		rjmp .L116
 2344               	.L120:
 2345               	.LBB308:
 2346               	.LBB301:
 529:quantum/command.c ****             print("M> ");
 2347               		.loc 1 529 13 is_stmt 1 view .LVU523
 2348 0090 0E94 0000 		call mousekey_console_help
 530:quantum/command.c ****             command_state = MOUSEKEY;
 2349               		.loc 1 530 13 view .LVU524
 2350               	.LBE301:
 2351               	.LBE308:
 530:quantum/command.c ****             command_state = MOUSEKEY;
 2352               		.loc 1 530 13 view .LVU525
 530:quantum/command.c ****             command_state = MOUSEKEY;
 2353               		.loc 1 530 13 view .LVU526
 2354               	.LBB309:
 2355               	.LBB302:
 2356 0094 80E0      		ldi r24,lo8(__c.4083)
 2357 0096 90E0      		ldi r25,hi8(__c.4083)
 2358 0098 0E94 0000 		call xputs
 531:quantum/command.c ****             return true;
 2359               		.loc 1 531 13 view .LVU527
 531:quantum/command.c ****             return true;
 2360               		.loc 1 531 27 is_stmt 0 view .LVU528
 2361 009c 82E0      		ldi r24,lo8(2)
 2362 009e 8093 0000 		sts command_state,r24
 532:quantum/command.c **** #endif
 2363               		.loc 1 532 13 is_stmt 1 view .LVU529
 2364 00a2 00C0      		rjmp .L141
 2365               	.L110:
 2366               	.LBE302:
 2367               	.LBE309:
  76:quantum/command.c **** #if defined(MOUSEKEY_ENABLE) && !defined(MK_3_SPEED)
 2368               		.loc 1 76 13 view .LVU530
  79:quantum/command.c ****             break;
 2369               		.loc 1 79 13 view .LVU531
 2370               	.LBB310:
 2371               	.LBI310:
 692:quantum/command.c ****     switch (code) {
 2372               		.loc 1 692 13 view .LVU532
 2373               	.LBB311:
 693:quantum/command.c ****         case KC_H:
 2374               		.loc 1 693 5 view .LVU533
 2375 00a4 C432      		cpi r28,lo8(36)
 2376 00a6 00F4      		brsh .L122
 2377 00a8 CE31      		cpi r28,lo8(30)
 2378 00aa 00F0      		brlo .+2
 2379 00ac 00C0      		rjmp .L123
 2380 00ae CB30      		cpi r28,lo8(11)
 2381 00b0 01F0      		breq .L124
 2382 00b2 00F4      		brsh .L125
 2383 00b4 C730      		cpi r28,lo8(7)
 2384 00b6 01F4      		brne .+2
 2385 00b8 00C0      		rjmp .L126
 2386               	.L127:
 741:quantum/command.c ****             return false;
 2387               		.loc 1 741 13 view .LVU534
 2388               	.LBE311:
 2389               	.LBE310:
 741:quantum/command.c ****             return false;
 2390               		.loc 1 741 13 view .LVU535
 741:quantum/command.c ****             return false;
 2391               		.loc 1 741 13 view .LVU536
 2392               	.LBB377:
 2393               	.LBB352:
 2394 00ba 80E0      		ldi r24,lo8(__c.4210)
 2395 00bc 90E0      		ldi r25,hi8(__c.4210)
 2396               	.L168:
 747:quantum/command.c ****     }
 2397               		.loc 1 747 9 is_stmt 0 view .LVU537
 2398 00be 0E94 0000 		call xputs
 2399 00c2 00C0      		rjmp .L167
 2400               	.L125:
 693:quantum/command.c ****         case KC_H:
 2401               		.loc 1 693 5 view .LVU538
 2402 00c4 C331      		cpi r28,lo8(19)
 2403 00c6 01F0      		breq .L128
 2404 00c8 C431      		cpi r28,lo8(20)
 2405 00ca 01F4      		brne .L127
 2406               	.L129:
 700:quantum/command.c ****                 mousekey_param = 0;
 2407               		.loc 1 700 13 is_stmt 1 view .LVU539
 700:quantum/command.c ****                 mousekey_param = 0;
 2408               		.loc 1 700 16 is_stmt 0 view .LVU540
 2409 00cc 8091 0000 		lds r24,mousekey_param
 2410 00d0 8823      		tst r24
 2411 00d2 01F0      		breq .L136
 701:quantum/command.c ****             } else {
 2412               		.loc 1 701 17 is_stmt 1 view .LVU541
 701:quantum/command.c ****             } else {
 2413               		.loc 1 701 32 is_stmt 0 view .LVU542
 2414 00d4 1092 0000 		sts mousekey_param,__zero_reg__
 707:quantum/command.c ****         case KC_P:
 2415               		.loc 1 707 13 is_stmt 1 view .LVU543
 2416 00d8 00C0      		rjmp .L135
 2417               	.L122:
 693:quantum/command.c ****         case KC_H:
 2418               		.loc 1 693 5 is_stmt 0 view .LVU544
 2419 00da CB34      		cpi r28,lo8(75)
 2420 00dc 01F4      		brne .+2
 2421 00de 00C0      		rjmp .L130
 2422 00e0 00F4      		brsh .L131
 2423 00e2 C932      		cpi r28,lo8(41)
 2424 00e4 01F0      		breq .L129
 2425 00e6 C833      		cpi r28,lo8(56)
 2426 00e8 01F4      		brne .L127
 2427               	.L124:
 696:quantum/command.c ****             break;
 2428               		.loc 1 696 13 is_stmt 1 view .LVU545
 2429 00ea 0E94 0000 		call mousekey_console_help
 697:quantum/command.c ****         case KC_Q:
 2430               		.loc 1 697 13 view .LVU546
 2431               	.L135:
 744:quantum/command.c ****         xprintf("M%d> ", mousekey_param);
 2432               		.loc 1 744 5 view .LVU547
 744:quantum/command.c ****         xprintf("M%d> ", mousekey_param);
 2433               		.loc 1 744 9 is_stmt 0 view .LVU548
 2434 00ee 8091 0000 		lds r24,mousekey_param
 744:quantum/command.c ****         xprintf("M%d> ", mousekey_param);
 2435               		.loc 1 744 8 view .LVU549
 2436 00f2 8823      		tst r24
 2437 00f4 01F4      		brne .+2
 2438 00f6 00C0      		rjmp .L137
 745:quantum/command.c ****     } else {
 2439               		.loc 1 745 9 is_stmt 1 view .LVU550
 2440               	.LBE352:
 2441               	.LBE377:
 745:quantum/command.c ****     } else {
 2442               		.loc 1 745 9 view .LVU551
 745:quantum/command.c ****     } else {
 2443               		.loc 1 745 9 view .LVU552
 2444               	.LBB378:
 2445               	.LBB353:
 2446 00f8 1F92      		push __zero_reg__
 2447               	.LCFI146:
 2448               		.cfi_def_cfa_offset 4
 2449 00fa 8F93      		push r24
 2450               	.LCFI147:
 2451               		.cfi_def_cfa_offset 5
 2452 00fc 80E0      		ldi r24,lo8(__c.4212)
 2453 00fe 90E0      		ldi r25,hi8(__c.4212)
 2454 0100 9F93      		push r25
 2455               	.LCFI148:
 2456               		.cfi_def_cfa_offset 6
 2457 0102 8F93      		push r24
 2458               	.LCFI149:
 2459               		.cfi_def_cfa_offset 7
 2460 0104 0E94 0000 		call __xprintf
 2461 0108 0F90      		pop __tmp_reg__
 2462 010a 0F90      		pop __tmp_reg__
 2463 010c 0F90      		pop __tmp_reg__
 2464 010e 0F90      		pop __tmp_reg__
 2465               	.LCFI150:
 2466               		.cfi_def_cfa_offset 3
 2467               	.L167:
 2468               	.LBE353:
 2469               	.LBE378:
  86:quantum/command.c **** }
 2470               		.loc 1 86 12 is_stmt 0 view .LVU553
 2471 0110 81E0      		ldi r24,lo8(1)
 2472 0112 00C0      		rjmp .L107
 2473               	.L131:
 2474               	.LBB379:
 2475               	.LBB354:
 693:quantum/command.c ****         case KC_H:
 2476               		.loc 1 693 5 view .LVU554
 2477 0114 C135      		cpi r28,lo8(81)
 2478 0116 01F4      		brne .+2
 2479 0118 00C0      		rjmp .L132
 2480 011a C235      		cpi r28,lo8(82)
 2481 011c 01F4      		brne .+2
 2482 011e 00C0      		rjmp .L133
 2483 0120 CE34      		cpi r28,lo8(78)
 2484 0122 01F4      		brne .L127
 729:quantum/command.c ****             break;
 2485               		.loc 1 729 13 is_stmt 1 view .LVU555
 2486 0124 6AE0      		ldi r22,lo8(10)
 2487 0126 00C0      		rjmp .L166
 2488               	.L136:
 703:quantum/command.c ****                 command_state = CONSOLE;
 2489               		.loc 1 703 17 view .LVU556
 2490               	.LBE354:
 2491               	.LBE379:
 703:quantum/command.c ****                 command_state = CONSOLE;
 2492               		.loc 1 703 17 view .LVU557
 703:quantum/command.c ****                 command_state = CONSOLE;
 2493               		.loc 1 703 17 view .LVU558
 2494               	.LBB380:
 2495               	.LBB355:
 2496 0128 80E0      		ldi r24,lo8(__c.4193)
 2497 012a 90E0      		ldi r25,hi8(__c.4193)
 2498 012c 0E94 0000 		call xputs
 704:quantum/command.c ****                 return false;
 2499               		.loc 1 704 17 view .LVU559
 704:quantum/command.c ****                 return false;
 2500               		.loc 1 704 31 is_stmt 0 view .LVU560
 2501 0130 81E0      		ldi r24,lo8(1)
 2502 0132 8093 0000 		sts command_state,r24
 705:quantum/command.c ****             }
 2503               		.loc 1 705 17 is_stmt 1 view .LVU561
 2504 0136 00C0      		rjmp .L107
 2505               	.L128:
 709:quantum/command.c ****             break;
 2506               		.loc 1 709 13 view .LVU562
 2507               	.LBB312:
 2508               	.LBI312:
 548:quantum/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 2509               		.loc 1 548 13 view .LVU563
 2510               	.LBB313:
 551:quantum/command.c ****     print("1: delay(*10ms): ");
 2511               		.loc 1 551 5 view .LVU564
 2512               	.LBE313:
 2513               	.LBE312:
 2514               	.LBE355:
 2515               	.LBE380:
 551:quantum/command.c ****     print("1: delay(*10ms): ");
 2516               		.loc 1 551 5 view .LVU565
 551:quantum/command.c ****     print("1: delay(*10ms): ");
 2517               		.loc 1 551 5 view .LVU566
 2518               	.LBB381:
 2519               	.LBB356:
 2520               	.LBB333:
 2521               	.LBB314:
 2522 0138 80E0      		ldi r24,lo8(__c.4094)
 2523 013a 90E0      		ldi r25,hi8(__c.4094)
 2524 013c 0E94 0000 		call xputs
 552:quantum/command.c ****     print_dec(mk_delay);
 2525               		.loc 1 552 5 view .LVU567
 2526               	.LBE314:
 2527               	.LBE333:
 2528               	.LBE356:
 2529               	.LBE381:
 552:quantum/command.c ****     print_dec(mk_delay);
 2530               		.loc 1 552 5 view .LVU568
 552:quantum/command.c ****     print_dec(mk_delay);
 2531               		.loc 1 552 5 view .LVU569
 2532               	.LBB382:
 2533               	.LBB357:
 2534               	.LBB334:
 2535               	.LBB315:
 2536 0140 80E0      		ldi r24,lo8(__c.4096)
 2537 0142 90E0      		ldi r25,hi8(__c.4096)
 2538 0144 0E94 0000 		call xputs
 553:quantum/command.c ****     print("\n");
 2539               		.loc 1 553 5 view .LVU570
 2540               	.LBE315:
 2541               	.LBE334:
 2542               	.LBE357:
 2543               	.LBE382:
 553:quantum/command.c ****     print("\n");
 2544               		.loc 1 553 5 view .LVU571
 553:quantum/command.c ****     print("\n");
 2545               		.loc 1 553 5 view .LVU572
 2546               	.LBB383:
 2547               	.LBB358:
 2548               	.LBB335:
 2549               	.LBB316:
 2550 0148 8091 0000 		lds r24,mk_delay
 2551 014c 1F92      		push __zero_reg__
 2552               	.LCFI151:
 2553               		.cfi_def_cfa_offset 4
 2554 014e 8F93      		push r24
 2555               	.LCFI152:
 2556               		.cfi_def_cfa_offset 5
 2557 0150 80E0      		ldi r24,lo8(__c.4098)
 2558 0152 90E0      		ldi r25,hi8(__c.4098)
 2559 0154 9F93      		push r25
 2560               	.LCFI153:
 2561               		.cfi_def_cfa_offset 6
 2562 0156 8F93      		push r24
 2563               	.LCFI154:
 2564               		.cfi_def_cfa_offset 7
 2565 0158 0E94 0000 		call __xprintf
 554:quantum/command.c ****     print("2: interval(ms): ");
 2566               		.loc 1 554 5 view .LVU573
 2567               	.LBE316:
 2568               	.LBE335:
 2569               	.LBE358:
 2570               	.LBE383:
 554:quantum/command.c ****     print("2: interval(ms): ");
 2571               		.loc 1 554 5 view .LVU574
 554:quantum/command.c ****     print("2: interval(ms): ");
 2572               		.loc 1 554 5 view .LVU575
 2573               	.LBB384:
 2574               	.LBB359:
 2575               	.LBB336:
 2576               	.LBB317:
 2577 015c 80E0      		ldi r24,lo8(__c.4100)
 2578 015e 90E0      		ldi r25,hi8(__c.4100)
 2579 0160 0E94 0000 		call xputs
 555:quantum/command.c ****     print_dec(mk_interval);
 2580               		.loc 1 555 5 view .LVU576
 2581               	.LBE317:
 2582               	.LBE336:
 2583               	.LBE359:
 2584               	.LBE384:
 555:quantum/command.c ****     print_dec(mk_interval);
 2585               		.loc 1 555 5 view .LVU577
 555:quantum/command.c ****     print_dec(mk_interval);
 2586               		.loc 1 555 5 view .LVU578
 2587               	.LBB385:
 2588               	.LBB360:
 2589               	.LBB337:
 2590               	.LBB318:
 2591 0164 80E0      		ldi r24,lo8(__c.4102)
 2592 0166 90E0      		ldi r25,hi8(__c.4102)
 2593 0168 0E94 0000 		call xputs
 556:quantum/command.c ****     print("\n");
 2594               		.loc 1 556 5 view .LVU579
 2595               	.LBE318:
 2596               	.LBE337:
 2597               	.LBE360:
 2598               	.LBE385:
 556:quantum/command.c ****     print("\n");
 2599               		.loc 1 556 5 view .LVU580
 556:quantum/command.c ****     print("\n");
 2600               		.loc 1 556 5 view .LVU581
 2601               	.LBB386:
 2602               	.LBB361:
 2603               	.LBB338:
 2604               	.LBB319:
 2605 016c 8091 0000 		lds r24,mk_interval
 2606 0170 1F92      		push __zero_reg__
 2607               	.LCFI155:
 2608               		.cfi_def_cfa_offset 8
 2609 0172 8F93      		push r24
 2610               	.LCFI156:
 2611               		.cfi_def_cfa_offset 9
 2612 0174 80E0      		ldi r24,lo8(__c.4104)
 2613 0176 90E0      		ldi r25,hi8(__c.4104)
 2614 0178 9F93      		push r25
 2615               	.LCFI157:
 2616               		.cfi_def_cfa_offset 10
 2617 017a 8F93      		push r24
 2618               	.LCFI158:
 2619               		.cfi_def_cfa_offset 11
 2620 017c 0E94 0000 		call __xprintf
 557:quantum/command.c ****     print("3: max_speed: ");
 2621               		.loc 1 557 5 view .LVU582
 2622               	.LBE319:
 2623               	.LBE338:
 2624               	.LBE361:
 2625               	.LBE386:
 557:quantum/command.c ****     print("3: max_speed: ");
 2626               		.loc 1 557 5 view .LVU583
 557:quantum/command.c ****     print("3: max_speed: ");
 2627               		.loc 1 557 5 view .LVU584
 2628               	.LBB387:
 2629               	.LBB362:
 2630               	.LBB339:
 2631               	.LBB320:
 2632 0180 80E0      		ldi r24,lo8(__c.4106)
 2633 0182 90E0      		ldi r25,hi8(__c.4106)
 2634 0184 0E94 0000 		call xputs
 558:quantum/command.c ****     print_dec(mk_max_speed);
 2635               		.loc 1 558 5 view .LVU585
 2636               	.LBE320:
 2637               	.LBE339:
 2638               	.LBE362:
 2639               	.LBE387:
 558:quantum/command.c ****     print_dec(mk_max_speed);
 2640               		.loc 1 558 5 view .LVU586
 558:quantum/command.c ****     print_dec(mk_max_speed);
 2641               		.loc 1 558 5 view .LVU587
 2642               	.LBB388:
 2643               	.LBB363:
 2644               	.LBB340:
 2645               	.LBB321:
 2646 0188 80E0      		ldi r24,lo8(__c.4108)
 2647 018a 90E0      		ldi r25,hi8(__c.4108)
 2648 018c 0E94 0000 		call xputs
 559:quantum/command.c ****     print("\n");
 2649               		.loc 1 559 5 view .LVU588
 2650               	.LBE321:
 2651               	.LBE340:
 2652               	.LBE363:
 2653               	.LBE388:
 559:quantum/command.c ****     print("\n");
 2654               		.loc 1 559 5 view .LVU589
 559:quantum/command.c ****     print("\n");
 2655               		.loc 1 559 5 view .LVU590
 2656               	.LBB389:
 2657               	.LBB364:
 2658               	.LBB341:
 2659               	.LBB322:
 2660 0190 8091 0000 		lds r24,mk_max_speed
 2661 0194 1F92      		push __zero_reg__
 2662               	.LCFI159:
 2663               		.cfi_def_cfa_offset 12
 2664 0196 8F93      		push r24
 2665               	.LCFI160:
 2666               		.cfi_def_cfa_offset 13
 2667 0198 80E0      		ldi r24,lo8(__c.4110)
 2668 019a 90E0      		ldi r25,hi8(__c.4110)
 2669 019c 9F93      		push r25
 2670               	.LCFI161:
 2671               		.cfi_def_cfa_offset 14
 2672 019e 8F93      		push r24
 2673               	.LCFI162:
 2674               		.cfi_def_cfa_offset 15
 2675 01a0 0E94 0000 		call __xprintf
 560:quantum/command.c ****     print("4: time_to_max: ");
 2676               		.loc 1 560 5 view .LVU591
 2677               	.LBE322:
 2678               	.LBE341:
 2679               	.LBE364:
 2680               	.LBE389:
 560:quantum/command.c ****     print("4: time_to_max: ");
 2681               		.loc 1 560 5 view .LVU592
 560:quantum/command.c ****     print("4: time_to_max: ");
 2682               		.loc 1 560 5 view .LVU593
 2683               	.LBB390:
 2684               	.LBB365:
 2685               	.LBB342:
 2686               	.LBB323:
 2687 01a4 80E0      		ldi r24,lo8(__c.4112)
 2688 01a6 90E0      		ldi r25,hi8(__c.4112)
 2689 01a8 0E94 0000 		call xputs
 561:quantum/command.c ****     print_dec(mk_time_to_max);
 2690               		.loc 1 561 5 view .LVU594
 2691               	.LBE323:
 2692               	.LBE342:
 2693               	.LBE365:
 2694               	.LBE390:
 561:quantum/command.c ****     print_dec(mk_time_to_max);
 2695               		.loc 1 561 5 view .LVU595
 561:quantum/command.c ****     print_dec(mk_time_to_max);
 2696               		.loc 1 561 5 view .LVU596
 2697               	.LBB391:
 2698               	.LBB366:
 2699               	.LBB343:
 2700               	.LBB324:
 2701 01ac 80E0      		ldi r24,lo8(__c.4114)
 2702 01ae 90E0      		ldi r25,hi8(__c.4114)
 2703 01b0 0E94 0000 		call xputs
 562:quantum/command.c ****     print("\n");
 2704               		.loc 1 562 5 view .LVU597
 2705               	.LBE324:
 2706               	.LBE343:
 2707               	.LBE366:
 2708               	.LBE391:
 562:quantum/command.c ****     print("\n");
 2709               		.loc 1 562 5 view .LVU598
 562:quantum/command.c ****     print("\n");
 2710               		.loc 1 562 5 view .LVU599
 2711               	.LBB392:
 2712               	.LBB367:
 2713               	.LBB344:
 2714               	.LBB325:
 2715 01b4 8091 0000 		lds r24,mk_time_to_max
 2716 01b8 1F92      		push __zero_reg__
 2717               	.LCFI163:
 2718               		.cfi_def_cfa_offset 16
 2719 01ba 8F93      		push r24
 2720               	.LCFI164:
 2721               		.cfi_def_cfa_offset 17
 2722 01bc 80E0      		ldi r24,lo8(__c.4116)
 2723 01be 90E0      		ldi r25,hi8(__c.4116)
 2724 01c0 9F93      		push r25
 2725               	.LCFI165:
 2726               		.cfi_def_cfa_offset 18
 2727 01c2 8F93      		push r24
 2728               	.LCFI166:
 2729               		.cfi_def_cfa_offset 19
 2730 01c4 0E94 0000 		call __xprintf
 563:quantum/command.c ****     print("5: wheel_max_speed: ");
 2731               		.loc 1 563 5 view .LVU600
 2732               	.LBE325:
 2733               	.LBE344:
 2734               	.LBE367:
 2735               	.LBE392:
 563:quantum/command.c ****     print("5: wheel_max_speed: ");
 2736               		.loc 1 563 5 view .LVU601
 563:quantum/command.c ****     print("5: wheel_max_speed: ");
 2737               		.loc 1 563 5 view .LVU602
 2738               	.LBB393:
 2739               	.LBB368:
 2740               	.LBB345:
 2741               	.LBB326:
 2742 01c8 80E0      		ldi r24,lo8(__c.4118)
 2743 01ca 90E0      		ldi r25,hi8(__c.4118)
 2744 01cc 0E94 0000 		call xputs
 564:quantum/command.c ****     print_dec(mk_wheel_max_speed);
 2745               		.loc 1 564 5 view .LVU603
 2746               	.LBE326:
 2747               	.LBE345:
 2748               	.LBE368:
 2749               	.LBE393:
 564:quantum/command.c ****     print_dec(mk_wheel_max_speed);
 2750               		.loc 1 564 5 view .LVU604
 564:quantum/command.c ****     print_dec(mk_wheel_max_speed);
 2751               		.loc 1 564 5 view .LVU605
 2752               	.LBB394:
 2753               	.LBB369:
 2754               	.LBB346:
 2755               	.LBB327:
 2756 01d0 80E0      		ldi r24,lo8(__c.4120)
 2757 01d2 90E0      		ldi r25,hi8(__c.4120)
 2758 01d4 0E94 0000 		call xputs
 565:quantum/command.c ****     print("\n");
 2759               		.loc 1 565 5 view .LVU606
 2760               	.LBE327:
 2761               	.LBE346:
 2762               	.LBE369:
 2763               	.LBE394:
 565:quantum/command.c ****     print("\n");
 2764               		.loc 1 565 5 view .LVU607
 565:quantum/command.c ****     print("\n");
 2765               		.loc 1 565 5 view .LVU608
 2766               	.LBB395:
 2767               	.LBB370:
 2768               	.LBB347:
 2769               	.LBB328:
 2770 01d8 8091 0000 		lds r24,mk_wheel_max_speed
 2771 01dc 1F92      		push __zero_reg__
 2772               	.LCFI167:
 2773               		.cfi_def_cfa_offset 20
 2774 01de 8F93      		push r24
 2775               	.LCFI168:
 2776               		.cfi_def_cfa_offset 21
 2777 01e0 80E0      		ldi r24,lo8(__c.4122)
 2778 01e2 90E0      		ldi r25,hi8(__c.4122)
 2779 01e4 9F93      		push r25
 2780               	.LCFI169:
 2781               		.cfi_def_cfa_offset 22
 2782 01e6 8F93      		push r24
 2783               	.LCFI170:
 2784               		.cfi_def_cfa_offset 23
 2785 01e8 0E94 0000 		call __xprintf
 566:quantum/command.c ****     print("6: wheel_time_to_max: ");
 2786               		.loc 1 566 5 view .LVU609
 2787               	.LBE328:
 2788               	.LBE347:
 2789               	.LBE370:
 2790               	.LBE395:
 566:quantum/command.c ****     print("6: wheel_time_to_max: ");
 2791               		.loc 1 566 5 view .LVU610
 566:quantum/command.c ****     print("6: wheel_time_to_max: ");
 2792               		.loc 1 566 5 view .LVU611
 2793               	.LBB396:
 2794               	.LBB371:
 2795               	.LBB348:
 2796               	.LBB329:
 2797 01ec 80E0      		ldi r24,lo8(__c.4124)
 2798 01ee 90E0      		ldi r25,hi8(__c.4124)
 2799 01f0 0E94 0000 		call xputs
 567:quantum/command.c ****     print_dec(mk_wheel_time_to_max);
 2800               		.loc 1 567 5 view .LVU612
 2801               	.LBE329:
 2802               	.LBE348:
 2803               	.LBE371:
 2804               	.LBE396:
 567:quantum/command.c ****     print_dec(mk_wheel_time_to_max);
 2805               		.loc 1 567 5 view .LVU613
 567:quantum/command.c ****     print_dec(mk_wheel_time_to_max);
 2806               		.loc 1 567 5 view .LVU614
 2807               	.LBB397:
 2808               	.LBB372:
 2809               	.LBB349:
 2810               	.LBB330:
 2811 01f4 80E0      		ldi r24,lo8(__c.4126)
 2812 01f6 90E0      		ldi r25,hi8(__c.4126)
 2813 01f8 0E94 0000 		call xputs
 568:quantum/command.c ****     print("\n");
 2814               		.loc 1 568 5 view .LVU615
 2815               	.LBE330:
 2816               	.LBE349:
 2817               	.LBE372:
 2818               	.LBE397:
 568:quantum/command.c ****     print("\n");
 2819               		.loc 1 568 5 view .LVU616
 568:quantum/command.c ****     print("\n");
 2820               		.loc 1 568 5 view .LVU617
 2821               	.LBB398:
 2822               	.LBB373:
 2823               	.LBB350:
 2824               	.LBB331:
 2825 01fc 8091 0000 		lds r24,mk_wheel_time_to_max
 2826 0200 1F92      		push __zero_reg__
 2827               	.LCFI171:
 2828               		.cfi_def_cfa_offset 24
 2829 0202 8F93      		push r24
 2830               	.LCFI172:
 2831               		.cfi_def_cfa_offset 25
 2832 0204 80E0      		ldi r24,lo8(__c.4128)
 2833 0206 90E0      		ldi r25,hi8(__c.4128)
 2834 0208 9F93      		push r25
 2835               	.LCFI173:
 2836               		.cfi_def_cfa_offset 26
 2837 020a 8F93      		push r24
 2838               	.LCFI174:
 2839               		.cfi_def_cfa_offset 27
 2840 020c 0E94 0000 		call __xprintf
 569:quantum/command.c **** #    endif /* !NO_PRINT */
 2841               		.loc 1 569 5 view .LVU618
 2842               	.LBE331:
 2843               	.LBE350:
 2844               	.LBE373:
 2845               	.LBE398:
 569:quantum/command.c **** #    endif /* !NO_PRINT */
 2846               		.loc 1 569 5 view .LVU619
 569:quantum/command.c **** #    endif /* !NO_PRINT */
 2847               		.loc 1 569 5 view .LVU620
 2848               	.LBB399:
 2849               	.LBB374:
 2850               	.LBB351:
 2851               	.LBB332:
 2852 0210 80E0      		ldi r24,lo8(__c.4130)
 2853 0212 90E0      		ldi r25,hi8(__c.4130)
 2854 0214 0E94 0000 		call xputs
 2855 0218 8DB7      		in r24,__SP_L__
 2856 021a 9EB7      		in r25,__SP_H__
 2857 021c 4896      		adiw r24,24
 2858 021e 0FB6      		in __tmp_reg__,__SREG__
 2859 0220 F894      		cli
 2860 0222 9EBF      		out __SP_H__,r25
 2861 0224 0FBE      		out __SREG__,__tmp_reg__
 2862 0226 8DBF      		out __SP_L__,r24
 2863               	.LCFI175:
 2864               		.cfi_def_cfa_offset 3
 2865 0228 00C0      		rjmp .L135
 2866               	.L123:
 2867               	.LBE332:
 2868               	.LBE351:
 717:quantum/command.c ****             break;
 2869               		.loc 1 717 13 view .LVU621
 717:quantum/command.c ****             break;
 2870               		.loc 1 717 30 is_stmt 0 view .LVU622
 2871 022a 8C2F      		mov r24,r28
 2872 022c 0E94 0000 		call numkey2num
 717:quantum/command.c ****             break;
 2873               		.loc 1 717 28 view .LVU623
 2874 0230 8093 0000 		sts mousekey_param,r24
 718:quantum/command.c ****         case KC_UP:
 2875               		.loc 1 718 13 is_stmt 1 view .LVU624
 2876 0234 00C0      		rjmp .L135
 2877               	.L133:
 720:quantum/command.c ****             break;
 2878               		.loc 1 720 13 view .LVU625
 2879 0236 61E0      		ldi r22,lo8(1)
 2880               	.L165:
 726:quantum/command.c ****             break;
 2881               		.loc 1 726 13 is_stmt 0 view .LVU626
 2882 0238 8091 0000 		lds r24,mousekey_param
 2883 023c 0E94 0000 		call mousekey_param_inc
 727:quantum/command.c ****         case KC_PGDN:
 2884               		.loc 1 727 13 is_stmt 1 view .LVU627
 2885 0240 00C0      		rjmp .L135
 2886               	.L132:
 723:quantum/command.c ****             break;
 2887               		.loc 1 723 13 view .LVU628
 2888 0242 61E0      		ldi r22,lo8(1)
 2889               	.L166:
 729:quantum/command.c ****             break;
 2890               		.loc 1 729 13 is_stmt 0 view .LVU629
 2891 0244 8091 0000 		lds r24,mousekey_param
 2892 0248 0E94 0000 		call mousekey_param_dec
 730:quantum/command.c ****         case KC_D:
 2893               		.loc 1 730 13 is_stmt 1 view .LVU630
 2894 024c 00C0      		rjmp .L135
 2895               	.L130:
 726:quantum/command.c ****             break;
 2896               		.loc 1 726 13 view .LVU631
 2897 024e 6AE0      		ldi r22,lo8(10)
 2898 0250 00C0      		rjmp .L165
 2899               	.L126:
 732:quantum/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 2900               		.loc 1 732 13 view .LVU632
 732:quantum/command.c ****             mk_interval          = MOUSEKEY_INTERVAL;
 2901               		.loc 1 732 34 is_stmt 0 view .LVU633
 2902 0252 8EE1      		ldi r24,lo8(30)
 2903 0254 8093 0000 		sts mk_delay,r24
 733:quantum/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 2904               		.loc 1 733 13 is_stmt 1 view .LVU634
 733:quantum/command.c ****             mk_max_speed         = MOUSEKEY_MAX_SPEED;
 2905               		.loc 1 733 34 is_stmt 0 view .LVU635
 2906 0258 82E3      		ldi r24,lo8(50)
 2907 025a 8093 0000 		sts mk_interval,r24
 734:quantum/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 2908               		.loc 1 734 13 is_stmt 1 view .LVU636
 734:quantum/command.c ****             mk_time_to_max       = MOUSEKEY_TIME_TO_MAX;
 2909               		.loc 1 734 34 is_stmt 0 view .LVU637
 2910 025e 8AE0      		ldi r24,lo8(10)
 2911 0260 8093 0000 		sts mk_max_speed,r24
 735:quantum/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 2912               		.loc 1 735 13 is_stmt 1 view .LVU638
 735:quantum/command.c ****             mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
 2913               		.loc 1 735 34 is_stmt 0 view .LVU639
 2914 0264 84E1      		ldi r24,lo8(20)
 2915 0266 8093 0000 		sts mk_time_to_max,r24
 736:quantum/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2916               		.loc 1 736 13 is_stmt 1 view .LVU640
 736:quantum/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2917               		.loc 1 736 34 is_stmt 0 view .LVU641
 2918 026a 88E0      		ldi r24,lo8(8)
 2919 026c 8093 0000 		sts mk_wheel_max_speed,r24
 737:quantum/command.c ****             print("set default\n");
 2920               		.loc 1 737 13 is_stmt 1 view .LVU642
 737:quantum/command.c ****             print("set default\n");
 2921               		.loc 1 737 34 is_stmt 0 view .LVU643
 2922 0270 88E2      		ldi r24,lo8(40)
 2923 0272 8093 0000 		sts mk_wheel_time_to_max,r24
 738:quantum/command.c ****             break;
 2924               		.loc 1 738 13 is_stmt 1 view .LVU644
 2925               	.LBE374:
 2926               	.LBE399:
 738:quantum/command.c ****             break;
 2927               		.loc 1 738 13 view .LVU645
 738:quantum/command.c ****             break;
 2928               		.loc 1 738 13 view .LVU646
 2929               	.LBB400:
 2930               	.LBB375:
 2931 0276 80E0      		ldi r24,lo8(__c.4207)
 2932 0278 90E0      		ldi r25,hi8(__c.4207)
 2933 027a 0E94 0000 		call xputs
 739:quantum/command.c ****         default:
 2934               		.loc 1 739 13 view .LVU647
 2935 027e 00C0      		rjmp .L135
 2936               	.L137:
 747:quantum/command.c ****     }
 2937               		.loc 1 747 9 view .LVU648
 2938               	.LBE375:
 2939               	.LBE400:
 747:quantum/command.c ****     }
 2940               		.loc 1 747 9 view .LVU649
 747:quantum/command.c ****     }
 2941               		.loc 1 747 9 view .LVU650
 2942               	.LBB401:
 2943               	.LBB376:
 2944 0280 80E0      		ldi r24,lo8(__c.4214)
 2945 0282 90E0      		ldi r25,hi8(__c.4214)
 2946 0284 00C0      		rjmp .L168
 2947               	.LBE376:
 2948               	.LBE401:
 2949               		.cfi_endproc
 2950               	.LFE24:
 2952               		.section	.rodata.CSWTCH.55,"a"
 2955               	CSWTCH.55:
 2956 0000 01        		.byte	1
 2957 0001 02        		.byte	2
 2958 0002 03        		.byte	3
 2959 0003 04        		.byte	4
 2960 0004 05        		.byte	5
 2961 0005 06        		.byte	6
 2962 0006 07        		.byte	7
 2963 0007 08        		.byte	8
 2964 0008 09        		.byte	9
 2965 0009 00        		.byte	0
 2966               		.section	.progmem.data.__c.4176,"a"
 2969               	__c.4176:
 2970 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2970      6865 656C 
 2970      5F74 696D 
 2970      655F 746F 
 2970      5F6D 6178 
 2971               		.section	.progmem.data.__c.4173,"a"
 2974               	__c.4173:
 2975 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2975      6865 656C 
 2975      5F6D 6178 
 2975      5F73 7065 
 2975      6564 203D 
 2976               		.section	.progmem.data.__c.4170,"a"
 2979               	__c.4170:
 2980 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2980      696D 655F 
 2980      746F 5F6D 
 2980      6178 203D 
 2980      2025 640A 
 2981               		.section	.progmem.data.__c.4167,"a"
 2984               	__c.4167:
 2985 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2985      6178 5F73 
 2985      7065 6564 
 2985      203D 2025 
 2985      640A 00
 2986               		.section	.progmem.data.__c.4164,"a"
 2989               	__c.4164:
 2990 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2990      6E74 6572 
 2990      7661 6C20 
 2990      3D20 2564 
 2990      0A00 
 2991               		.section	.progmem.data.__c.4160,"a"
 2994               	__c.4160:
 2995 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2995      656C 6179 
 2995      203D 2025 
 2995      640A 00
 2996               		.section	.progmem.data.__c.4153,"a"
 2999               	__c.4153:
 3000 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 3000      6865 656C 
 3000      5F74 696D 
 3000      655F 746F 
 3000      5F6D 6178 
 3001               		.section	.progmem.data.__c.4150,"a"
 3004               	__c.4150:
 3005 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 3005      6865 656C 
 3005      5F6D 6178 
 3005      5F73 7065 
 3005      6564 203D 
 3006               		.section	.progmem.data.__c.4147,"a"
 3009               	__c.4147:
 3010 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 3010      696D 655F 
 3010      746F 5F6D 
 3010      6178 203D 
 3010      2025 640A 
 3011               		.section	.progmem.data.__c.4144,"a"
 3014               	__c.4144:
 3015 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 3015      6178 5F73 
 3015      7065 6564 
 3015      203D 2025 
 3015      640A 00
 3016               		.section	.progmem.data.__c.4141,"a"
 3019               	__c.4141:
 3020 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 3020      6E74 6572 
 3020      7661 6C20 
 3020      3D20 2564 
 3020      0A00 
 3021               		.section	.progmem.data.__c.4137,"a"
 3024               	__c.4137:
 3025 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 3025      656C 6179 
 3025      203D 2025 
 3025      640A 00
 3026               		.section	.progmem.data.__c.4130,"a"
 3029               	__c.4130:
 3030 0000 0A00      		.string	"\n"
 3031               		.section	.progmem.data.__c.4128,"a"
 3034               	__c.4128:
 3035 0000 2575 00   		.string	"%u"
 3036               		.section	.progmem.data.__c.4126,"a"
 3039               	__c.4126:
 3040 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 3040      6865 656C 
 3040      5F74 696D 
 3040      655F 746F 
 3040      5F6D 6178 
 3041               		.section	.progmem.data.__c.4124,"a"
 3044               	__c.4124:
 3045 0000 0A00      		.string	"\n"
 3046               		.section	.progmem.data.__c.4122,"a"
 3049               	__c.4122:
 3050 0000 2575 00   		.string	"%u"
 3051               		.section	.progmem.data.__c.4120,"a"
 3054               	__c.4120:
 3055 0000 353A 2077 		.string	"5: wheel_max_speed: "
 3055      6865 656C 
 3055      5F6D 6178 
 3055      5F73 7065 
 3055      6564 3A20 
 3056               		.section	.progmem.data.__c.4118,"a"
 3059               	__c.4118:
 3060 0000 0A00      		.string	"\n"
 3061               		.section	.progmem.data.__c.4116,"a"
 3064               	__c.4116:
 3065 0000 2575 00   		.string	"%u"
 3066               		.section	.progmem.data.__c.4114,"a"
 3069               	__c.4114:
 3070 0000 343A 2074 		.string	"4: time_to_max: "
 3070      696D 655F 
 3070      746F 5F6D 
 3070      6178 3A20 
 3070      00
 3071               		.section	.progmem.data.__c.4112,"a"
 3074               	__c.4112:
 3075 0000 0A00      		.string	"\n"
 3076               		.section	.progmem.data.__c.4110,"a"
 3079               	__c.4110:
 3080 0000 2575 00   		.string	"%u"
 3081               		.section	.progmem.data.__c.4108,"a"
 3084               	__c.4108:
 3085 0000 333A 206D 		.string	"3: max_speed: "
 3085      6178 5F73 
 3085      7065 6564 
 3085      3A20 00
 3086               		.section	.progmem.data.__c.4106,"a"
 3089               	__c.4106:
 3090 0000 0A00      		.string	"\n"
 3091               		.section	.progmem.data.__c.4104,"a"
 3094               	__c.4104:
 3095 0000 2575 00   		.string	"%u"
 3096               		.section	.progmem.data.__c.4102,"a"
 3099               	__c.4102:
 3100 0000 323A 2069 		.string	"2: interval(ms): "
 3100      6E74 6572 
 3100      7661 6C28 
 3100      6D73 293A 
 3100      2000 
 3101               		.section	.progmem.data.__c.4100,"a"
 3104               	__c.4100:
 3105 0000 0A00      		.string	"\n"
 3106               		.section	.progmem.data.__c.4098,"a"
 3109               	__c.4098:
 3110 0000 2575 00   		.string	"%u"
 3111               		.section	.progmem.data.__c.4096,"a"
 3114               	__c.4096:
 3115 0000 313A 2064 		.string	"1: delay(*10ms): "
 3115      656C 6179 
 3115      282A 3130 
 3115      6D73 293A 
 3115      2000 
 3116               		.section	.progmem.data.__c.4094,"a"
 3119               	__c.4094:
 3120 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 3120      5661 6C75 
 3120      6573 202D 
 3120      0A00 
 3121               		.section	.progmem.data.__c.4214,"a"
 3124               	__c.4214:
 3125 0000 4D3E 00   		.string	"M>"
 3126               		.section	.progmem.data.__c.4212,"a"
 3129               	__c.4212:
 3130 0000 4D25 643E 		.string	"M%d> "
 3130      2000 
 3131               		.section	.progmem.data.__c.4210,"a"
 3134               	__c.4210:
 3135 0000 3F00      		.string	"?"
 3136               		.section	.progmem.data.__c.4207,"a"
 3139               	__c.4207:
 3140 0000 7365 7420 		.string	"set default\n"
 3140      6465 6661 
 3140      756C 740A 
 3140      00
 3141               		.section	.progmem.data.__c.4193,"a"
 3144               	__c.4193:
 3145 0000 433E 2000 		.string	"C> "
 3146               		.section	.progmem.data.__c.4183,"a"
 3149               	__c.4183:
 3150 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 3150      6520 6465 
 3150      6C74 613A 
 3150      2063 7572 
 3150      736F 723D 
 3151               		.section	.progmem.data.__c.4181,"a"
 3154               	__c.4181:
 3155 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 3155      4D6F 7573 
 3155      656B 6579 
 3155      202D 0A45 
 3155      5343 2F71 
 3156               		.section	.progmem.data.__c.4086,"a"
 3159               	__c.4086:
 3160 0000 3F00      		.string	"?"
 3161               		.section	.progmem.data.__c.4083,"a"
 3164               	__c.4083:
 3165 0000 4D3E 2000 		.string	"M> "
 3166               		.section	.progmem.data.__c.4088,"a"
 3169               	__c.4088:
 3170 0000 433E 2000 		.string	"C> "
 3171               		.section	.progmem.data.__c.4232,"a"
 3174               	__c.4232:
 3175 0000 4C25 640A 		.string	"L%d\n"
 3175      00
 3176               		.section	.progmem.data.__c.3911,"a"
 3179               	__c.3911:
 3180 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 3180      725F 7265 
 3180      6164 3332 
 3180      2829 3A20 
 3180      2530 346C 
 3181               		.section	.progmem.data.__c.3909,"a"
 3184               	__c.3909:
 3185 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 3185      6F61 7264 
 3185      5F69 646C 
 3185      653A 2025 
 3185      580A 00
 3186               		.section	.progmem.data.__c.3907,"a"
 3189               	__c.3907:
 3190 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 3190      6F61 7264 
 3190      5F70 726F 
 3190      746F 636F 
 3190      6C3A 2025 
 3191               		.section	.progmem.data.__c.3905,"a"
 3194               	__c.3905:
 3195 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 3195      5F6B 6579 
 3195      626F 6172 
 3195      645F 6C65 
 3195      6473 2829 
 3196               		.section	.progmem.data.__c.3903,"a"
 3199               	__c.3903:
 3200 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 3200      5374 6174 
 3200      7573 202D 
 3200      0A00 
 3201               		.section	.progmem.data.__c.3898,"a"
 3204               	__c.3898:
 3205 0000 4743 433A 		.string	"GCC: 8.4.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 3205      2038 2E34 
 3205      2E30 2041 
 3205      5652 2D4C 
 3205      4942 433A 
 3206               		.section	.progmem.data.__c.3896,"a"
 3209               	__c.3896:
 3210 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND 4096\n"
 3210      4F4E 533A 
 3210      204C 5546 
 3210      4120 4D4F 
 3210      5553 454B 
 3211               		.section	.progmem.data.__c.3894,"a"
 3214               	__c.3894:
 3215 0000 4255 494C 		.string	"BUILD:  (Jan 20 2024)\n"
 3215      443A 2020 
 3215      284A 616E 
 3215      2032 3020 
 3215      3230 3234 
 3216               		.section	.progmem.data.__c.3892,"a"
 3219               	__c.3892:
 3220 0000 5649 443A 		.string	"VID: 0x4273(Boardsource) PID: 0x0512(5x12) VER: 0x0000\n"
 3220      2030 7834 
 3220      3237 3328 
 3220      426F 6172 
 3220      6473 6F75 
 3221               		.section	.progmem.data.__c.3890,"a"
 3224               	__c.3890:
 3225 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 3225      5665 7273 
 3225      696F 6E20 
 3225      2D0A 00
 3226               		.section	.progmem.data.__c.4072,"a"
 3229               	__c.4072:
 3230 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 3230      436F 6E73 
 3230      6F6C 6520 
 3230      2D0A 4553 
 3230      432F 713A 
 3231               		.section	.progmem.data.__c.3885,"a"
 3234               	__c.3885:
 3235 0000 0A09 2D20 		.ascii	"\n\t- Magic -\nD:\tDebug Message Toggle\nX:\tMatrix Debug Mo"
 3235      4D61 6769 
 3235      6320 2D0A 
 3235      443A 0944 
 3235      6562 7567 
 3236 0036 6465 2054 		.ascii	"de Toggle - Show keypresses in matrix grid\nK:\tKeyboard Deb"
 3236      6F67 676C 
 3236      6520 2D20 
 3236      5368 6F77 
 3236      206B 6579 
 3237 0070 7567 2054 		.ascii	"ug Toggle - Show keypress report\nM:\tDebug Mouse To"
 3237      6F67 676C 
 3237      6520 2D20 
 3237      5368 6F77 
 3237      206B 6579 
 3238 00a2 6767 6C65 		.string	"ggle\nV:\tVersion\nS:\tStatus\nC:\tActivate Console Mode\nF1-F10:\tSwitch to Layer 0-9 (F
 3238      0A56 3A09 
 3238      5665 7273 
 3238      696F 6E0A 
 3238      533A 0953 
 3239               		.section	.progmem.data.__c.4018,"a"
 3242               	__c.4018:
 3243 0000 0A00      		.string	"\n"
 3244               		.section	.progmem.data.__c.4016,"a"
 3247               	__c.4016:
 3248 0000 2575 00   		.string	"%u"
 3249               		.section	.progmem.data.__c.4014,"a"
 3252               	__c.4014:
 3253 0000 2E6E 6B72 		.string	".nkro: "
 3253      6F3A 2000 
 3254               		.section	.progmem.data.__c.4012,"a"
 3257               	__c.4012:
 3258 0000 0A00      		.string	"\n"
 3259               		.section	.progmem.data.__c.4010,"a"
 3262               	__c.4010:
 3263 0000 2575 00   		.string	"%u"
 3264               		.section	.progmem.data.__c.4008,"a"
 3267               	__c.4008:
 3268 0000 2E73 7761 		.string	".swap_backslash_backspace: "
 3268      705F 6261 
 3268      636B 736C 
 3268      6173 685F 
 3268      6261 636B 
 3269               		.section	.progmem.data.__c.4006,"a"
 3272               	__c.4006:
 3273 0000 0A00      		.string	"\n"
 3274               		.section	.progmem.data.__c.4004,"a"
 3277               	__c.4004:
 3278 0000 2575 00   		.string	"%u"
 3279               		.section	.progmem.data.__c.4002,"a"
 3282               	__c.4002:
 3283 0000 2E73 7761 		.string	".swap_grave_esc: "
 3283      705F 6772 
 3283      6176 655F 
 3283      6573 633A 
 3283      2000 
 3284               		.section	.progmem.data.__c.4000,"a"
 3287               	__c.4000:
 3288 0000 0A00      		.string	"\n"
 3289               		.section	.progmem.data.__c.3998,"a"
 3292               	__c.3998:
 3293 0000 2575 00   		.string	"%u"
 3294               		.section	.progmem.data.__c.3996,"a"
 3297               	__c.3996:
 3298 0000 2E6E 6F5F 		.string	".no_gui: "
 3298      6775 693A 
 3298      2000 
 3299               		.section	.progmem.data.__c.3994,"a"
 3302               	__c.3994:
 3303 0000 0A00      		.string	"\n"
 3304               		.section	.progmem.data.__c.3992,"a"
 3307               	__c.3992:
 3308 0000 2575 00   		.string	"%u"
 3309               		.section	.progmem.data.__c.3990,"a"
 3312               	__c.3990:
 3313 0000 2E73 7761 		.string	".swap_ralt_rgui: "
 3313      705F 7261 
 3313      6C74 5F72 
 3313      6775 693A 
 3313      2000 
 3314               		.section	.progmem.data.__c.3988,"a"
 3317               	__c.3988:
 3318 0000 0A00      		.string	"\n"
 3319               		.section	.progmem.data.__c.3986,"a"
 3322               	__c.3986:
 3323 0000 2575 00   		.string	"%u"
 3324               		.section	.progmem.data.__c.3984,"a"
 3327               	__c.3984:
 3328 0000 2E73 7761 		.string	".swap_lalt_lgui: "
 3328      705F 6C61 
 3328      6C74 5F6C 
 3328      6775 693A 
 3328      2000 
 3329               		.section	.progmem.data.__c.3982,"a"
 3332               	__c.3982:
 3333 0000 0A00      		.string	"\n"
 3334               		.section	.progmem.data.__c.3980,"a"
 3337               	__c.3980:
 3338 0000 2575 00   		.string	"%u"
 3339               		.section	.progmem.data.__c.3978,"a"
 3342               	__c.3978:
 3343 0000 2E73 7761 		.string	".swap_rctl_rgui: "
 3343      705F 7263 
 3343      746C 5F72 
 3343      6775 693A 
 3343      2000 
 3344               		.section	.progmem.data.__c.3976,"a"
 3347               	__c.3976:
 3348 0000 0A00      		.string	"\n"
 3349               		.section	.progmem.data.__c.3974,"a"
 3352               	__c.3974:
 3353 0000 2575 00   		.string	"%u"
 3354               		.section	.progmem.data.__c.3972,"a"
 3357               	__c.3972:
 3358 0000 2E73 7761 		.string	".swap_lctl_lgui: "
 3358      705F 6C63 
 3358      746C 5F6C 
 3358      6775 693A 
 3358      2000 
 3359               		.section	.progmem.data.__c.3970,"a"
 3362               	__c.3970:
 3363 0000 0A00      		.string	"\n"
 3364               		.section	.progmem.data.__c.3968,"a"
 3367               	__c.3968:
 3368 0000 2575 00   		.string	"%u"
 3369               		.section	.progmem.data.__c.3966,"a"
 3372               	__c.3966:
 3373 0000 2E63 6170 		.string	".capslock_to_control: "
 3373      736C 6F63 
 3373      6B5F 746F 
 3373      5F63 6F6E 
 3373      7472 6F6C 
 3374               		.section	.progmem.data.__c.3964,"a"
 3377               	__c.3964:
 3378 0000 0A00      		.string	"\n"
 3379               		.section	.progmem.data.__c.3962,"a"
 3382               	__c.3962:
 3383 0000 2575 00   		.string	"%u"
 3384               		.section	.progmem.data.__c.3960,"a"
 3387               	__c.3960:
 3388 0000 2E73 7761 		.string	".swap_control_capslock: "
 3388      705F 636F 
 3388      6E74 726F 
 3388      6C5F 6361 
 3388      7073 6C6F 
 3389               		.section	.progmem.data.__c.3958,"a"
 3392               	__c.3958:
 3393 0000 0A00      		.string	"\n"
 3394               		.section	.progmem.data.__c.3956,"a"
 3397               	__c.3956:
 3398 0000 2530 3258 		.string	"%02X"
 3398      00
 3399               		.section	.progmem.data.__c.3954,"a"
 3402               	__c.3954:
 3403 0000 6B65 796D 		.string	"keymap_config.raw: "
 3403      6170 5F63 
 3403      6F6E 6669 
 3403      672E 7261 
 3403      773A 2000 
 3404               		.section	.progmem.data.__c.3951,"a"
 3407               	__c.3951:
 3408 0000 0A00      		.string	"\n"
 3409               		.section	.progmem.data.__c.3949,"a"
 3412               	__c.3949:
 3413 0000 2575 00   		.string	"%u"
 3414               		.section	.progmem.data.__c.3947,"a"
 3417               	__c.3947:
 3418 0000 2E6D 6F75 		.string	".mouse: "
 3418      7365 3A20 
 3418      00
 3419               		.section	.progmem.data.__c.3945,"a"
 3422               	__c.3945:
 3423 0000 0A00      		.string	"\n"
 3424               		.section	.progmem.data.__c.3943,"a"
 3427               	__c.3943:
 3428 0000 2575 00   		.string	"%u"
 3429               		.section	.progmem.data.__c.3941,"a"
 3432               	__c.3941:
 3433 0000 2E6B 6579 		.string	".keyboard: "
 3433      626F 6172 
 3433      643A 2000 
 3434               		.section	.progmem.data.__c.3939,"a"
 3437               	__c.3939:
 3438 0000 0A00      		.string	"\n"
 3439               		.section	.progmem.data.__c.3937,"a"
 3442               	__c.3937:
 3443 0000 2575 00   		.string	"%u"
 3444               		.section	.progmem.data.__c.3935,"a"
 3447               	__c.3935:
 3448 0000 2E6D 6174 		.string	".matrix: "
 3448      7269 783A 
 3448      2000 
 3449               		.section	.progmem.data.__c.3933,"a"
 3452               	__c.3933:
 3453 0000 0A00      		.string	"\n"
 3454               		.section	.progmem.data.__c.3931,"a"
 3457               	__c.3931:
 3458 0000 2575 00   		.string	"%u"
 3459               		.section	.progmem.data.__c.3929,"a"
 3462               	__c.3929:
 3463 0000 2E65 6E61 		.string	".enable: "
 3463      626C 653A 
 3463      2000 
 3464               		.section	.progmem.data.__c.3927,"a"
 3467               	__c.3927:
 3468 0000 0A00      		.string	"\n"
 3469               		.section	.progmem.data.__c.3925,"a"
 3472               	__c.3925:
 3473 0000 2530 3258 		.string	"%02X"
 3473      00
 3474               		.section	.progmem.data.__c.3923,"a"
 3477               	__c.3923:
 3478 0000 6465 6275 		.string	"debug_config.raw: "
 3478      675F 636F 
 3478      6E66 6967 
 3478      2E72 6177 
 3478      3A20 00
 3479               		.section	.progmem.data.__c.3920,"a"
 3482               	__c.3920:
 3483 0000 0A00      		.string	"\n"
 3484               		.section	.progmem.data.__c.3918,"a"
 3487               	__c.3918:
 3488 0000 2575 00   		.string	"%u"
 3489               		.section	.progmem.data.__c.3916,"a"
 3492               	__c.3916:
 3493 0000 6465 6661 		.string	"default_layer: "
 3493      756C 745F 
 3493      6C61 7965 
 3493      723A 2000 
 3494               		.section	.progmem.data.__c.4067,"a"
 3497               	__c.4067:
 3498 0000 3F00      		.string	"?"
 3499               		.section	.progmem.data.__c.4057,"a"
 3502               	__c.4057:
 3503 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 3503      7365 3A20 
 3503      6F66 660A 
 3503      00
 3504               		.section	.progmem.data.__c.4055,"a"
 3507               	__c.4055:
 3508 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 3508      7365 3A20 
 3508      6F6E 0A00 
 3509               		.section	.progmem.data.__c.4052,"a"
 3512               	__c.4052:
 3513 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 3513      626F 6172 
 3513      643A 206F 
 3513      6666 0A00 
 3514               		.section	.progmem.data.__c.4050,"a"
 3517               	__c.4050:
 3518 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 3518      626F 6172 
 3518      643A 206F 
 3518      6E0A 00
 3519               		.section	.progmem.data.__c.4047,"a"
 3522               	__c.4047:
 3523 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 3523      7269 783A 
 3523      206F 6666 
 3523      0A00 
 3524               		.section	.progmem.data.__c.4045,"a"
 3527               	__c.4045:
 3528 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 3528      7269 783A 
 3528      206F 6E0A 
 3528      00
 3529               		.section	.progmem.data.__c.4042,"a"
 3532               	__c.4042:
 3533 0000 0A64 6562 		.string	"\ndebug: off\n"
 3533      7567 3A20 
 3533      6F66 660A 
 3533      00
 3534               		.section	.progmem.data.__c.4040,"a"
 3537               	__c.4040:
 3538 0000 0A64 6562 		.string	"\ndebug: on\n"
 3538      7567 3A20 
 3538      6F6E 0A00 
 3539               		.section	.progmem.data.__c.4037,"a"
 3542               	__c.4037:
 3543 0000 0A0A 4A75 		.string	"\n\nJumping to bootloader... "
 3543      6D70 696E 
 3543      6720 746F 
 3543      2062 6F6F 
 3543      746C 6F61 
 3544               		.section	.progmem.data.__c.4033,"a"
 3547               	__c.4033:
 3548 0000 433E 2000 		.string	"C> "
 3549               		.section	.progmem.data.__c.4028,"a"
 3552               	__c.4028:
 3553 0000 436C 6561 		.string	"Clearing EEPROM\n"
 3553      7269 6E67 
 3553      2045 4550 
 3553      524F 4D0A 
 3553      00
 3554               		.section	.progmem.data.__c.4024,"a"
 3557               	__c.4024:
 3558 0000 6565 636F 		.string	"eeconfig:\n"
 3558      6E66 6967 
 3558      3A0A 00
 3559               		.section	.bss.mousekey_param,"aw",@nobits
 3562               	mousekey_param:
 3563 0000 00        		.zero	1
 3564               	.global	command_state
 3565               		.section	.bss.command_state,"aw",@nobits
 3568               	command_state:
 3569 0000 00        		.zero	1
 3570               		.text
 3571               	.Letext0:
 3572               		.file 2 "e:\\game\\msys2\\mingw64\\avr\\include\\stdint.h"
 3573               		.file 3 "tmk_core/common/report.h"
 3574               		.file 4 "tmk_core/common/host.h"
 3575               		.file 5 "e:\\game\\msys2\\mingw64\\lib\\gcc\\avr\\8.4.0\\include\\stddef.h"
 3576               		.file 6 "tmk_core/common/action.h"
 3577               		.file 7 "tmk_core/common/avr/xprintf.h"
 3578               		.file 8 "tmk_core/common/debug.h"
 3579               		.file 9 "quantum/keycode_config.h"
 3580               		.file 10 "tmk_core/common/timer.h"
 3581               		.file 11 "quantum/sequencer/sequencer.h"
 3582               		.file 12 "tmk_core/common/keycode.h"
 3583               		.file 13 "quantum/keymap.h"
 3584               		.file 14 "tmk_core/common/action_layer.h"
 3585               		.file 15 "tmk_core/common/action_util.h"
 3586               		.file 16 "quantum/command.h"
 3587               		.file 17 "quantum/send_string.h"
 3588               		.file 18 "e:\\game\\msys2\\mingw64\\avr\\include\\stdlib.h"
 3589               		.file 19 "quantum/mousekey.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:4      *ABS*:000000000000003f __SREG__
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3154   .progmem.data.__c.4181:0000000000000000 __c.4181
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3149   .progmem.data.__c.4183:0000000000000000 __c.4183
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3024   .progmem.data.__c.4137:0000000000000000 __c.4137
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3019   .progmem.data.__c.4141:0000000000000000 __c.4141
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3014   .progmem.data.__c.4144:0000000000000000 __c.4144
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3009   .progmem.data.__c.4147:0000000000000000 __c.4147
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3004   .progmem.data.__c.4150:0000000000000000 __c.4150
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2999   .progmem.data.__c.4153:0000000000000000 __c.4153
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2994   .progmem.data.__c.4160:0000000000000000 __c.4160
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2989   .progmem.data.__c.4164:0000000000000000 __c.4164
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2984   .progmem.data.__c.4167:0000000000000000 __c.4167
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2979   .progmem.data.__c.4170:0000000000000000 __c.4170
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2974   .progmem.data.__c.4173:0000000000000000 __c.4173
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2969   .progmem.data.__c.4176:0000000000000000 __c.4176
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3174   .progmem.data.__c.4232:0000000000000000 __c.4232
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:750    .text.command_common:0000000000000000 command_common
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3497   .progmem.data.__c.4067:0000000000000000 __c.4067
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3557   .progmem.data.__c.4024:0000000000000000 __c.4024
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3492   .progmem.data.__c.3916:0000000000000000 __c.3916
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3487   .progmem.data.__c.3918:0000000000000000 __c.3918
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3482   .progmem.data.__c.3920:0000000000000000 __c.3920
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3477   .progmem.data.__c.3923:0000000000000000 __c.3923
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3472   .progmem.data.__c.3925:0000000000000000 __c.3925
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3467   .progmem.data.__c.3927:0000000000000000 __c.3927
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3462   .progmem.data.__c.3929:0000000000000000 __c.3929
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3457   .progmem.data.__c.3931:0000000000000000 __c.3931
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3452   .progmem.data.__c.3933:0000000000000000 __c.3933
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3447   .progmem.data.__c.3935:0000000000000000 __c.3935
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3442   .progmem.data.__c.3937:0000000000000000 __c.3937
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3437   .progmem.data.__c.3939:0000000000000000 __c.3939
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3432   .progmem.data.__c.3941:0000000000000000 __c.3941
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3427   .progmem.data.__c.3943:0000000000000000 __c.3943
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3422   .progmem.data.__c.3945:0000000000000000 __c.3945
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3417   .progmem.data.__c.3947:0000000000000000 __c.3947
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3412   .progmem.data.__c.3949:0000000000000000 __c.3949
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3407   .progmem.data.__c.3951:0000000000000000 __c.3951
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3402   .progmem.data.__c.3954:0000000000000000 __c.3954
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3397   .progmem.data.__c.3956:0000000000000000 __c.3956
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3392   .progmem.data.__c.3958:0000000000000000 __c.3958
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3387   .progmem.data.__c.3960:0000000000000000 __c.3960
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3382   .progmem.data.__c.3962:0000000000000000 __c.3962
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3377   .progmem.data.__c.3964:0000000000000000 __c.3964
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3372   .progmem.data.__c.3966:0000000000000000 __c.3966
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3367   .progmem.data.__c.3968:0000000000000000 __c.3968
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3362   .progmem.data.__c.3970:0000000000000000 __c.3970
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3357   .progmem.data.__c.3972:0000000000000000 __c.3972
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3352   .progmem.data.__c.3974:0000000000000000 __c.3974
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3347   .progmem.data.__c.3976:0000000000000000 __c.3976
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3342   .progmem.data.__c.3978:0000000000000000 __c.3978
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3337   .progmem.data.__c.3980:0000000000000000 __c.3980
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3332   .progmem.data.__c.3982:0000000000000000 __c.3982
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3327   .progmem.data.__c.3984:0000000000000000 __c.3984
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3322   .progmem.data.__c.3986:0000000000000000 __c.3986
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3317   .progmem.data.__c.3988:0000000000000000 __c.3988
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3312   .progmem.data.__c.3990:0000000000000000 __c.3990
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3307   .progmem.data.__c.3992:0000000000000000 __c.3992
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3302   .progmem.data.__c.3994:0000000000000000 __c.3994
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3297   .progmem.data.__c.3996:0000000000000000 __c.3996
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3292   .progmem.data.__c.3998:0000000000000000 __c.3998
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3287   .progmem.data.__c.4000:0000000000000000 __c.4000
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3282   .progmem.data.__c.4002:0000000000000000 __c.4002
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3277   .progmem.data.__c.4004:0000000000000000 __c.4004
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3272   .progmem.data.__c.4006:0000000000000000 __c.4006
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3267   .progmem.data.__c.4008:0000000000000000 __c.4008
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3262   .progmem.data.__c.4010:0000000000000000 __c.4010
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3257   .progmem.data.__c.4012:0000000000000000 __c.4012
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3252   .progmem.data.__c.4014:0000000000000000 __c.4014
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3247   .progmem.data.__c.4016:0000000000000000 __c.4016
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3242   .progmem.data.__c.4018:0000000000000000 __c.4018
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3517   .progmem.data.__c.4050:0000000000000000 __c.4050
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3224   .progmem.data.__c.3890:0000000000000000 __c.3890
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3219   .progmem.data.__c.3892:0000000000000000 __c.3892
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3214   .progmem.data.__c.3894:0000000000000000 __c.3894
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3209   .progmem.data.__c.3896:0000000000000000 __c.3896
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3204   .progmem.data.__c.3898:0000000000000000 __c.3898
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3542   .progmem.data.__c.4037:0000000000000000 __c.4037
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3234   .progmem.data.__c.3885:0000000000000000 __c.3885
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3552   .progmem.data.__c.4028:0000000000000000 __c.4028
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3229   .progmem.data.__c.4072:0000000000000000 __c.4072
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3547   .progmem.data.__c.4033:0000000000000000 __c.4033
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3568   .bss.command_state:0000000000000000 command_state
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3537   .progmem.data.__c.4040:0000000000000000 __c.4040
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3532   .progmem.data.__c.4042:0000000000000000 __c.4042
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3527   .progmem.data.__c.4045:0000000000000000 __c.4045
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3522   .progmem.data.__c.4047:0000000000000000 __c.4047
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3512   .progmem.data.__c.4052:0000000000000000 __c.4052
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3507   .progmem.data.__c.4055:0000000000000000 __c.4055
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3502   .progmem.data.__c.4057:0000000000000000 __c.4057
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3199   .progmem.data.__c.3903:0000000000000000 __c.3903
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3194   .progmem.data.__c.3905:0000000000000000 __c.3905
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3189   .progmem.data.__c.3907:0000000000000000 __c.3907
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3184   .progmem.data.__c.3909:0000000000000000 __c.3909
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3179   .progmem.data.__c.3911:0000000000000000 __c.3911
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2107   .text.command_extra:0000000000000000 command_extra
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2107   .text.command_extra:0000000000000000 command_extra.localalias.0
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2131   .text.command_console_extra:0000000000000000 command_console_extra
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2145   .text.numkey2num:0000000000000000 numkey2num
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2955   .rodata.CSWTCH.55:0000000000000000 CSWTCH.55
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:2180   .text.command_proc:0000000000000000 command_proc
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3159   .progmem.data.__c.4086:0000000000000000 __c.4086
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3169   .progmem.data.__c.4088:0000000000000000 __c.4088
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3164   .progmem.data.__c.4083:0000000000000000 __c.4083
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3134   .progmem.data.__c.4210:0000000000000000 __c.4210
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3562   .bss.mousekey_param:0000000000000000 mousekey_param
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3129   .progmem.data.__c.4212:0000000000000000 __c.4212
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3144   .progmem.data.__c.4193:0000000000000000 __c.4193
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3119   .progmem.data.__c.4094:0000000000000000 __c.4094
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3114   .progmem.data.__c.4096:0000000000000000 __c.4096
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3109   .progmem.data.__c.4098:0000000000000000 __c.4098
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3104   .progmem.data.__c.4100:0000000000000000 __c.4100
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3099   .progmem.data.__c.4102:0000000000000000 __c.4102
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3094   .progmem.data.__c.4104:0000000000000000 __c.4104
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3089   .progmem.data.__c.4106:0000000000000000 __c.4106
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3084   .progmem.data.__c.4108:0000000000000000 __c.4108
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3079   .progmem.data.__c.4110:0000000000000000 __c.4110
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3074   .progmem.data.__c.4112:0000000000000000 __c.4112
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3069   .progmem.data.__c.4114:0000000000000000 __c.4114
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3064   .progmem.data.__c.4116:0000000000000000 __c.4116
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3059   .progmem.data.__c.4118:0000000000000000 __c.4118
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3054   .progmem.data.__c.4120:0000000000000000 __c.4120
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3049   .progmem.data.__c.4122:0000000000000000 __c.4122
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3044   .progmem.data.__c.4124:0000000000000000 __c.4124
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3039   .progmem.data.__c.4126:0000000000000000 __c.4126
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3034   .progmem.data.__c.4128:0000000000000000 __c.4128
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3029   .progmem.data.__c.4130:0000000000000000 __c.4130
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3139   .progmem.data.__c.4207:0000000000000000 __c.4207
C:\Users\Roningo\AppData\Local\Temp\cccQvFvo.s:3124   .progmem.data.__c.4214:0000000000000000 __c.4214

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
eeconfig_read_default_layer
eeconfig_read_debug
eeconfig_read_keymap
debug_config
reset_keyboard
eeconfig_init
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
get_mods
__do_copy_data
__do_clear_bss
