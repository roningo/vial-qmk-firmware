   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB3:
  16               		.file 1 "tmk_core/common/action_util.h"
   1:tmk_core/common/action_util.h **** /*
   2:tmk_core/common/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/action_util.h **** 
   4:tmk_core/common/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/action_util.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/action_util.h **** (at your option) any later version.
   8:tmk_core/common/action_util.h **** 
   9:tmk_core/common/action_util.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/action_util.h **** GNU General Public License for more details.
  13:tmk_core/common/action_util.h **** 
  14:tmk_core/common/action_util.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/action_util.h **** */
  17:tmk_core/common/action_util.h **** 
  18:tmk_core/common/action_util.h **** #pragma once
  19:tmk_core/common/action_util.h **** 
  20:tmk_core/common/action_util.h **** #include <stdint.h>
  21:tmk_core/common/action_util.h **** #include "report.h"
  22:tmk_core/common/action_util.h **** 
  23:tmk_core/common/action_util.h **** #ifdef __cplusplus
  24:tmk_core/common/action_util.h **** extern "C" {
  25:tmk_core/common/action_util.h **** #endif
  26:tmk_core/common/action_util.h **** 
  27:tmk_core/common/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:tmk_core/common/action_util.h **** 
  29:tmk_core/common/action_util.h **** void send_keyboard_report(void);
  30:tmk_core/common/action_util.h **** 
  31:tmk_core/common/action_util.h **** /* key */
  32:tmk_core/common/action_util.h **** inline void add_key(uint8_t key) { add_key_to_report(keyboard_report, key); }
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 36 view .LVU1
  24 0000 682F      		mov r22,r24
  25 0002 8091 0000 		lds r24,keyboard_report
  26 0006 9091 0000 		lds r25,keyboard_report+1
  27               	.LVL1:
  28               		.loc 1 32 36 is_stmt 0 view .LVU2
  29 000a 0C94 0000 		jmp add_key_to_report
  30               	.LVL2:
  31               		.loc 1 32 36 view .LVU3
  32               		.cfi_endproc
  33               	.LFE3:
  35               		.section	.text.del_key,"ax",@progbits
  36               	.global	del_key
  38               	del_key:
  39               	.LVL3:
  40               	.LFB4:
  33:tmk_core/common/action_util.h **** 
  34:tmk_core/common/action_util.h **** inline void del_key(uint8_t key) { del_key_from_report(keyboard_report, key); }
  41               		.loc 1 34 34 is_stmt 1 view -0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  47               		.loc 1 34 36 view .LVU5
  48 0000 682F      		mov r22,r24
  49 0002 8091 0000 		lds r24,keyboard_report
  50 0006 9091 0000 		lds r25,keyboard_report+1
  51               	.LVL4:
  52               		.loc 1 34 36 is_stmt 0 view .LVU6
  53 000a 0C94 0000 		jmp del_key_from_report
  54               	.LVL5:
  55               		.loc 1 34 36 view .LVU7
  56               		.cfi_endproc
  57               	.LFE4:
  59               		.section	.text.clear_keys,"ax",@progbits
  60               	.global	clear_keys
  62               	clear_keys:
  63               	.LFB5:
  35:tmk_core/common/action_util.h **** 
  36:tmk_core/common/action_util.h **** inline void clear_keys(void) { clear_keys_from_report(keyboard_report); }
  64               		.loc 1 36 30 is_stmt 1 view -0
  65               		.cfi_startproc
  66               	/* prologue: function */
  67               	/* frame size = 0 */
  68               	/* stack size = 0 */
  69               	.L__stack_usage = 0
  70               		.loc 1 36 32 view .LVU9
  71 0000 8091 0000 		lds r24,keyboard_report
  72 0004 9091 0000 		lds r25,keyboard_report+1
  73 0008 0C94 0000 		jmp clear_keys_from_report
  74               	.LVL6:
  75               		.cfi_endproc
  76               	.LFE5:
  78               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  79               	.global	get_oneshot_locked_mods
  81               	get_oneshot_locked_mods:
  82               	.LFB9:
  83               		.file 2 "tmk_core/common/action_util.c"
   1:tmk_core/common/action_util.c **** /*
   2:tmk_core/common/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/action_util.c **** 
   4:tmk_core/common/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/action_util.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/action_util.c **** (at your option) any later version.
   8:tmk_core/common/action_util.c **** 
   9:tmk_core/common/action_util.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/action_util.c **** GNU General Public License for more details.
  13:tmk_core/common/action_util.c **** 
  14:tmk_core/common/action_util.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/action_util.c **** */
  17:tmk_core/common/action_util.c **** #include "host.h"
  18:tmk_core/common/action_util.c **** #include "report.h"
  19:tmk_core/common/action_util.c **** #include "debug.h"
  20:tmk_core/common/action_util.c **** #include "action_util.h"
  21:tmk_core/common/action_util.c **** #include "action_layer.h"
  22:tmk_core/common/action_util.c **** #include "timer.h"
  23:tmk_core/common/action_util.c **** #include "keycode_config.h"
  24:tmk_core/common/action_util.c **** 
  25:tmk_core/common/action_util.c **** extern keymap_config_t keymap_config;
  26:tmk_core/common/action_util.c **** 
  27:tmk_core/common/action_util.c **** static uint8_t real_mods  = 0;
  28:tmk_core/common/action_util.c **** static uint8_t weak_mods  = 0;
  29:tmk_core/common/action_util.c **** static uint8_t macro_mods = 0;
  30:tmk_core/common/action_util.c **** 
  31:tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
  32:tmk_core/common/action_util.c **** #    define RO_ADD(a, b) ((a + b) % KEYBOARD_REPORT_KEYS)
  33:tmk_core/common/action_util.c **** #    define RO_SUB(a, b) ((a - b + KEYBOARD_REPORT_KEYS) % KEYBOARD_REPORT_KEYS)
  34:tmk_core/common/action_util.c **** #    define RO_INC(a) RO_ADD(a, 1)
  35:tmk_core/common/action_util.c **** #    define RO_DEC(a) RO_SUB(a, 1)
  36:tmk_core/common/action_util.c **** static int8_t cb_head  = 0;
  37:tmk_core/common/action_util.c **** static int8_t cb_tail  = 0;
  38:tmk_core/common/action_util.c **** static int8_t cb_count = 0;
  39:tmk_core/common/action_util.c **** #endif
  40:tmk_core/common/action_util.c **** 
  41:tmk_core/common/action_util.c **** // TODO: pointer variable is not needed
  42:tmk_core/common/action_util.c **** // report_keyboard_t keyboard_report = {};
  43:tmk_core/common/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  44:tmk_core/common/action_util.c **** 
  45:tmk_core/common/action_util.c **** extern inline void add_key(uint8_t key);
  46:tmk_core/common/action_util.c **** extern inline void del_key(uint8_t key);
  47:tmk_core/common/action_util.c **** extern inline void clear_keys(void);
  48:tmk_core/common/action_util.c **** 
  49:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  50:tmk_core/common/action_util.c **** static uint8_t oneshot_mods        = 0;
  51:tmk_core/common/action_util.c **** static uint8_t oneshot_locked_mods = 0;
  52:tmk_core/common/action_util.c **** uint8_t        get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  84               		.loc 2 52 46 view -0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
  90               		.loc 2 52 48 view .LVU11
  91               		.loc 2 52 1 is_stmt 0 view .LVU12
  92 0000 8091 0000 		lds r24,oneshot_locked_mods
  93               	/* epilogue start */
  94 0004 0895      		ret
  95               		.cfi_endproc
  96               	.LFE9:
  98               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
  99               	.global	has_oneshot_mods_timed_out
 101               	has_oneshot_mods_timed_out:
 102               	.LFB12:
  53:tmk_core/common/action_util.c **** void           set_oneshot_locked_mods(uint8_t mods) {
  54:tmk_core/common/action_util.c ****     if (mods != oneshot_locked_mods) {
  55:tmk_core/common/action_util.c ****         oneshot_locked_mods = mods;
  56:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  57:tmk_core/common/action_util.c ****     }
  58:tmk_core/common/action_util.c **** }
  59:tmk_core/common/action_util.c **** void clear_oneshot_locked_mods(void) {
  60:tmk_core/common/action_util.c ****     if (oneshot_locked_mods) {
  61:tmk_core/common/action_util.c ****         oneshot_locked_mods = 0;
  62:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
  63:tmk_core/common/action_util.c ****     }
  64:tmk_core/common/action_util.c **** }
  65:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  66:tmk_core/common/action_util.c **** static uint16_t oneshot_time = 0;
  67:tmk_core/common/action_util.c **** bool            has_oneshot_mods_timed_out(void) { return TIMER_DIFF_16(timer_read(), oneshot_time)
  68:tmk_core/common/action_util.c **** #    else
  69:tmk_core/common/action_util.c **** bool has_oneshot_mods_timed_out(void) { return false; }
 103               		.loc 2 69 39 is_stmt 1 view -0
 104               		.cfi_startproc
 105               	/* prologue: function */
 106               	/* frame size = 0 */
 107               	/* stack size = 0 */
 108               	.L__stack_usage = 0
 109               		.loc 2 69 41 view .LVU14
 110               		.loc 2 69 1 is_stmt 0 view .LVU15
 111 0000 80E0      		ldi r24,0
 112               	/* epilogue start */
 113 0002 0895      		ret
 114               		.cfi_endproc
 115               	.LFE12:
 117               		.section	.text.get_oneshot_layer,"ax",@progbits
 118               	.global	get_oneshot_layer
 120               	get_oneshot_layer:
 121               	.LFB13:
  70:tmk_core/common/action_util.c **** #    endif
  71:tmk_core/common/action_util.c **** #endif
  72:tmk_core/common/action_util.c **** 
  73:tmk_core/common/action_util.c **** /* oneshot layer */
  74:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  75:tmk_core/common/action_util.c **** /** \brief oneshot_layer_data bits
  76:tmk_core/common/action_util.c ****  * LLLL LSSS
  77:tmk_core/common/action_util.c ****  * where:
  78:tmk_core/common/action_util.c ****  *   L => are layer bits
  79:tmk_core/common/action_util.c ****  *   S => oneshot state bits
  80:tmk_core/common/action_util.c ****  */
  81:tmk_core/common/action_util.c **** static int8_t oneshot_layer_data = 0;
  82:tmk_core/common/action_util.c **** 
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 122               		.loc 2 83 40 is_stmt 1 view -0
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 128               		.loc 2 83 42 view .LVU17
 129               		.loc 2 83 68 is_stmt 0 view .LVU18
 130 0000 8091 0000 		lds r24,oneshot_layer_data
 131               		.loc 2 83 1 view .LVU19
 132 0004 8595      		asr r24
 133 0006 8595      		asr r24
 134 0008 8595      		asr r24
 135               	/* epilogue start */
 136 000a 0895      		ret
 137               		.cfi_endproc
 138               	.LFE13:
 140               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 141               	.global	get_oneshot_layer_state
 143               	get_oneshot_layer_state:
 144               	.LFB14:
  84:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 145               		.loc 2 84 46 is_stmt 1 view -0
 146               		.cfi_startproc
 147               	/* prologue: function */
 148               	/* frame size = 0 */
 149               	/* stack size = 0 */
 150               	.L__stack_usage = 0
 151               		.loc 2 84 48 view .LVU21
 152               		.loc 2 84 74 is_stmt 0 view .LVU22
 153 0000 8091 0000 		lds r24,oneshot_layer_data
 154               		.loc 2 84 1 view .LVU23
 155 0004 8770      		andi r24,lo8(7)
 156               	/* epilogue start */
 157 0006 0895      		ret
 158               		.cfi_endproc
 159               	.LFE14:
 161               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 162               	.global	is_oneshot_layer_active
 164               	is_oneshot_layer_active:
 165               	.LFB18:
  85:tmk_core/common/action_util.c **** 
  86:tmk_core/common/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
  87:tmk_core/common/action_util.c **** enum {
  88:tmk_core/common/action_util.c ****     SHO_OFF,
  89:tmk_core/common/action_util.c ****     SHO_ACTIVE,   // Swap hands button was pressed, and we didn't send any swapped keys yet
  90:tmk_core/common/action_util.c ****     SHO_PRESSED,  // Swap hands button is currently pressed
  91:tmk_core/common/action_util.c ****     SHO_USED,     // Swap hands button is still pressed, and we already sent swapped keys
  92:tmk_core/common/action_util.c **** } swap_hands_oneshot = SHO_OFF;
  93:tmk_core/common/action_util.c **** #    endif
  94:tmk_core/common/action_util.c **** 
  95:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  96:tmk_core/common/action_util.c **** static uint16_t oneshot_layer_time = 0;
  97:tmk_core/common/action_util.c **** inline bool     has_oneshot_layer_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_layer_ti
  98:tmk_core/common/action_util.c **** #        ifdef SWAP_HANDS_ENABLE
  99:tmk_core/common/action_util.c **** static uint16_t oneshot_swaphands_time = 0;
 100:tmk_core/common/action_util.c **** inline bool     has_oneshot_swaphands_timed_out() { return TIMER_DIFF_16(timer_read(), oneshot_swap
 101:tmk_core/common/action_util.c **** #        endif
 102:tmk_core/common/action_util.c **** #    endif
 103:tmk_core/common/action_util.c **** 
 104:tmk_core/common/action_util.c **** #    ifdef SWAP_HANDS_ENABLE
 105:tmk_core/common/action_util.c **** 
 106:tmk_core/common/action_util.c **** void set_oneshot_swaphands(void) {
 107:tmk_core/common/action_util.c ****     swap_hands_oneshot = SHO_PRESSED;
 108:tmk_core/common/action_util.c ****     swap_hands         = true;
 109:tmk_core/common/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 110:tmk_core/common/action_util.c ****     oneshot_swaphands_time = timer_read();
 111:tmk_core/common/action_util.c ****     if (oneshot_layer_time != 0) {
 112:tmk_core/common/action_util.c ****         oneshot_layer_time = oneshot_swaphands_time;
 113:tmk_core/common/action_util.c ****     }
 114:tmk_core/common/action_util.c **** #        endif
 115:tmk_core/common/action_util.c **** }
 116:tmk_core/common/action_util.c **** 
 117:tmk_core/common/action_util.c **** void release_oneshot_swaphands(void) {
 118:tmk_core/common/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 119:tmk_core/common/action_util.c ****         swap_hands_oneshot = SHO_ACTIVE;
 120:tmk_core/common/action_util.c ****     }
 121:tmk_core/common/action_util.c ****     if (swap_hands_oneshot == SHO_USED) {
 122:tmk_core/common/action_util.c ****         clear_oneshot_swaphands();
 123:tmk_core/common/action_util.c ****     }
 124:tmk_core/common/action_util.c **** }
 125:tmk_core/common/action_util.c **** 
 126:tmk_core/common/action_util.c **** void use_oneshot_swaphands(void) {
 127:tmk_core/common/action_util.c ****     if (swap_hands_oneshot == SHO_PRESSED) {
 128:tmk_core/common/action_util.c ****         swap_hands_oneshot = SHO_USED;
 129:tmk_core/common/action_util.c ****     }
 130:tmk_core/common/action_util.c ****     if (swap_hands_oneshot == SHO_ACTIVE) {
 131:tmk_core/common/action_util.c ****         clear_oneshot_swaphands();
 132:tmk_core/common/action_util.c ****     }
 133:tmk_core/common/action_util.c **** }
 134:tmk_core/common/action_util.c **** 
 135:tmk_core/common/action_util.c **** void clear_oneshot_swaphands(void) {
 136:tmk_core/common/action_util.c ****     swap_hands_oneshot = SHO_OFF;
 137:tmk_core/common/action_util.c ****     swap_hands         = false;
 138:tmk_core/common/action_util.c **** #        if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 139:tmk_core/common/action_util.c ****     oneshot_swaphands_time = 0;
 140:tmk_core/common/action_util.c **** #        endif
 141:tmk_core/common/action_util.c **** }
 142:tmk_core/common/action_util.c **** 
 143:tmk_core/common/action_util.c **** #    endif
 144:tmk_core/common/action_util.c **** 
 145:tmk_core/common/action_util.c **** /** \brief Set oneshot layer
 146:tmk_core/common/action_util.c ****  *
 147:tmk_core/common/action_util.c ****  * FIXME: needs doc
 148:tmk_core/common/action_util.c ****  */
 149:tmk_core/common/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state) {
 150:tmk_core/common/action_util.c ****     if (!keymap_config.oneshot_disable) {
 151:tmk_core/common/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 152:tmk_core/common/action_util.c ****         layer_on(layer);
 153:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 154:tmk_core/common/action_util.c ****         oneshot_layer_time = timer_read();
 155:tmk_core/common/action_util.c **** #    endif
 156:tmk_core/common/action_util.c ****         oneshot_layer_changed_kb(get_oneshot_layer());
 157:tmk_core/common/action_util.c ****     } else {
 158:tmk_core/common/action_util.c ****         layer_on(layer);
 159:tmk_core/common/action_util.c ****     }
 160:tmk_core/common/action_util.c **** }
 161:tmk_core/common/action_util.c **** /** \brief Reset oneshot layer
 162:tmk_core/common/action_util.c ****  *
 163:tmk_core/common/action_util.c ****  * FIXME: needs doc
 164:tmk_core/common/action_util.c ****  */
 165:tmk_core/common/action_util.c **** void reset_oneshot_layer(void) {
 166:tmk_core/common/action_util.c ****     oneshot_layer_data = 0;
 167:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 168:tmk_core/common/action_util.c ****     oneshot_layer_time = 0;
 169:tmk_core/common/action_util.c **** #    endif
 170:tmk_core/common/action_util.c ****     oneshot_layer_changed_kb(get_oneshot_layer());
 171:tmk_core/common/action_util.c **** }
 172:tmk_core/common/action_util.c **** /** \brief Clear oneshot layer
 173:tmk_core/common/action_util.c ****  *
 174:tmk_core/common/action_util.c ****  * FIXME: needs doc
 175:tmk_core/common/action_util.c ****  */
 176:tmk_core/common/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state) {
 177:tmk_core/common/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 178:tmk_core/common/action_util.c ****     oneshot_layer_data &= ~state;
 179:tmk_core/common/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 180:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 181:tmk_core/common/action_util.c ****         reset_oneshot_layer();
 182:tmk_core/common/action_util.c ****     }
 183:tmk_core/common/action_util.c **** }
 184:tmk_core/common/action_util.c **** /** \brief Is oneshot layer active
 185:tmk_core/common/action_util.c ****  *
 186:tmk_core/common/action_util.c ****  * FIXME: needs doc
 187:tmk_core/common/action_util.c ****  */
 188:tmk_core/common/action_util.c **** bool is_oneshot_layer_active(void) { return get_oneshot_layer_state(); }
 166               		.loc 2 188 36 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 172               		.loc 2 188 38 view .LVU25
 173               	.LBB12:
 174               	.LBI12:
  84:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 175               		.loc 2 84 16 view .LVU26
 176               	.LBB13:
  84:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 177               		.loc 2 84 48 view .LVU27
  84:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 178               		.loc 2 84 74 is_stmt 0 view .LVU28
 179 0000 9091 0000 		lds r25,oneshot_layer_data
 180 0004 9770      		andi r25,lo8(7)
 181               	.LBE13:
 182               	.LBE12:
 183               		.loc 2 188 45 view .LVU29
 184 0006 81E0      		ldi r24,lo8(1)
 185 0008 01F4      		brne .L9
 186 000a 80E0      		ldi r24,0
 187               	.L9:
 188               	/* epilogue start */
 189               		.loc 2 188 1 view .LVU30
 190 000c 0895      		ret
 191               		.cfi_endproc
 192               	.LFE18:
 194               		.section	.text.oneshot_set,"ax",@progbits
 195               	.global	oneshot_set
 197               	oneshot_set:
 198               	.LVL7:
 199               	.LFB19:
 189:tmk_core/common/action_util.c **** 
 190:tmk_core/common/action_util.c **** /** \brief set oneshot
 191:tmk_core/common/action_util.c ****  *
 192:tmk_core/common/action_util.c ****  * FIXME: needs doc
 193:tmk_core/common/action_util.c ****  */
 194:tmk_core/common/action_util.c **** void oneshot_set(bool active) {
 200               		.loc 2 194 31 is_stmt 1 view -0
 201               		.cfi_startproc
 202               		.loc 2 194 31 is_stmt 0 view .LVU32
 203 0000 CF93      		push r28
 204               	.LCFI0:
 205               		.cfi_def_cfa_offset 3
 206               		.cfi_offset 28, -2
 207               	/* prologue: function */
 208               	/* frame size = 0 */
 209               	/* stack size = 1 */
 210               	.L__stack_usage = 1
 211 0002 C82F      		mov r28,r24
 195:tmk_core/common/action_util.c ****     if (keymap_config.oneshot_disable != active) {
 212               		.loc 2 195 5 is_stmt 1 view .LVU33
 213               		.loc 2 195 22 is_stmt 0 view .LVU34
 214 0004 8091 0000 		lds r24,keymap_config+1
 215               	.LVL8:
 216               		.loc 2 195 22 view .LVU35
 217 0008 82FB      		bst r24,2
 218 000a 9927      		clr r25
 219 000c 90F9      		bld r25,0
 220               		.loc 2 195 8 view .LVU36
 221 000e 9C17      		cp r25,r28
 222 0010 01F0      		breq .L10
 196:tmk_core/common/action_util.c ****         keymap_config.oneshot_disable = active;
 223               		.loc 2 196 9 is_stmt 1 view .LVU37
 224               		.loc 2 196 39 is_stmt 0 view .LVU38
 225 0012 C0FB      		bst r28,0
 226 0014 82F9      		bld r24,2
 227 0016 8093 0000 		sts keymap_config+1,r24
 197:tmk_core/common/action_util.c ****         eeconfig_update_keymap(keymap_config.raw);
 228               		.loc 2 197 9 is_stmt 1 view .LVU39
 229 001a 8091 0000 		lds r24,keymap_config
 230 001e 9091 0000 		lds r25,keymap_config+1
 231 0022 0E94 0000 		call eeconfig_update_keymap
 232               	.LVL9:
 198:tmk_core/common/action_util.c ****         dprintf("Oneshot: active: %d\n", active);
 233               		.loc 2 198 9 view .LVU40
 234               		.loc 2 198 9 view .LVU41
 235 0026 8091 0000 		lds r24,debug_config
 236 002a 80FF      		sbrs r24,0
 237 002c 00C0      		rjmp .L10
 238               		.loc 2 198 9 discriminator 1 view .LVU42
 239               	.LBB14:
 240               		.loc 2 198 9 discriminator 1 view .LVU43
 241               		.loc 2 198 9 discriminator 1 view .LVU44
 242               	.LBE14:
 243 002e 1F92      		push __zero_reg__
 244               	.LCFI1:
 245               		.cfi_def_cfa_offset 4
 246 0030 CF93      		push r28
 247               	.LCFI2:
 248               		.cfi_def_cfa_offset 5
 249 0032 80E0      		ldi r24,lo8(__c.2744)
 250 0034 90E0      		ldi r25,hi8(__c.2744)
 251 0036 9F93      		push r25
 252               	.LCFI3:
 253               		.cfi_def_cfa_offset 6
 254 0038 8F93      		push r24
 255               	.LCFI4:
 256               		.cfi_def_cfa_offset 7
 257 003a 0E94 0000 		call __xprintf
 258               	.LVL10:
 259 003e 0F90      		pop __tmp_reg__
 260 0040 0F90      		pop __tmp_reg__
 261 0042 0F90      		pop __tmp_reg__
 262 0044 0F90      		pop __tmp_reg__
 263               	.LCFI5:
 264               		.cfi_def_cfa_offset 3
 265               		.loc 2 198 9 discriminator 1 view .LVU45
 266               	.L10:
 267               	/* epilogue start */
 199:tmk_core/common/action_util.c ****     }
 200:tmk_core/common/action_util.c **** }
 268               		.loc 2 200 1 is_stmt 0 view .LVU46
 269 0046 CF91      		pop r28
 270               	.LVL11:
 271               		.loc 2 200 1 view .LVU47
 272 0048 0895      		ret
 273               		.cfi_endproc
 274               	.LFE19:
 276               		.section	.text.oneshot_toggle,"ax",@progbits
 277               	.global	oneshot_toggle
 279               	oneshot_toggle:
 280               	.LFB20:
 201:tmk_core/common/action_util.c **** 
 202:tmk_core/common/action_util.c **** /** \brief toggle oneshot
 203:tmk_core/common/action_util.c ****  *
 204:tmk_core/common/action_util.c ****  * FIXME: needs doc
 205:tmk_core/common/action_util.c ****  */
 206:tmk_core/common/action_util.c **** void oneshot_toggle(void) { oneshot_set(!keymap_config.oneshot_disable); }
 281               		.loc 2 206 27 is_stmt 1 view -0
 282               		.cfi_startproc
 283               	/* prologue: function */
 284               	/* frame size = 0 */
 285               	/* stack size = 0 */
 286               	.L__stack_usage = 0
 287               		.loc 2 206 29 view .LVU49
 288               		.loc 2 206 55 is_stmt 0 view .LVU50
 289 0000 8091 0000 		lds r24,keymap_config+1
 290 0004 82FB      		bst r24,2
 291 0006 8827      		clr r24
 292 0008 80F9      		bld r24,0
 293               		.loc 2 206 29 view .LVU51
 294 000a 91E0      		ldi r25,lo8(1)
 295 000c 8927      		eor r24,r25
 296 000e 0C94 0000 		jmp oneshot_set
 297               	.LVL12:
 298               		.cfi_endproc
 299               	.LFE20:
 301               		.section	.text.oneshot_enable,"ax",@progbits
 302               	.global	oneshot_enable
 304               	oneshot_enable:
 305               	.LFB21:
 207:tmk_core/common/action_util.c **** 
 208:tmk_core/common/action_util.c **** /** \brief enable oneshot
 209:tmk_core/common/action_util.c ****  *
 210:tmk_core/common/action_util.c ****  * FIXME: needs doc
 211:tmk_core/common/action_util.c ****  */
 212:tmk_core/common/action_util.c **** void oneshot_enable(void) { oneshot_set(true); }
 306               		.loc 2 212 27 is_stmt 1 view -0
 307               		.cfi_startproc
 308               	/* prologue: function */
 309               	/* frame size = 0 */
 310               	/* stack size = 0 */
 311               	.L__stack_usage = 0
 312               		.loc 2 212 29 view .LVU53
 313 0000 81E0      		ldi r24,lo8(1)
 314 0002 0C94 0000 		jmp oneshot_set
 315               	.LVL13:
 316               		.cfi_endproc
 317               	.LFE21:
 319               		.section	.text.oneshot_disable,"ax",@progbits
 320               	.global	oneshot_disable
 322               	oneshot_disable:
 323               	.LFB22:
 213:tmk_core/common/action_util.c **** 
 214:tmk_core/common/action_util.c **** /** \brief disable oneshot
 215:tmk_core/common/action_util.c ****  *
 216:tmk_core/common/action_util.c ****  * FIXME: needs doc
 217:tmk_core/common/action_util.c ****  */
 218:tmk_core/common/action_util.c **** void oneshot_disable(void) { oneshot_set(false); }
 324               		.loc 2 218 28 view -0
 325               		.cfi_startproc
 326               	/* prologue: function */
 327               	/* frame size = 0 */
 328               	/* stack size = 0 */
 329               	.L__stack_usage = 0
 330               		.loc 2 218 30 view .LVU55
 331 0000 80E0      		ldi r24,0
 332 0002 0C94 0000 		jmp oneshot_set
 333               	.LVL14:
 334               		.cfi_endproc
 335               	.LFE22:
 337               		.section	.text.is_oneshot_enabled,"ax",@progbits
 338               	.global	is_oneshot_enabled
 340               	is_oneshot_enabled:
 341               	.LFB23:
 219:tmk_core/common/action_util.c **** 
 220:tmk_core/common/action_util.c **** bool is_oneshot_enabled(void) { return keymap_config.oneshot_disable; }
 342               		.loc 2 220 31 view -0
 343               		.cfi_startproc
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 0 */
 347               	.L__stack_usage = 0
 348               		.loc 2 220 33 view .LVU57
 349               		.loc 2 220 53 is_stmt 0 view .LVU58
 350 0000 8091 0000 		lds r24,keymap_config+1
 351               		.loc 2 220 1 view .LVU59
 352 0004 82FB      		bst r24,2
 353 0006 8827      		clr r24
 354 0008 80F9      		bld r24,0
 355               	/* epilogue start */
 356 000a 0895      		ret
 357               		.cfi_endproc
 358               	.LFE23:
 360               		.section	.text.get_mods,"ax",@progbits
 361               	.global	get_mods
 363               	get_mods:
 364               	.LFB25:
 221:tmk_core/common/action_util.c **** 
 222:tmk_core/common/action_util.c **** #endif
 223:tmk_core/common/action_util.c **** 
 224:tmk_core/common/action_util.c **** /** \brief Send keyboard report
 225:tmk_core/common/action_util.c ****  *
 226:tmk_core/common/action_util.c ****  * FIXME: needs doc
 227:tmk_core/common/action_util.c ****  */
 228:tmk_core/common/action_util.c **** void send_keyboard_report(void) {
 229:tmk_core/common/action_util.c ****     keyboard_report->mods = real_mods;
 230:tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 231:tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 232:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 233:tmk_core/common/action_util.c ****     if (oneshot_mods) {
 234:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 235:tmk_core/common/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 236:tmk_core/common/action_util.c ****             dprintf("Oneshot: timeout\n");
 237:tmk_core/common/action_util.c ****             clear_oneshot_mods();
 238:tmk_core/common/action_util.c ****         }
 239:tmk_core/common/action_util.c **** #    endif
 240:tmk_core/common/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 241:tmk_core/common/action_util.c ****         if (has_anykey(keyboard_report)) {
 242:tmk_core/common/action_util.c ****             clear_oneshot_mods();
 243:tmk_core/common/action_util.c ****         }
 244:tmk_core/common/action_util.c ****     }
 245:tmk_core/common/action_util.c **** 
 246:tmk_core/common/action_util.c **** #endif
 247:tmk_core/common/action_util.c ****     host_keyboard_send(keyboard_report);
 248:tmk_core/common/action_util.c **** }
 249:tmk_core/common/action_util.c **** 
 250:tmk_core/common/action_util.c **** /** \brief Get mods
 251:tmk_core/common/action_util.c ****  *
 252:tmk_core/common/action_util.c ****  * FIXME: needs doc
 253:tmk_core/common/action_util.c ****  */
 254:tmk_core/common/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 365               		.loc 2 254 24 is_stmt 1 view -0
 366               		.cfi_startproc
 367               	/* prologue: function */
 368               	/* frame size = 0 */
 369               	/* stack size = 0 */
 370               	.L__stack_usage = 0
 371               		.loc 2 254 26 view .LVU61
 372               		.loc 2 254 1 is_stmt 0 view .LVU62
 373 0000 8091 0000 		lds r24,real_mods
 374               	/* epilogue start */
 375 0004 0895      		ret
 376               		.cfi_endproc
 377               	.LFE25:
 379               		.section	.text.add_mods,"ax",@progbits
 380               	.global	add_mods
 382               	add_mods:
 383               	.LVL15:
 384               	.LFB26:
 255:tmk_core/common/action_util.c **** /** \brief add mods
 256:tmk_core/common/action_util.c ****  *
 257:tmk_core/common/action_util.c ****  * FIXME: needs doc
 258:tmk_core/common/action_util.c ****  */
 259:tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 385               		.loc 2 259 29 is_stmt 1 view -0
 386               		.cfi_startproc
 387               	/* prologue: function */
 388               	/* frame size = 0 */
 389               	/* stack size = 0 */
 390               	.L__stack_usage = 0
 391               		.loc 2 259 31 view .LVU64
 392               		.loc 2 259 41 is_stmt 0 view .LVU65
 393 0000 9091 0000 		lds r25,real_mods
 394 0004 892B      		or r24,r25
 395               	.LVL16:
 396               		.loc 2 259 41 view .LVU66
 397 0006 8093 0000 		sts real_mods,r24
 398               	/* epilogue start */
 399               		.loc 2 259 1 view .LVU67
 400 000a 0895      		ret
 401               		.cfi_endproc
 402               	.LFE26:
 404               		.section	.text.del_mods,"ax",@progbits
 405               	.global	del_mods
 407               	del_mods:
 408               	.LVL17:
 409               	.LFB27:
 260:tmk_core/common/action_util.c **** /** \brief del mods
 261:tmk_core/common/action_util.c ****  *
 262:tmk_core/common/action_util.c ****  * FIXME: needs doc
 263:tmk_core/common/action_util.c ****  */
 264:tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 410               		.loc 2 264 29 is_stmt 1 view -0
 411               		.cfi_startproc
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 0 */
 415               	.L__stack_usage = 0
 416               		.loc 2 264 31 view .LVU69
 417               		.loc 2 264 41 is_stmt 0 view .LVU70
 418 0000 8095      		com r24
 419               	.LVL18:
 420               		.loc 2 264 41 view .LVU71
 421 0002 9091 0000 		lds r25,real_mods
 422 0006 9823      		and r25,r24
 423 0008 9093 0000 		sts real_mods,r25
 424               	/* epilogue start */
 425               		.loc 2 264 1 view .LVU72
 426 000c 0895      		ret
 427               		.cfi_endproc
 428               	.LFE27:
 430               		.section	.text.set_mods,"ax",@progbits
 431               	.global	set_mods
 433               	set_mods:
 434               	.LVL19:
 435               	.LFB28:
 265:tmk_core/common/action_util.c **** /** \brief set mods
 266:tmk_core/common/action_util.c ****  *
 267:tmk_core/common/action_util.c ****  * FIXME: needs doc
 268:tmk_core/common/action_util.c ****  */
 269:tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 436               		.loc 2 269 29 is_stmt 1 view -0
 437               		.cfi_startproc
 438               	/* prologue: function */
 439               	/* frame size = 0 */
 440               	/* stack size = 0 */
 441               	.L__stack_usage = 0
 442               		.loc 2 269 31 view .LVU74
 443               		.loc 2 269 41 is_stmt 0 view .LVU75
 444 0000 8093 0000 		sts real_mods,r24
 445               	/* epilogue start */
 446               		.loc 2 269 1 view .LVU76
 447 0004 0895      		ret
 448               		.cfi_endproc
 449               	.LFE28:
 451               		.section	.text.clear_mods,"ax",@progbits
 452               	.global	clear_mods
 454               	clear_mods:
 455               	.LFB29:
 270:tmk_core/common/action_util.c **** /** \brief clear mods
 271:tmk_core/common/action_util.c ****  *
 272:tmk_core/common/action_util.c ****  * FIXME: needs doc
 273:tmk_core/common/action_util.c ****  */
 274:tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 456               		.loc 2 274 23 is_stmt 1 view -0
 457               		.cfi_startproc
 458               	/* prologue: function */
 459               	/* frame size = 0 */
 460               	/* stack size = 0 */
 461               	.L__stack_usage = 0
 462               		.loc 2 274 25 view .LVU78
 463               		.loc 2 274 35 is_stmt 0 view .LVU79
 464 0000 1092 0000 		sts real_mods,__zero_reg__
 465               	/* epilogue start */
 466               		.loc 2 274 1 view .LVU80
 467 0004 0895      		ret
 468               		.cfi_endproc
 469               	.LFE29:
 471               		.section	.text.get_weak_mods,"ax",@progbits
 472               	.global	get_weak_mods
 474               	get_weak_mods:
 475               	.LFB30:
 275:tmk_core/common/action_util.c **** 
 276:tmk_core/common/action_util.c **** /** \brief get weak mods
 277:tmk_core/common/action_util.c ****  *
 278:tmk_core/common/action_util.c ****  * FIXME: needs doc
 279:tmk_core/common/action_util.c ****  */
 280:tmk_core/common/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 476               		.loc 2 280 29 is_stmt 1 view -0
 477               		.cfi_startproc
 478               	/* prologue: function */
 479               	/* frame size = 0 */
 480               	/* stack size = 0 */
 481               	.L__stack_usage = 0
 482               		.loc 2 280 31 view .LVU82
 483               		.loc 2 280 1 is_stmt 0 view .LVU83
 484 0000 8091 0000 		lds r24,weak_mods
 485               	/* epilogue start */
 486 0004 0895      		ret
 487               		.cfi_endproc
 488               	.LFE30:
 490               		.section	.text.add_weak_mods,"ax",@progbits
 491               	.global	add_weak_mods
 493               	add_weak_mods:
 494               	.LVL20:
 495               	.LFB31:
 281:tmk_core/common/action_util.c **** /** \brief add weak mods
 282:tmk_core/common/action_util.c ****  *
 283:tmk_core/common/action_util.c ****  * FIXME: needs doc
 284:tmk_core/common/action_util.c ****  */
 285:tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 496               		.loc 2 285 34 is_stmt 1 view -0
 497               		.cfi_startproc
 498               	/* prologue: function */
 499               	/* frame size = 0 */
 500               	/* stack size = 0 */
 501               	.L__stack_usage = 0
 502               		.loc 2 285 36 view .LVU85
 503               		.loc 2 285 46 is_stmt 0 view .LVU86
 504 0000 9091 0000 		lds r25,weak_mods
 505 0004 892B      		or r24,r25
 506               	.LVL21:
 507               		.loc 2 285 46 view .LVU87
 508 0006 8093 0000 		sts weak_mods,r24
 509               	/* epilogue start */
 510               		.loc 2 285 1 view .LVU88
 511 000a 0895      		ret
 512               		.cfi_endproc
 513               	.LFE31:
 515               		.section	.text.del_weak_mods,"ax",@progbits
 516               	.global	del_weak_mods
 518               	del_weak_mods:
 519               	.LVL22:
 520               	.LFB32:
 286:tmk_core/common/action_util.c **** /** \brief del weak mods
 287:tmk_core/common/action_util.c ****  *
 288:tmk_core/common/action_util.c ****  * FIXME: needs doc
 289:tmk_core/common/action_util.c ****  */
 290:tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 521               		.loc 2 290 34 is_stmt 1 view -0
 522               		.cfi_startproc
 523               	/* prologue: function */
 524               	/* frame size = 0 */
 525               	/* stack size = 0 */
 526               	.L__stack_usage = 0
 527               		.loc 2 290 36 view .LVU90
 528               		.loc 2 290 46 is_stmt 0 view .LVU91
 529 0000 8095      		com r24
 530               	.LVL23:
 531               		.loc 2 290 46 view .LVU92
 532 0002 9091 0000 		lds r25,weak_mods
 533 0006 9823      		and r25,r24
 534 0008 9093 0000 		sts weak_mods,r25
 535               	/* epilogue start */
 536               		.loc 2 290 1 view .LVU93
 537 000c 0895      		ret
 538               		.cfi_endproc
 539               	.LFE32:
 541               		.section	.text.set_weak_mods,"ax",@progbits
 542               	.global	set_weak_mods
 544               	set_weak_mods:
 545               	.LVL24:
 546               	.LFB33:
 291:tmk_core/common/action_util.c **** /** \brief set weak mods
 292:tmk_core/common/action_util.c ****  *
 293:tmk_core/common/action_util.c ****  * FIXME: needs doc
 294:tmk_core/common/action_util.c ****  */
 295:tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 547               		.loc 2 295 34 is_stmt 1 view -0
 548               		.cfi_startproc
 549               	/* prologue: function */
 550               	/* frame size = 0 */
 551               	/* stack size = 0 */
 552               	.L__stack_usage = 0
 553               		.loc 2 295 36 view .LVU95
 554               		.loc 2 295 46 is_stmt 0 view .LVU96
 555 0000 8093 0000 		sts weak_mods,r24
 556               	/* epilogue start */
 557               		.loc 2 295 1 view .LVU97
 558 0004 0895      		ret
 559               		.cfi_endproc
 560               	.LFE33:
 562               		.section	.text.clear_weak_mods,"ax",@progbits
 563               	.global	clear_weak_mods
 565               	clear_weak_mods:
 566               	.LFB34:
 296:tmk_core/common/action_util.c **** /** \brief clear weak mods
 297:tmk_core/common/action_util.c ****  *
 298:tmk_core/common/action_util.c ****  * FIXME: needs doc
 299:tmk_core/common/action_util.c ****  */
 300:tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 567               		.loc 2 300 28 is_stmt 1 view -0
 568               		.cfi_startproc
 569               	/* prologue: function */
 570               	/* frame size = 0 */
 571               	/* stack size = 0 */
 572               	.L__stack_usage = 0
 573               		.loc 2 300 30 view .LVU99
 574               		.loc 2 300 40 is_stmt 0 view .LVU100
 575 0000 1092 0000 		sts weak_mods,__zero_reg__
 576               	/* epilogue start */
 577               		.loc 2 300 1 view .LVU101
 578 0004 0895      		ret
 579               		.cfi_endproc
 580               	.LFE34:
 582               		.section	.text.get_macro_mods,"ax",@progbits
 583               	.global	get_macro_mods
 585               	get_macro_mods:
 586               	.LFB35:
 301:tmk_core/common/action_util.c **** 
 302:tmk_core/common/action_util.c **** /* macro modifier */
 303:tmk_core/common/action_util.c **** /** \brief get macro mods
 304:tmk_core/common/action_util.c ****  *
 305:tmk_core/common/action_util.c ****  * FIXME: needs doc
 306:tmk_core/common/action_util.c ****  */
 307:tmk_core/common/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 587               		.loc 2 307 30 is_stmt 1 view -0
 588               		.cfi_startproc
 589               	/* prologue: function */
 590               	/* frame size = 0 */
 591               	/* stack size = 0 */
 592               	.L__stack_usage = 0
 593               		.loc 2 307 32 view .LVU103
 594               		.loc 2 307 1 is_stmt 0 view .LVU104
 595 0000 8091 0000 		lds r24,macro_mods
 596               	/* epilogue start */
 597 0004 0895      		ret
 598               		.cfi_endproc
 599               	.LFE35:
 601               		.section	.text.add_macro_mods,"ax",@progbits
 602               	.global	add_macro_mods
 604               	add_macro_mods:
 605               	.LVL25:
 606               	.LFB36:
 308:tmk_core/common/action_util.c **** /** \brief add macro mods
 309:tmk_core/common/action_util.c ****  *
 310:tmk_core/common/action_util.c ****  * FIXME: needs doc
 311:tmk_core/common/action_util.c ****  */
 312:tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 607               		.loc 2 312 35 is_stmt 1 view -0
 608               		.cfi_startproc
 609               	/* prologue: function */
 610               	/* frame size = 0 */
 611               	/* stack size = 0 */
 612               	.L__stack_usage = 0
 613               		.loc 2 312 37 view .LVU106
 614               		.loc 2 312 48 is_stmt 0 view .LVU107
 615 0000 9091 0000 		lds r25,macro_mods
 616 0004 892B      		or r24,r25
 617               	.LVL26:
 618               		.loc 2 312 48 view .LVU108
 619 0006 8093 0000 		sts macro_mods,r24
 620               	/* epilogue start */
 621               		.loc 2 312 1 view .LVU109
 622 000a 0895      		ret
 623               		.cfi_endproc
 624               	.LFE36:
 626               		.section	.text.del_macro_mods,"ax",@progbits
 627               	.global	del_macro_mods
 629               	del_macro_mods:
 630               	.LVL27:
 631               	.LFB37:
 313:tmk_core/common/action_util.c **** /** \brief del macro mods
 314:tmk_core/common/action_util.c ****  *
 315:tmk_core/common/action_util.c ****  * FIXME: needs doc
 316:tmk_core/common/action_util.c ****  */
 317:tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 632               		.loc 2 317 35 is_stmt 1 view -0
 633               		.cfi_startproc
 634               	/* prologue: function */
 635               	/* frame size = 0 */
 636               	/* stack size = 0 */
 637               	.L__stack_usage = 0
 638               		.loc 2 317 37 view .LVU111
 639               		.loc 2 317 48 is_stmt 0 view .LVU112
 640 0000 8095      		com r24
 641               	.LVL28:
 642               		.loc 2 317 48 view .LVU113
 643 0002 9091 0000 		lds r25,macro_mods
 644 0006 9823      		and r25,r24
 645 0008 9093 0000 		sts macro_mods,r25
 646               	/* epilogue start */
 647               		.loc 2 317 1 view .LVU114
 648 000c 0895      		ret
 649               		.cfi_endproc
 650               	.LFE37:
 652               		.section	.text.set_macro_mods,"ax",@progbits
 653               	.global	set_macro_mods
 655               	set_macro_mods:
 656               	.LVL29:
 657               	.LFB38:
 318:tmk_core/common/action_util.c **** /** \brief set macro mods
 319:tmk_core/common/action_util.c ****  *
 320:tmk_core/common/action_util.c ****  * FIXME: needs doc
 321:tmk_core/common/action_util.c ****  */
 322:tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 658               		.loc 2 322 35 is_stmt 1 view -0
 659               		.cfi_startproc
 660               	/* prologue: function */
 661               	/* frame size = 0 */
 662               	/* stack size = 0 */
 663               	.L__stack_usage = 0
 664               		.loc 2 322 37 view .LVU116
 665               		.loc 2 322 48 is_stmt 0 view .LVU117
 666 0000 8093 0000 		sts macro_mods,r24
 667               	/* epilogue start */
 668               		.loc 2 322 1 view .LVU118
 669 0004 0895      		ret
 670               		.cfi_endproc
 671               	.LFE38:
 673               		.section	.text.clear_macro_mods,"ax",@progbits
 674               	.global	clear_macro_mods
 676               	clear_macro_mods:
 677               	.LFB39:
 323:tmk_core/common/action_util.c **** /** \brief clear macro mods
 324:tmk_core/common/action_util.c ****  *
 325:tmk_core/common/action_util.c ****  * FIXME: needs doc
 326:tmk_core/common/action_util.c ****  */
 327:tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 678               		.loc 2 327 29 is_stmt 1 view -0
 679               		.cfi_startproc
 680               	/* prologue: function */
 681               	/* frame size = 0 */
 682               	/* stack size = 0 */
 683               	.L__stack_usage = 0
 684               		.loc 2 327 31 view .LVU120
 685               		.loc 2 327 42 is_stmt 0 view .LVU121
 686 0000 1092 0000 		sts macro_mods,__zero_reg__
 687               	/* epilogue start */
 688               		.loc 2 327 1 view .LVU122
 689 0004 0895      		ret
 690               		.cfi_endproc
 691               	.LFE39:
 693               		.section	.text.get_oneshot_mods,"ax",@progbits
 694               	.global	get_oneshot_mods
 696               	get_oneshot_mods:
 697               	.LFB40:
 328:tmk_core/common/action_util.c **** 
 329:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 330:tmk_core/common/action_util.c **** /** \brief get oneshot mods
 331:tmk_core/common/action_util.c ****  *
 332:tmk_core/common/action_util.c ****  * FIXME: needs doc
 333:tmk_core/common/action_util.c ****  */
 334:tmk_core/common/action_util.c **** uint8_t get_oneshot_mods(void) { return oneshot_mods; }
 698               		.loc 2 334 32 is_stmt 1 view -0
 699               		.cfi_startproc
 700               	/* prologue: function */
 701               	/* frame size = 0 */
 702               	/* stack size = 0 */
 703               	.L__stack_usage = 0
 704               		.loc 2 334 34 view .LVU124
 705               		.loc 2 334 1 is_stmt 0 view .LVU125
 706 0000 8091 0000 		lds r24,oneshot_mods
 707               	/* epilogue start */
 708 0004 0895      		ret
 709               		.cfi_endproc
 710               	.LFE40:
 712               		.section	.text.oneshot_locked_mods_changed_user,"ax",@progbits
 713               		.weak	oneshot_locked_mods_changed_user
 715               	oneshot_locked_mods_changed_user:
 716               	.LVL30:
 717               	.LFB45:
 335:tmk_core/common/action_util.c **** 
 336:tmk_core/common/action_util.c **** void add_oneshot_mods(uint8_t mods) {
 337:tmk_core/common/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 338:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 339:tmk_core/common/action_util.c ****         oneshot_time = timer_read();
 340:tmk_core/common/action_util.c **** #    endif
 341:tmk_core/common/action_util.c ****         oneshot_mods |= mods;
 342:tmk_core/common/action_util.c ****         oneshot_mods_changed_kb(mods);
 343:tmk_core/common/action_util.c ****     }
 344:tmk_core/common/action_util.c **** }
 345:tmk_core/common/action_util.c **** 
 346:tmk_core/common/action_util.c **** void del_oneshot_mods(uint8_t mods) {
 347:tmk_core/common/action_util.c ****     if (oneshot_mods & mods) {
 348:tmk_core/common/action_util.c ****         oneshot_mods &= ~mods;
 349:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 350:tmk_core/common/action_util.c ****         oneshot_time = oneshot_mods ? timer_read() : 0;
 351:tmk_core/common/action_util.c **** #    endif
 352:tmk_core/common/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 353:tmk_core/common/action_util.c ****     }
 354:tmk_core/common/action_util.c **** }
 355:tmk_core/common/action_util.c **** 
 356:tmk_core/common/action_util.c **** /** \brief set oneshot mods
 357:tmk_core/common/action_util.c ****  *
 358:tmk_core/common/action_util.c ****  * FIXME: needs doc
 359:tmk_core/common/action_util.c ****  */
 360:tmk_core/common/action_util.c **** void set_oneshot_mods(uint8_t mods) {
 361:tmk_core/common/action_util.c ****     if (!keymap_config.oneshot_disable) {
 362:tmk_core/common/action_util.c ****         if (oneshot_mods != mods) {
 363:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 364:tmk_core/common/action_util.c ****             oneshot_time = timer_read();
 365:tmk_core/common/action_util.c **** #    endif
 366:tmk_core/common/action_util.c ****             oneshot_mods = mods;
 367:tmk_core/common/action_util.c ****             oneshot_mods_changed_kb(mods);
 368:tmk_core/common/action_util.c ****         }
 369:tmk_core/common/action_util.c ****     }
 370:tmk_core/common/action_util.c **** }
 371:tmk_core/common/action_util.c **** 
 372:tmk_core/common/action_util.c **** /** \brief clear oneshot mods
 373:tmk_core/common/action_util.c ****  *
 374:tmk_core/common/action_util.c ****  * FIXME: needs doc
 375:tmk_core/common/action_util.c ****  */
 376:tmk_core/common/action_util.c **** void clear_oneshot_mods(void) {
 377:tmk_core/common/action_util.c ****     if (oneshot_mods) {
 378:tmk_core/common/action_util.c ****         oneshot_mods = 0;
 379:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 380:tmk_core/common/action_util.c ****         oneshot_time = 0;
 381:tmk_core/common/action_util.c **** #    endif
 382:tmk_core/common/action_util.c ****         oneshot_mods_changed_kb(oneshot_mods);
 383:tmk_core/common/action_util.c ****     }
 384:tmk_core/common/action_util.c **** }
 385:tmk_core/common/action_util.c **** #endif
 386:tmk_core/common/action_util.c **** 
 387:tmk_core/common/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 388:tmk_core/common/action_util.c ****  *
 389:tmk_core/common/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 390:tmk_core/common/action_util.c ****  */
 391:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_user(uint8_t mods) {}
 718               		.loc 2 391 75 is_stmt 1 view -0
 719               		.cfi_startproc
 720               	/* prologue: function */
 721               	/* frame size = 0 */
 722               	/* stack size = 0 */
 723               	.L__stack_usage = 0
 724               		.loc 2 391 76 view .LVU127
 725               	/* epilogue start */
 726               		.loc 2 391 1 is_stmt 0 view .LVU128
 727 0000 0895      		ret
 728               		.cfi_endproc
 729               	.LFE45:
 731               		.set	oneshot_locked_mods_changed_user.localalias.0,oneshot_locked_mods_changed_user
 732               		.section	.text.oneshot_locked_mods_changed_kb,"ax",@progbits
 733               		.weak	oneshot_locked_mods_changed_kb
 735               	oneshot_locked_mods_changed_kb:
 736               	.LVL31:
 737               	.LFB46:
 392:tmk_core/common/action_util.c **** 
 393:tmk_core/common/action_util.c **** /** \brief Called when the locked one shot modifiers have been changed.
 394:tmk_core/common/action_util.c ****  *
 395:tmk_core/common/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 396:tmk_core/common/action_util.c ****  */
 397:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_locked_mods_changed_kb(uint8_t mods) { oneshot_locked_mods_chang
 738               		.loc 2 397 73 is_stmt 1 view -0
 739               		.cfi_startproc
 740               	/* prologue: function */
 741               	/* frame size = 0 */
 742               	/* stack size = 0 */
 743               	.L__stack_usage = 0
 744               		.loc 2 397 75 view .LVU130
 745 0000 0C94 0000 		jmp oneshot_locked_mods_changed_user
 746               	.LVL32:
 747               		.loc 2 397 75 is_stmt 0 view .LVU131
 748               		.cfi_endproc
 749               	.LFE46:
 751               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 752               	.global	set_oneshot_locked_mods
 754               	set_oneshot_locked_mods:
 755               	.LVL33:
 756               	.LFB10:
  53:tmk_core/common/action_util.c ****     if (mods != oneshot_locked_mods) {
 757               		.loc 2 53 54 is_stmt 1 view -0
 758               		.cfi_startproc
 759               	/* prologue: function */
 760               	/* frame size = 0 */
 761               	/* stack size = 0 */
 762               	.L__stack_usage = 0
  54:tmk_core/common/action_util.c ****         oneshot_locked_mods = mods;
 763               		.loc 2 54 5 view .LVU133
  54:tmk_core/common/action_util.c ****         oneshot_locked_mods = mods;
 764               		.loc 2 54 8 is_stmt 0 view .LVU134
 765 0000 9091 0000 		lds r25,oneshot_locked_mods
 766 0004 9817      		cp r25,r24
 767 0006 01F0      		breq .L39
  55:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 768               		.loc 2 55 9 is_stmt 1 view .LVU135
  55:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 769               		.loc 2 55 29 is_stmt 0 view .LVU136
 770 0008 8093 0000 		sts oneshot_locked_mods,r24
  56:tmk_core/common/action_util.c ****     }
 771               		.loc 2 56 9 is_stmt 1 view .LVU137
 772 000c 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 773               	.LVL34:
 774               	.L39:
 775               	/* epilogue start */
  58:tmk_core/common/action_util.c **** void clear_oneshot_locked_mods(void) {
 776               		.loc 2 58 1 is_stmt 0 view .LVU138
 777 0010 0895      		ret
 778               		.cfi_endproc
 779               	.LFE10:
 781               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 782               	.global	clear_oneshot_locked_mods
 784               	clear_oneshot_locked_mods:
 785               	.LFB11:
  59:tmk_core/common/action_util.c ****     if (oneshot_locked_mods) {
 786               		.loc 2 59 38 is_stmt 1 view -0
 787               		.cfi_startproc
 788               	/* prologue: function */
 789               	/* frame size = 0 */
 790               	/* stack size = 0 */
 791               	.L__stack_usage = 0
  60:tmk_core/common/action_util.c ****         oneshot_locked_mods = 0;
 792               		.loc 2 60 5 view .LVU140
  60:tmk_core/common/action_util.c ****         oneshot_locked_mods = 0;
 793               		.loc 2 60 8 is_stmt 0 view .LVU141
 794 0000 8091 0000 		lds r24,oneshot_locked_mods
 795 0004 8823      		tst r24
 796 0006 01F0      		breq .L41
  61:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 797               		.loc 2 61 9 is_stmt 1 view .LVU142
  61:tmk_core/common/action_util.c ****         oneshot_locked_mods_changed_kb(oneshot_locked_mods);
 798               		.loc 2 61 29 is_stmt 0 view .LVU143
 799 0008 1092 0000 		sts oneshot_locked_mods,__zero_reg__
  62:tmk_core/common/action_util.c ****     }
 800               		.loc 2 62 9 is_stmt 1 view .LVU144
 801 000c 80E0      		ldi r24,0
 802 000e 0C94 0000 		jmp oneshot_locked_mods_changed_kb
 803               	.LVL35:
 804               	.L41:
 805               	/* epilogue start */
  64:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 806               		.loc 2 64 1 is_stmt 0 view .LVU145
 807 0012 0895      		ret
 808               		.cfi_endproc
 809               	.LFE11:
 811               		.section	.text.oneshot_mods_changed_user,"ax",@progbits
 812               		.weak	oneshot_mods_changed_user
 814               	oneshot_mods_changed_user:
 815               	.LFB53:
 816               		.cfi_startproc
 817               	/* prologue: function */
 818               	/* frame size = 0 */
 819               	/* stack size = 0 */
 820               	.L__stack_usage = 0
 821               	/* epilogue start */
 822 0000 0895      		ret
 823               		.cfi_endproc
 824               	.LFE53:
 826               		.section	.text.oneshot_mods_changed_kb,"ax",@progbits
 827               		.weak	oneshot_mods_changed_kb
 829               	oneshot_mods_changed_kb:
 830               	.LVL36:
 831               	.LFB48:
 398:tmk_core/common/action_util.c **** 
 399:tmk_core/common/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 400:tmk_core/common/action_util.c ****  *
 401:tmk_core/common/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 402:tmk_core/common/action_util.c ****  */
 403:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_user(uint8_t mods) {}
 404:tmk_core/common/action_util.c **** 
 405:tmk_core/common/action_util.c **** /** \brief Called when the one shot modifiers have been changed.
 406:tmk_core/common/action_util.c ****  *
 407:tmk_core/common/action_util.c ****  * \param mods Contains the active modifiers active after the change.
 408:tmk_core/common/action_util.c ****  */
 409:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_mods_changed_kb(uint8_t mods) { oneshot_mods_changed_user(mods);
 832               		.loc 2 409 66 is_stmt 1 view -0
 833               		.cfi_startproc
 834               	/* prologue: function */
 835               	/* frame size = 0 */
 836               	/* stack size = 0 */
 837               	.L__stack_usage = 0
 838               		.loc 2 409 68 view .LVU147
 839 0000 0C94 0000 		jmp oneshot_mods_changed_user
 840               	.LVL37:
 841               		.loc 2 409 68 is_stmt 0 view .LVU148
 842               		.cfi_endproc
 843               	.LFE48:
 845               		.section	.text.add_oneshot_mods,"ax",@progbits
 846               	.global	add_oneshot_mods
 848               	add_oneshot_mods:
 849               	.LVL38:
 850               	.LFB41:
 336:tmk_core/common/action_util.c ****     if ((oneshot_mods & mods) != mods) {
 851               		.loc 2 336 37 is_stmt 1 view -0
 852               		.cfi_startproc
 853               	/* prologue: function */
 854               	/* frame size = 0 */
 855               	/* stack size = 0 */
 856               	.L__stack_usage = 0
 337:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 857               		.loc 2 337 5 view .LVU150
 337:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 858               		.loc 2 337 31 is_stmt 0 view .LVU151
 859 0000 9091 0000 		lds r25,oneshot_mods
 860 0004 292F      		mov r18,r25
 861 0006 2823      		and r18,r24
 337:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 862               		.loc 2 337 8 view .LVU152
 863 0008 2817      		cp r18,r24
 864 000a 01F0      		breq .L45
 341:tmk_core/common/action_util.c ****         oneshot_mods_changed_kb(mods);
 865               		.loc 2 341 9 is_stmt 1 view .LVU153
 341:tmk_core/common/action_util.c ****         oneshot_mods_changed_kb(mods);
 866               		.loc 2 341 22 is_stmt 0 view .LVU154
 867 000c 982B      		or r25,r24
 868 000e 9093 0000 		sts oneshot_mods,r25
 342:tmk_core/common/action_util.c ****     }
 869               		.loc 2 342 9 is_stmt 1 view .LVU155
 870 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 871               	.LVL39:
 872               	.L45:
 873               	/* epilogue start */
 344:tmk_core/common/action_util.c **** 
 874               		.loc 2 344 1 is_stmt 0 view .LVU156
 875 0016 0895      		ret
 876               		.cfi_endproc
 877               	.LFE41:
 879               		.section	.text.del_oneshot_mods,"ax",@progbits
 880               	.global	del_oneshot_mods
 882               	del_oneshot_mods:
 883               	.LVL40:
 884               	.LFB42:
 346:tmk_core/common/action_util.c ****     if (oneshot_mods & mods) {
 885               		.loc 2 346 37 is_stmt 1 view -0
 886               		.cfi_startproc
 887               	/* prologue: function */
 888               	/* frame size = 0 */
 889               	/* stack size = 0 */
 890               	.L__stack_usage = 0
 347:tmk_core/common/action_util.c ****         oneshot_mods &= ~mods;
 891               		.loc 2 347 5 view .LVU158
 347:tmk_core/common/action_util.c ****         oneshot_mods &= ~mods;
 892               		.loc 2 347 9 is_stmt 0 view .LVU159
 893 0000 9091 0000 		lds r25,oneshot_mods
 894 0004 292F      		mov r18,r25
 895 0006 2823      		and r18,r24
 347:tmk_core/common/action_util.c ****         oneshot_mods &= ~mods;
 896               		.loc 2 347 8 view .LVU160
 897 0008 01F0      		breq .L47
 348:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 898               		.loc 2 348 9 is_stmt 1 view .LVU161
 348:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 899               		.loc 2 348 22 is_stmt 0 view .LVU162
 900 000a 8095      		com r24
 901               	.LVL41:
 348:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 902               		.loc 2 348 22 view .LVU163
 903 000c 8923      		and r24,r25
 904               	.LVL42:
 348:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 905               		.loc 2 348 22 view .LVU164
 906 000e 8093 0000 		sts oneshot_mods,r24
 352:tmk_core/common/action_util.c ****     }
 907               		.loc 2 352 9 is_stmt 1 view .LVU165
 908 0012 0C94 0000 		jmp oneshot_mods_changed_kb
 909               	.LVL43:
 910               	.L47:
 911               	/* epilogue start */
 354:tmk_core/common/action_util.c **** 
 912               		.loc 2 354 1 is_stmt 0 view .LVU166
 913 0016 0895      		ret
 914               		.cfi_endproc
 915               	.LFE42:
 917               		.section	.text.set_oneshot_mods,"ax",@progbits
 918               	.global	set_oneshot_mods
 920               	set_oneshot_mods:
 921               	.LVL44:
 922               	.LFB43:
 360:tmk_core/common/action_util.c ****     if (!keymap_config.oneshot_disable) {
 923               		.loc 2 360 37 is_stmt 1 view -0
 924               		.cfi_startproc
 925               	/* prologue: function */
 926               	/* frame size = 0 */
 927               	/* stack size = 0 */
 928               	.L__stack_usage = 0
 361:tmk_core/common/action_util.c ****         if (oneshot_mods != mods) {
 929               		.loc 2 361 5 view .LVU168
 361:tmk_core/common/action_util.c ****         if (oneshot_mods != mods) {
 930               		.loc 2 361 23 is_stmt 0 view .LVU169
 931 0000 9091 0000 		lds r25,keymap_config+1
 361:tmk_core/common/action_util.c ****         if (oneshot_mods != mods) {
 932               		.loc 2 361 8 view .LVU170
 933 0004 92FD      		sbrc r25,2
 934 0006 00C0      		rjmp .L49
 362:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 935               		.loc 2 362 9 is_stmt 1 view .LVU171
 362:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 936               		.loc 2 362 12 is_stmt 0 view .LVU172
 937 0008 9091 0000 		lds r25,oneshot_mods
 938 000c 9817      		cp r25,r24
 939 000e 01F0      		breq .L49
 366:tmk_core/common/action_util.c ****             oneshot_mods_changed_kb(mods);
 940               		.loc 2 366 13 is_stmt 1 view .LVU173
 366:tmk_core/common/action_util.c ****             oneshot_mods_changed_kb(mods);
 941               		.loc 2 366 26 is_stmt 0 view .LVU174
 942 0010 8093 0000 		sts oneshot_mods,r24
 367:tmk_core/common/action_util.c ****         }
 943               		.loc 2 367 13 is_stmt 1 view .LVU175
 944 0014 0C94 0000 		jmp oneshot_mods_changed_kb
 945               	.LVL45:
 946               	.L49:
 947               	/* epilogue start */
 370:tmk_core/common/action_util.c **** 
 948               		.loc 2 370 1 is_stmt 0 view .LVU176
 949 0018 0895      		ret
 950               		.cfi_endproc
 951               	.LFE43:
 953               		.section	.text.clear_oneshot_mods,"ax",@progbits
 954               	.global	clear_oneshot_mods
 956               	clear_oneshot_mods:
 957               	.LFB44:
 376:tmk_core/common/action_util.c ****     if (oneshot_mods) {
 958               		.loc 2 376 31 is_stmt 1 view -0
 959               		.cfi_startproc
 960               	/* prologue: function */
 961               	/* frame size = 0 */
 962               	/* stack size = 0 */
 963               	.L__stack_usage = 0
 377:tmk_core/common/action_util.c ****         oneshot_mods = 0;
 964               		.loc 2 377 5 view .LVU178
 377:tmk_core/common/action_util.c ****         oneshot_mods = 0;
 965               		.loc 2 377 8 is_stmt 0 view .LVU179
 966 0000 8091 0000 		lds r24,oneshot_mods
 967 0004 8823      		tst r24
 968 0006 01F0      		breq .L51
 378:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 969               		.loc 2 378 9 is_stmt 1 view .LVU180
 378:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 970               		.loc 2 378 22 is_stmt 0 view .LVU181
 971 0008 1092 0000 		sts oneshot_mods,__zero_reg__
 382:tmk_core/common/action_util.c ****     }
 972               		.loc 2 382 9 is_stmt 1 view .LVU182
 973 000c 80E0      		ldi r24,0
 974 000e 0C94 0000 		jmp oneshot_mods_changed_kb
 975               	.LVL46:
 976               	.L51:
 977               	/* epilogue start */
 384:tmk_core/common/action_util.c **** #endif
 978               		.loc 2 384 1 is_stmt 0 view .LVU183
 979 0012 0895      		ret
 980               		.cfi_endproc
 981               	.LFE44:
 983               		.section	.text.send_keyboard_report,"ax",@progbits
 984               	.global	send_keyboard_report
 986               	send_keyboard_report:
 987               	.LFB24:
 228:tmk_core/common/action_util.c ****     keyboard_report->mods = real_mods;
 988               		.loc 2 228 33 is_stmt 1 view -0
 989               		.cfi_startproc
 990               	/* prologue: function */
 991               	/* frame size = 0 */
 992               	/* stack size = 0 */
 993               	.L__stack_usage = 0
 229:tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 994               		.loc 2 229 5 view .LVU185
 229:tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 995               		.loc 2 229 20 is_stmt 0 view .LVU186
 996 0000 E091 0000 		lds r30,keyboard_report
 997 0004 F091 0000 		lds r31,keyboard_report+1
 229:tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 998               		.loc 2 229 27 view .LVU187
 999 0008 8091 0000 		lds r24,real_mods
 1000 000c 8083      		st Z,r24
 230:tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 1001               		.loc 2 230 5 is_stmt 1 view .LVU188
 230:tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 1002               		.loc 2 230 27 is_stmt 0 view .LVU189
 1003 000e E091 0000 		lds r30,keyboard_report
 1004 0012 F091 0000 		lds r31,keyboard_report+1
 1005 0016 8081      		ld r24,Z
 1006 0018 9091 0000 		lds r25,weak_mods
 1007 001c 892B      		or r24,r25
 1008 001e 8083      		st Z,r24
 231:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 1009               		.loc 2 231 5 is_stmt 1 view .LVU190
 231:tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 1010               		.loc 2 231 27 is_stmt 0 view .LVU191
 1011 0020 E091 0000 		lds r30,keyboard_report
 1012 0024 F091 0000 		lds r31,keyboard_report+1
 1013 0028 8081      		ld r24,Z
 1014 002a 9091 0000 		lds r25,macro_mods
 1015 002e 892B      		or r24,r25
 1016 0030 8083      		st Z,r24
 233:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1017               		.loc 2 233 5 is_stmt 1 view .LVU192
 233:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1018               		.loc 2 233 9 is_stmt 0 view .LVU193
 1019 0032 9091 0000 		lds r25,oneshot_mods
 233:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1020               		.loc 2 233 8 view .LVU194
 1021 0036 9923      		tst r25
 1022 0038 01F0      		breq .L55
 240:tmk_core/common/action_util.c ****         if (has_anykey(keyboard_report)) {
 1023               		.loc 2 240 9 is_stmt 1 view .LVU195
 240:tmk_core/common/action_util.c ****         if (has_anykey(keyboard_report)) {
 1024               		.loc 2 240 31 is_stmt 0 view .LVU196
 1025 003a E091 0000 		lds r30,keyboard_report
 1026 003e F091 0000 		lds r31,keyboard_report+1
 1027 0042 8081      		ld r24,Z
 1028 0044 892B      		or r24,r25
 1029 0046 8083      		st Z,r24
 241:tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1030               		.loc 2 241 9 is_stmt 1 view .LVU197
 241:tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1031               		.loc 2 241 13 is_stmt 0 view .LVU198
 1032 0048 8091 0000 		lds r24,keyboard_report
 1033 004c 9091 0000 		lds r25,keyboard_report+1
 1034 0050 0E94 0000 		call has_anykey
 1035               	.LVL47:
 241:tmk_core/common/action_util.c ****             clear_oneshot_mods();
 1036               		.loc 2 241 12 view .LVU199
 1037 0054 8111      		cpse r24,__zero_reg__
 242:tmk_core/common/action_util.c ****         }
 1038               		.loc 2 242 13 is_stmt 1 view .LVU200
 1039 0056 0E94 0000 		call clear_oneshot_mods
 1040               	.LVL48:
 1041               	.L55:
 247:tmk_core/common/action_util.c **** }
 1042               		.loc 2 247 5 view .LVU201
 1043 005a 8091 0000 		lds r24,keyboard_report
 1044 005e 9091 0000 		lds r25,keyboard_report+1
 1045 0062 0C94 0000 		jmp host_keyboard_send
 1046               	.LVL49:
 1047               		.cfi_endproc
 1048               	.LFE24:
 1050               		.section	.text.oneshot_layer_changed_user,"ax",@progbits
 1051               		.weak	oneshot_layer_changed_user
 1053               	oneshot_layer_changed_user:
 1054               	.LFB55:
 1055               		.cfi_startproc
 1056               	/* prologue: function */
 1057               	/* frame size = 0 */
 1058               	/* stack size = 0 */
 1059               	.L__stack_usage = 0
 1060               	/* epilogue start */
 1061 0000 0895      		ret
 1062               		.cfi_endproc
 1063               	.LFE55:
 1065               		.section	.text.oneshot_layer_changed_kb,"ax",@progbits
 1066               		.weak	oneshot_layer_changed_kb
 1068               	oneshot_layer_changed_kb:
 1069               	.LVL50:
 1070               	.LFB50:
 410:tmk_core/common/action_util.c **** 
 411:tmk_core/common/action_util.c **** /** \brief Called when the one shot layers have been changed.
 412:tmk_core/common/action_util.c ****  *
 413:tmk_core/common/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 414:tmk_core/common/action_util.c ****  */
 415:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_user(uint8_t layer) {}
 416:tmk_core/common/action_util.c **** 
 417:tmk_core/common/action_util.c **** /** \brief Called when the one shot layers have been changed.
 418:tmk_core/common/action_util.c ****  *
 419:tmk_core/common/action_util.c ****  * \param layer Contains the layer that is toggled on, or zero when toggled off.
 420:tmk_core/common/action_util.c ****  */
 421:tmk_core/common/action_util.c **** __attribute__((weak)) void oneshot_layer_changed_kb(uint8_t layer) { oneshot_layer_changed_user(lay
 1071               		.loc 2 421 68 view -0
 1072               		.cfi_startproc
 1073               	/* prologue: function */
 1074               	/* frame size = 0 */
 1075               	/* stack size = 0 */
 1076               	.L__stack_usage = 0
 1077               		.loc 2 421 70 view .LVU203
 1078 0000 0C94 0000 		jmp oneshot_layer_changed_user
 1079               	.LVL51:
 1080               		.loc 2 421 70 is_stmt 0 view .LVU204
 1081               		.cfi_endproc
 1082               	.LFE50:
 1084               		.section	.text.set_oneshot_layer,"ax",@progbits
 1085               	.global	set_oneshot_layer
 1087               	set_oneshot_layer:
 1088               	.LVL52:
 1089               	.LFB15:
 149:tmk_core/common/action_util.c ****     if (!keymap_config.oneshot_disable) {
 1090               		.loc 2 149 54 is_stmt 1 view -0
 1091               		.cfi_startproc
 1092               	/* prologue: function */
 1093               	/* frame size = 0 */
 1094               	/* stack size = 0 */
 1095               	.L__stack_usage = 0
 150:tmk_core/common/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1096               		.loc 2 150 5 view .LVU206
 150:tmk_core/common/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1097               		.loc 2 150 23 is_stmt 0 view .LVU207
 1098 0000 9091 0000 		lds r25,keymap_config+1
 150:tmk_core/common/action_util.c ****         oneshot_layer_data = layer << 3 | state;
 1099               		.loc 2 150 8 view .LVU208
 1100 0004 92FD      		sbrc r25,2
 1101 0006 00C0      		rjmp .L63
 151:tmk_core/common/action_util.c ****         layer_on(layer);
 1102               		.loc 2 151 9 is_stmt 1 view .LVU209
 151:tmk_core/common/action_util.c ****         layer_on(layer);
 1103               		.loc 2 151 36 is_stmt 0 view .LVU210
 1104 0008 98E0      		ldi r25,lo8(8)
 1105 000a 899F      		mul r24,r25
 1106 000c 9001      		movw r18,r0
 1107 000e 1124      		clr __zero_reg__
 151:tmk_core/common/action_util.c ****         layer_on(layer);
 1108               		.loc 2 151 41 view .LVU211
 1109 0010 622B      		or r22,r18
 1110               	.LVL53:
 151:tmk_core/common/action_util.c ****         layer_on(layer);
 1111               		.loc 2 151 28 view .LVU212
 1112 0012 6093 0000 		sts oneshot_layer_data,r22
 152:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1113               		.loc 2 152 9 is_stmt 1 view .LVU213
 1114 0016 0E94 0000 		call layer_on
 1115               	.LVL54:
 156:tmk_core/common/action_util.c ****     } else {
 1116               		.loc 2 156 9 view .LVU214
 1117               	.LBB15:
 1118               	.LBI15:
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1119               		.loc 2 83 16 view .LVU215
 1120               	.LBB16:
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1121               		.loc 2 83 42 view .LVU216
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1122               		.loc 2 83 68 is_stmt 0 view .LVU217
 1123 001a 8091 0000 		lds r24,oneshot_layer_data
 1124               	.LBE16:
 1125               	.LBE15:
 156:tmk_core/common/action_util.c ****     } else {
 1126               		.loc 2 156 9 view .LVU218
 1127 001e 8595      		asr r24
 1128 0020 8595      		asr r24
 1129 0022 8595      		asr r24
 1130 0024 0C94 0000 		jmp oneshot_layer_changed_kb
 1131               	.LVL55:
 1132               	.L63:
 158:tmk_core/common/action_util.c ****     }
 1133               		.loc 2 158 9 is_stmt 1 view .LVU219
 1134 0028 0C94 0000 		jmp layer_on
 1135               	.LVL56:
 158:tmk_core/common/action_util.c ****     }
 1136               		.loc 2 158 9 is_stmt 0 view .LVU220
 1137               		.cfi_endproc
 1138               	.LFE15:
 1140               		.section	.text.reset_oneshot_layer,"ax",@progbits
 1141               	.global	reset_oneshot_layer
 1143               	reset_oneshot_layer:
 1144               	.LFB16:
 165:tmk_core/common/action_util.c ****     oneshot_layer_data = 0;
 1145               		.loc 2 165 32 is_stmt 1 view -0
 1146               		.cfi_startproc
 1147               	/* prologue: function */
 1148               	/* frame size = 0 */
 1149               	/* stack size = 0 */
 1150               	.L__stack_usage = 0
 166:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1151               		.loc 2 166 5 view .LVU222
 166:tmk_core/common/action_util.c **** #    if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 1152               		.loc 2 166 24 is_stmt 0 view .LVU223
 1153 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 170:tmk_core/common/action_util.c **** }
 1154               		.loc 2 170 5 is_stmt 1 view .LVU224
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1155               		.loc 2 83 42 view .LVU225
 170:tmk_core/common/action_util.c **** }
 1156               		.loc 2 170 5 is_stmt 0 view .LVU226
 1157 0004 80E0      		ldi r24,0
 1158 0006 0C94 0000 		jmp oneshot_layer_changed_kb
 1159               	.LVL57:
 1160               		.cfi_endproc
 1161               	.LFE16:
 1163               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 1164               	.global	clear_oneshot_layer_state
 1166               	clear_oneshot_layer_state:
 1167               	.LVL58:
 1168               	.LFB17:
 176:tmk_core/common/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 1169               		.loc 2 176 62 is_stmt 1 view -0
 1170               		.cfi_startproc
 1171               	/* prologue: function */
 1172               	/* frame size = 0 */
 1173               	/* stack size = 0 */
 1174               	.L__stack_usage = 0
 177:tmk_core/common/action_util.c ****     oneshot_layer_data &= ~state;
 1175               		.loc 2 177 5 view .LVU228
 177:tmk_core/common/action_util.c ****     oneshot_layer_data &= ~state;
 1176               		.loc 2 177 13 is_stmt 0 view .LVU229
 1177 0000 9091 0000 		lds r25,oneshot_layer_data
 1178               	.LVL59:
 178:tmk_core/common/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1179               		.loc 2 178 5 is_stmt 1 view .LVU230
 178:tmk_core/common/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1180               		.loc 2 178 24 is_stmt 0 view .LVU231
 1181 0004 8095      		com r24
 1182               	.LVL60:
 178:tmk_core/common/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1183               		.loc 2 178 24 view .LVU232
 1184 0006 8923      		and r24,r25
 1185               	.LVL61:
 178:tmk_core/common/action_util.c ****     if ((!get_oneshot_layer_state() && start_state != oneshot_layer_data) || keymap_config.oneshot_
 1186               		.loc 2 178 24 view .LVU233
 1187 0008 8093 0000 		sts oneshot_layer_data,r24
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1188               		.loc 2 179 5 is_stmt 1 view .LVU234
 1189               	.LBB17:
 1190               	.LBI17:
  84:tmk_core/common/action_util.c **** 
 1191               		.loc 2 84 16 view .LVU235
 1192               	.LBB18:
  84:tmk_core/common/action_util.c **** 
 1193               		.loc 2 84 48 view .LVU236
  84:tmk_core/common/action_util.c **** 
 1194               		.loc 2 84 74 is_stmt 0 view .LVU237
 1195 000c 282F      		mov r18,r24
 1196 000e 2770      		andi r18,lo8(7)
 1197               	.LBE18:
 1198               	.LBE17:
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1199               		.loc 2 179 8 view .LVU238
 1200 0010 01F4      		brne .L66
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1201               		.loc 2 179 52 discriminator 1 view .LVU239
 1202 0012 282F      		mov r18,r24
 1203 0014 082E      		mov __tmp_reg__,r24
 1204 0016 000C      		lsl r0
 1205 0018 330B      		sbc r19,r19
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1206               		.loc 2 179 37 discriminator 1 view .LVU240
 1207 001a 9217      		cp r25,r18
 1208 001c 1306      		cpc __zero_reg__,r19
 1209 001e 01F4      		brne .L67
 1210               	.L66:
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1211               		.loc 2 179 75 discriminator 3 view .LVU241
 1212 0020 9091 0000 		lds r25,keymap_config+1
 1213               	.LVL62:
 179:tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 1214               		.loc 2 179 75 discriminator 3 view .LVU242
 1215 0024 92FF      		sbrs r25,2
 1216 0026 00C0      		rjmp .L65
 1217               	.L67:
 180:tmk_core/common/action_util.c ****         reset_oneshot_layer();
 1218               		.loc 2 180 9 is_stmt 1 view .LVU243
 1219               	.LBB19:
 1220               	.LBI19:
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1221               		.loc 2 83 16 view .LVU244
 1222               	.LBB20:
  83:tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 1223               		.loc 2 83 42 view .LVU245
 1224               	.LBE20:
 1225               	.LBE19:
 180:tmk_core/common/action_util.c ****         reset_oneshot_layer();
 1226               		.loc 2 180 9 is_stmt 0 view .LVU246
 1227 0028 8595      		asr r24
 1228 002a 8595      		asr r24
 1229 002c 8595      		asr r24
 1230 002e 0E94 0000 		call layer_off
 1231               	.LVL63:
 181:tmk_core/common/action_util.c ****     }
 1232               		.loc 2 181 9 is_stmt 1 view .LVU247
 1233 0032 0C94 0000 		jmp reset_oneshot_layer
 1234               	.LVL64:
 1235               	.L65:
 1236               	/* epilogue start */
 183:tmk_core/common/action_util.c **** /** \brief Is oneshot layer active
 1237               		.loc 2 183 1 is_stmt 0 view .LVU248
 1238 0036 0895      		ret
 1239               		.cfi_endproc
 1240               	.LFE17:
 1242               		.section	.text.has_anymod,"ax",@progbits
 1243               	.global	has_anymod
 1245               	has_anymod:
 1246               	.LFB51:
 422:tmk_core/common/action_util.c **** 
 423:tmk_core/common/action_util.c **** /** \brief inspect keyboard state
 424:tmk_core/common/action_util.c ****  *
 425:tmk_core/common/action_util.c ****  * FIXME: needs doc
 426:tmk_core/common/action_util.c ****  */
 427:tmk_core/common/action_util.c **** uint8_t has_anymod(void) { return bitpop(real_mods); }
 1247               		.loc 2 427 26 is_stmt 1 view -0
 1248               		.cfi_startproc
 1249               	/* prologue: function */
 1250               	/* frame size = 0 */
 1251               	/* stack size = 0 */
 1252               	.L__stack_usage = 0
 1253               		.loc 2 427 28 view .LVU250
 1254               		.loc 2 427 35 is_stmt 0 view .LVU251
 1255 0000 8091 0000 		lds r24,real_mods
 1256 0004 0C94 0000 		jmp bitpop
 1257               	.LVL65:
 1258               		.cfi_endproc
 1259               	.LFE51:
 1261               		.section	.progmem.data.__c.2744,"a"
 1264               	__c.2744:
 1265 0000 4F6E 6573 		.string	"Oneshot: active: %d\n"
 1265      686F 743A 
 1265      2061 6374 
 1265      6976 653A 
 1265      2025 640A 
 1266               		.section	.bss.oneshot_layer_data,"aw",@nobits
 1269               	oneshot_layer_data:
 1270 0000 00        		.zero	1
 1271               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 1274               	oneshot_locked_mods:
 1275 0000 00        		.zero	1
 1276               		.section	.bss.oneshot_mods,"aw",@nobits
 1279               	oneshot_mods:
 1280 0000 00        		.zero	1
 1281               	.global	keyboard_report
 1282               		.section	.data.keyboard_report,"aw"
 1285               	keyboard_report:
 1286 0000 0000      		.word	__compound_literal.0
 1287               		.section	.bss.__compound_literal.0,"aw",@nobits
 1290               	__compound_literal.0:
 1291 0000 0000 0000 		.zero	8
 1291      0000 0000 
 1292               		.section	.bss.macro_mods,"aw",@nobits
 1295               	macro_mods:
 1296 0000 00        		.zero	1
 1297               		.section	.bss.weak_mods,"aw",@nobits
 1300               	weak_mods:
 1301 0000 00        		.zero	1
 1302               		.section	.bss.real_mods,"aw",@nobits
 1305               	real_mods:
 1306 0000 00        		.zero	1
 1307               		.text
 1308               	.Letext0:
 1309               		.file 3 "e:\\game\\msys2\\mingw64\\avr\\include\\stdint.h"
 1310               		.file 4 "tmk_core/common/report.h"
 1311               		.file 5 "tmk_core/common/host.h"
 1312               		.file 6 "tmk_core/common/avr/xprintf.h"
 1313               		.file 7 "tmk_core/common/debug.h"
 1314               		.file 8 "tmk_core/common/action.h"
 1315               		.file 9 "tmk_core/common/action_layer.h"
 1316               		.file 10 "tmk_core/common/timer.h"
 1317               		.file 11 "quantum/keycode_config.h"
 1318               		.file 12 "quantum/bitwise.h"
 1319               		.file 13 "tmk_core/common/eeconfig.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:4      *ABS*:000000000000003f __SREG__
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:13     .text.add_key:0000000000000000 add_key
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1285   .data.keyboard_report:0000000000000000 keyboard_report
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:38     .text.del_key:0000000000000000 del_key
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:62     .text.clear_keys:0000000000000000 clear_keys
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:81     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1274   .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:101    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:120    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1269   .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:143    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:164    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:197    .text.oneshot_set:0000000000000000 oneshot_set
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1264   .progmem.data.__c.2744:0000000000000000 __c.2744
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:279    .text.oneshot_toggle:0000000000000000 oneshot_toggle
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:304    .text.oneshot_enable:0000000000000000 oneshot_enable
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:322    .text.oneshot_disable:0000000000000000 oneshot_disable
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:340    .text.is_oneshot_enabled:0000000000000000 is_oneshot_enabled
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:363    .text.get_mods:0000000000000000 get_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1305   .bss.real_mods:0000000000000000 real_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:382    .text.add_mods:0000000000000000 add_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:407    .text.del_mods:0000000000000000 del_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:433    .text.set_mods:0000000000000000 set_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:454    .text.clear_mods:0000000000000000 clear_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:474    .text.get_weak_mods:0000000000000000 get_weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1300   .bss.weak_mods:0000000000000000 weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:493    .text.add_weak_mods:0000000000000000 add_weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:518    .text.del_weak_mods:0000000000000000 del_weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:544    .text.set_weak_mods:0000000000000000 set_weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:565    .text.clear_weak_mods:0000000000000000 clear_weak_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:585    .text.get_macro_mods:0000000000000000 get_macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1295   .bss.macro_mods:0000000000000000 macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:604    .text.add_macro_mods:0000000000000000 add_macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:629    .text.del_macro_mods:0000000000000000 del_macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:655    .text.set_macro_mods:0000000000000000 set_macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:676    .text.clear_macro_mods:0000000000000000 clear_macro_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:696    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1279   .bss.oneshot_mods:0000000000000000 oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:715    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:715    .text.oneshot_locked_mods_changed_user:0000000000000000 oneshot_locked_mods_changed_user.localalias.0
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:735    .text.oneshot_locked_mods_changed_kb:0000000000000000 oneshot_locked_mods_changed_kb
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:754    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:784    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:814    .text.oneshot_mods_changed_user:0000000000000000 oneshot_mods_changed_user
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:829    .text.oneshot_mods_changed_kb:0000000000000000 oneshot_mods_changed_kb
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:848    .text.add_oneshot_mods:0000000000000000 add_oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:882    .text.del_oneshot_mods:0000000000000000 del_oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:920    .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:956    .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:986    .text.send_keyboard_report:0000000000000000 send_keyboard_report
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1053   .text.oneshot_layer_changed_user:0000000000000000 oneshot_layer_changed_user
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1068   .text.oneshot_layer_changed_kb:0000000000000000 oneshot_layer_changed_kb
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1087   .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1143   .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1166   .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1245   .text.has_anymod:0000000000000000 has_anymod
C:\Users\Roningo\AppData\Local\Temp\cc0SOhyR.s:1290   .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
keymap_config
eeconfig_update_keymap
debug_config
__xprintf
has_anykey
host_keyboard_send
layer_on
layer_off
bitpop
__do_copy_data
__do_clear_bss
